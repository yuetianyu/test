<?xml version="1.0"?>
<doc>
  <assembly>
    <name>FarPoint.Win</name>
  </assembly>
  <members>
    <member name="T:FarPoint.Win.SuperEdit.AbstractFmtParsed">
      <summary>
            AbstractFmtParsedクラスを実装します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParsed.FromFormattedString(System.String)">
      <summary>
            書式付き文字列の「値」を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParsed.ToFormattedString(System.Object)">
      <summary>
            渡された値の書式付き文字列（および属性）を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParsed.FromUnformattedString(System.String)">
      <summary>
            書式なし文字列の「値」を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParsed.ToUnformattedString(System.Object)">
      <summary>
            渡された値の書式なし文字列を返します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.AbstractFmtParsed.HasRegionSettings">
      <summary>
            特定の地域設定セット（デフォルト以外）を
            持っているかどうかを指定するプロパティ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.AbstractFmtParsed.RegionSettings">
      <summary>
            地域設定を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.AbstractFmtParser">
      <summary>
            AbstractFmtParserクラスを実装します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AbstractFmtParser.FORMAT_PREDEFINED_COLORS">
      <summary>
            文字列テーブルの定数。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AbstractFmtParser.parseErrorCharIndex">
      <summary>
            書式文字列の解析中にエラーがあると、
            問題が開始する先頭文字の
            インデックスを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AbstractFmtParser.stringTable">
      <summary>
            StringTableで使用するディクショナリを設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AbstractFmtParser.defaultStringTable">
      <summary>
            文字列テーブルが指定されていない場合のデフォルト文字列テーブル。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParser.CreateDefaultStringTable">
      <summary>
            呼び出されるとデフォルト文字列テーブルを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.AbstractFmtParser.ParseFormatString(System.String,FarPoint.Win.SuperEdit.MaskType)">
      <summary>
            書式文字列を各部分に解析します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.AbstractFmtParser.StrTblComparer">
      <summary>
            このクラスは、デフォルト文字列テーブルを実装するための
            簡単な実装を提供します。文字列テーブルのKEYは１つの
            整数にすぎないため、２つの整数を比較するこの１つの
            メソッドがあるだけです。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.EraList">
      <summary>
            EraList
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.EraList.IsDateInEra(System.DateTime,System.Int32)">
      <summary>
            指定した日付がこの年号の開始日と終了日の間にある場合に
            Trueを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.EraList.AdjustDateForEra(FarPoint.Win.SuperEdit.EraList,System.DateTime,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            このメソッドは指定された日付のある期間に対応する
            年号の日付を調整します。成功した場合はTrueを返し、
            調整できない場合はFalseを返します。注意：「年号」は
            １から始まります（1～eraList.Length）。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtParsedExcel">
      <summary>
            ParsedFmtString
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.FMT_COND_POS">
      <summary>
            これらを使用して配列のインデックスを定義します。
            最後は条件の数です。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedExcel.FromFormattedString(System.String)">
      <summary>
            書式付き文字列の「値」を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedExcel.ToFormattedString(System.Object)">
      <summary>
            渡された値の書式付き文字列（および属性）を返します。
            返されるオブジェクトは、文字列から派生した
            FormattedExcelString型のオブジェクトです。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.fmtStrList">
      <summary>
            各型の書式文字列（正、負、ゼロ、テキスト、
            または成功／失敗の条件）。
            この配列は最大「NUM_OF_CONDS」個の要素（4）を持つことができます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.fmtStrStartIndex">
      <summary>
            各書式「セクション」が開始する位置の追跡記録を管理します。
            各部分の元の書式文字列へのインデックスを格納します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.fmtColorList">
      <summary>
            各型の書式文字列（正、負、ゼロ、テキスト、
            または成功／失敗の条件）。
            この配列は最大「NUM_OF_CONDS」個の要素（4）を持つことができます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.operand">
      <summary>
            オペランドは複数のメソッドによって使用される一時変数です。値：
            0 - 条件なし、
            1 - 小なり（&amp;lt;）、
            2 - 以下（&amp;lt;=）、
            3 - 等しい（=）、
            4 - 以上（&amp;gt;=）、
            5 - 大なり（&amp;gt;）、
            6 - 等しくない（≠）
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedExcel.testValue">
      <summary>
            使用する書式文字列を決定するために、渡される
            値と比較する値。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtParsedExcel.CompareType">
      <summary>
            0 - 条件なし、
            1 - 小なり（&amp;lt;）、
            2 - 以下（&amp;lt;=）、
            3 - 等しい（=）、
            4 - 以上（&amp;gt;=）、
            5 - 大なり（&amp;gt;）、
            6 - 等しくない（≠）
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.CustomMaskEventArgs">
      <summary>
            CustomMaskイベントのイベントデータを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.CustomMaskEventArgs.#ctor(System.Int32,System.Char)">
      <summary>
            新しいCustomMaskEventArgsオブジェクトを構築します。
            </summary>
      <param name="mask">マスクのインデックス</param>
      <param name="inChar">マスクの入力文字</param>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.CustomMaskEventArgs.InputCharacter">
      <summary>
            入力文字を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.CustomMaskEventArgs.CustomMaskCharacter">
      <summary>
            カスタムマスク文字を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.CustomMaskEventArgs.CustomMaskIndex">
      <summary>
            カスタムマスクのインデックスを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.CustomMaskEventArgs.Valid">
      <summary>
            値が有効かどうかを表すブール値を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.CustomMaskEventHandler">
      <summary>
            CustomMaskイベントを処理する定義済みメソッドを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtParsedPicMask">
      <summary>
            FmtParsedPicMask
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.IManageFmtInput">
      <summary>
            IManageFmtInput - 指定したユーザー入力アクションが
            書式に対して有効かどうかを判定する手段を提供し、
            アクションの結果を供給するインタフェース。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetInitialText">
      <summary>
            これは書式の初期テキストを返します。新しい値を開始するときに
            使用します。注意：これは、選択されたすべてのテキストから
            呼び出された「ChangeText()」と、Nullまたは空の
            「insertText」引数と同じ結果になります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.CharInput(System.Int32,System.Char,System.String,System.Int32,System.Int32,System.String@,System.Int32@,System.Boolean)">
      <summary>
            指定された条件で文字を許可した場合、結果の
            テキストと位置を返します。許可しない場合は
            Falseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.ChangeText(System.String,System.Int32,System.Int32,System.String,System.String@,System.Int32@,System.Boolean)">
      <summary>
            指定された条件で変更を許可した場合、結果の
            テキストと位置を返します。（無効な入力による）
            変更が行われなかった場合、Falseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.ChangeText(System.String,System.String@)">
      <summary>
            指定された条件で変更を許可した場合、
            結果のテキストを返します。（無効な入力による）
            変更が行われなかった場合、Falseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetInitialInputPos(System.String)">
      <summary>
            指定したテキストの初期入力位置を返します。
            この初期位置は最初の入力位置でない場合があります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.IsInputAllowedAtPos(System.String,System.Int32)">
      <summary>
            指定したテキストの指定した位置（インデックス）の
            入力を許可するかどうかを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetLastPosInputIsAllowed(System.String)">
      <summary>
            指定したテキストの入力を受け取れる
            最後の位置を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetNextInputPos(System.String,System.Int32,System.Int32)">
      <summary>
            方向、現在のテキスト、および現在の位置によって
            決まる次の入力位置を返します。
            方向が-1の場合は前を意味します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetCaretTypeAtPos(System.String,System.Int32)">
      <summary>
            指定したテキストの位置を表す値、InputPosType.InsertPos、
            .FixedFldPos、.LiteralPosのいずれかを
            返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.IncrementValue(System.String,System.Int32,System.Object,System.Boolean,System.Object,System.String@,System.Int32@)">
      <summary>
            テキストが表す値を（「incrAmt」の記号に応じて）
            インクリメントまたはデクリメントします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.GetFormatStringAtPos(System.String,System.Int32)">
      <summary>
            指定したテキストの指定した位置のフィールドに対する
            書式文字を返します。
            例：Format String: "d/mm/yy"、currText: "25/12/02"
                     position: 3。このメソッドは"mm"を返します。
                     位置が無効の場合、""を返します。
            リテラル位置の場合、その位置の文字の前にバックスラッシュを
            付けて返します（"\c"。「c」は実際の文字）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.IManageFmtInput.IsNegative(System.String)">
      <summary>
            地域設定に従って文字列が負であるかどうかを返します。
            </summary>
      <param name="text">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IManageFmtInput.MinimumValue">
      <summary>
            最小値（オプション）。クリアするにはNullに設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IManageFmtInput.MaximumValue">
      <summary>
            最大値（オプション）。クリアするにはNullに設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IManageFmtInput.InitialValue">
      <summary>
            文字列がNullの場合は初期値（オプション）。
            クリアするにはNullに設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.FromFormattedString(System.String)">
      <summary>
            書式付き文字列の値を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.ToFormattedString(System.Object)">
      <summary>
            渡された値の書式付き文字列（および属性）を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.FromUnformattedString(System.String)">
      <summary>
            書式なし文字列の値を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.ToUnformattedString(System.Object)">
      <summary>
            渡された値の書式なし文字列を返します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedPicMask.maskList">
      <summary>
            マスク文字とリテラルのリスト。リテラルの場合、
            maskList内の位置はその位置にリテラルがあることを
            指定するだけで、実際のリテラル文字を取得するには
            「literals」フィールドからそれを取得する必要があります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetInitialText">
      <summary>
            これは書式の初期テキストを返します。新しい値を開始するときに
            使用します。注意：これは、選択されたすべてのテキストから
            呼び出された「ChangeText()」と、Nullまたは空の
            「insertText」引数と同じ結果になります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.CharInput(System.Int32,System.Char,System.String,System.Int32,System.Int32,System.String@,System.Int32@,System.Boolean)">
      <summary>
            指定された条件で文字を許可した場合、結果の
            テキストと位置を返します。許可しない場合は
            Falseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.ChangeText(System.String,System.String@)">
      <summary>
            指定された条件で変更を許可した場合、
            結果のテキストを返します。（無効な入力による）
            変更が行われなかった場合、Falseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.ChangeText(System.String,System.Int32,System.Int32,System.String,System.String@,System.Int32@,System.Boolean)">
      <summary>
            指定された条件で変更を許可した場合、結果の
            テキストと位置を返します。（無効な入力による）
            変更が行われなかった場合、Falseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetInitialInputPos(System.String)">
      <summary>
            指定したテキストの初期入力位置を返します。
            この初期位置は最初の入力位置でない場合があります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.IsInputAllowedAtPos(System.String,System.Int32)">
      <summary>
            指定したテキストの指定した位置（インデックス）の
            入力を許可するかどうかを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetLastPosInputIsAllowed(System.String)">
      <summary>
            指定したテキストの入力を受け取れる
            最後の位置を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetNextInputPos(System.String,System.Int32,System.Int32)">
      <summary>
            方向、現在のテキスト、および現在の位置によって決まる
            次の入力位置を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetCaretTypeAtPos(System.String,System.Int32)">
      <summary>
            指定したテキストの位置を表す値、InputPosType.InsertPos、
            .FixedFldPos、.LiteralPosのいずれかを
            返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.IncrementValue(System.String,System.Int32,System.Object,System.Boolean,System.Object,System.String@,System.Int32@)">
      <summary>
            テキストが表す値を（「incrAmt」の記号に応じて）
            インクリメントまたはデクリメントします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedPicMask.GetFormatStringAtPos(System.String,System.Int32)">
      <summary>
            指定したテキストの指定した位置のフィールドに対する
            書式文字を返します。
            例：Format String: "d/mm/yy"、currText: "25/12/02"
                     position: 3。このメソッドは"mm"を返します。
                     位置が無効の場合、""を返します。
            リテラル位置の場合、その位置の文字の前にバックスラッシュを
            付けて返します（"\c"。「c」は実際の文字）。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.FmtParsedPicMask.MinimumValue">
      <summary>
            最小値（オプション）。クリアするにはNullに設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.FmtParsedPicMask.MaximumValue">
      <summary>
            最大値（オプション）。クリアするにはNullに設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.FmtParsedPicMask.InitialValue">
      <summary>
            文字列がNullの場合は初期値（オプション）。
            クリアするにはNullに設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtParsedTypeMask">
      <summary>
            ParsedTypeMaskString
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FromFormattedString(System.String)">
      <summary>
            書式付き文字列の「値」を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ToFormattedString(System.Object)">
      <summary>
            渡された値の書式付き文字列（および属性）を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FromUnformattedString(System.String)">
      <summary>
            書式なし文字列の「値」を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ChangeText(System.String,System.String@)">
      <summary>
            指定された条件で変更を許可した場合、
            結果のテキストを返します。（無効な入力による）
            変更が行われなかった場合、Falseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ChangeText(System.String,System.Int32,System.Int32,System.String,System.String@,System.Int32@,System.Boolean)">
      <summary>
            指定された条件で変更を許可した場合、結果の
            テキストと位置を返します。（無効な入力による）
            変更が行われなかった場合、Falseを返します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.displayLeadingZero">
      <summary>
            浮動小数点値が1.0未満で-1.0より大きい（0.xx）場合、
            先頭のゼロを表示するかどうかを決定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.daylessDate">
      <summary>
            日付書式を月と年のみにするかどうかを決定します。
            その場合、日にちは常に１であると見なされます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetFldStrList(System.Int32,FarPoint.Win.SuperEdit.IRegionalSettings)">
      <summary>
            このフィールドに関連付けられたリストがある場合それを返します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetAllValues(System.String)">
      <summary>
            「フィールド値」に渡されたテキスト文字列を解析してそのバイナリ値を、
            新たに割り当てたMaskFldValueオブジェクトに入れます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FmtFldIdAtPos(System.Int32,System.Int32@,System.Int32@,System.String,System.Int32,System.Boolean)">
      <summary>
            文字列内のこの位置に指定した書式フィールドIDを返します。
            
            注意：引数「uPos」のみが必須です。それ以外はすべてオプションです。
                  ただし、SpecialMaskのデータ型が浮動小数点値または整数の場合は
                  「tstrText」と「uTextLen」が必須になります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetVarFldLen(System.Int32,System.String,System.Int32)">
      <summary>
            テキストの開始位置の可変長フィールドの
            長さを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetBinaryValue(System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean@,System.Int32@)">
      <summary>
            この関数は指定されたフィールドタイプに対する文字の文字列を
            バイナリ値に変換します。  
            
            たとえば、フィールドタイプMM（２桁月）に「03」が指定された場合、
            引数「pBinaryValBuff」に３の値を返します。
            
            別の例を挙げると、フィールドタイプMM（３文字表示の月）に
            「JUN」が指定された場合、６の値を引数に返します。
            
            「fNormalizeStr」がTrueの場合、「eFldValFmt」がMaskFmtInt
            またはMaskFmtFltWhlのときにCopyNumberWithoutThSep()を呼び出します。
            
            文字列を変換できる場合、非Null値を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CopyNumberDigitsAndSign(System.String,System.Int32,System.Int32@,System.Int32@)">
      <summary>
            負号、小数点、数字以外をすべて取り除いた数値のテキストを
            バッファ同士でコピーします。返された長さ、
            および指定した現在の位置を調整します。OKの場合は
            新しい文字列、それ以外の場合はNullを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.AdjustInputLenForNumber(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32@,System.Boolean)">
      <summary>
            文字列を解析して、実際のテキストを参照する場合の
            このフィールドの真の長さを決定します。
            
            処理する次のインデックスを返します。フィールドに対する有効な文字が
            見つからなかった場合、開始インデックスを返します（uFldStartIndex）。
            
            引数「fFindFldEnd」はTrueのとき、この関数はフィールドの
            最後とみなすものに達するまですべての文字を処理します。
            それ以外の場合は「uTargetPos」の文字、
            または最初に現われるフィールドの最後を
            処理した後に停止します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.VerifyCharForFldAtPos(System.Char,System.Int32,System.String@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Boolean@)">
      <summary>
            フィールド値が有効範囲にあることを確認します（たとえば、月の場合は1～12。
            日の場合は1～31）。
            
            注意：ここでは、文字は有効文字のことです（数値の場合は
            数字、テキストフィールドの場合は文字。例：３文字表示の月）。
            
            文字を次のフィールドに適用する必要がある場合は２を返します。
            OKの場合は１、エラーの場合は０。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ProcessDayOfWeekChg(System.String@,System.Int32,System.Int32,System.Int32,System.Int32@)">
      <summary>
            処理が完了してOKの場合、Trueを返します。
            それ以外の場合は、最小範囲／最大範囲外の日付など
            エラーが発生した場合はFalseを返します。
            注意：引数posWithinFldは指定したフィールド内の
            現在の位置です。文字列内のこの位置をまず決定し、
            「posWithinFld」に追加する必要があります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ProcessEraChange(System.String@,System.Int32,System.Int32,System.Int32,System.Int32@)">
      <summary>
            処理が完了してOKの場合、Trueを返します。
            それ以外の場合は、最小範囲／最大範囲外の日付など
            エラーが発生した場合はFalseを返します。
            注意：引数posWithinFldは指定したフィールド内の
            現在の位置です。文字列内のこの位置をまず決定し、
            「posWithinFld」に追加する必要があります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.minValue">
      <summary>
            最小値（オプション）。クリアするにはNullに設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.maxValue">
      <summary>
            最大値（オプション）。クリアするにはNullに設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.FmtParsedTypeMask.initialValue">
      <summary>
            文字列がNullの場合は初期値（オプション）。
            クリアするにはNullに設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetInitialText">
      <summary>
            これは書式の初期テキストを返します。新しい値を開始するときに
            使用します。注意：これは、選択されたすべてのテキストから
            呼び出された「ChangeText()」と、Nullまたは空の
            「insertText」引数と同じ結果になります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CharInput(System.Int32,System.Char,System.String,System.Int32,System.Int32,System.String@,System.Int32@,System.Boolean)">
      <summary>
            指定された条件で文字を許可した場合、結果の
            テキストと位置を返します。許可しない場合は
            Falseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetInitialInputPos(System.String)">
      <summary>
            指定したテキストの初期入力位置を返します。
            この初期位置は最初の入力位置でない場合があります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.IsInputAllowedAtPos(System.String,System.Int32)">
      <summary>
            指定したテキストの指定した位置（インデックス）の
            入力を許可するかどうかを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetLastPosInputIsAllowed(System.String)">
      <summary>
            指定したテキストの入力を受け取れる
            最後の位置を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetNextInputPos(System.String,System.Int32,System.Int32)">
      <summary>
            方向、現在のテキスト、および現在の位置によって決まる
            次の入力位置を返します。有効な「次の位置」がない場合、
            -1を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetCaretTypeAtPos(System.String,System.Int32)">
      <summary>
            指定されたテキスト内の位置を表す値、
            INSERT_POS、FIXEDFLD_POS、LITERAL_POSの
            いずれかを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.VerifyInputKeyForNumber(System.Int32,System.Char,System.String,System.Int32,System.Int32,System.Int32@,System.Boolean)">
      <summary>
            数値（整数または浮動小数点値）の文字を処理します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetFmtFldFracStartPos(System.String,System.Int32)">
      <summary>
            浮動小数点値の小数部の、渡される文字列内の
            開始位置を返します。
            注意：「startPos」はオプションです（指定されていない場合は-1を渡します）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FindPosAtDecimal(System.String,System.Boolean)">
      <summary>
            小数点を基準とする新しいテキストと希望の位置が指定された場合、
            新しいテキスト内の新しいカーソル位置を
            決定します。  
            </summary>
      <returns>
            小数点が見つからない場合-1を返します。それ以外の場合は、
            小数点を基準とする正しい位置を返します。
            </returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FindNewCaretPosForNumStr(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>
            桁数内の新しいテキストと新しい位置が指定された場合、
            新しいテキスト内の新しいカーソル位置を決定します。  
            </summary>
      <remarks>
            桁数がわからない場合は、<i>maxNumOfDigits</i>引数に-1を指定します。
            </remarks>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetNumericDigitsInField(System.String,System.Int32)">
      <summary>
            beginPosから開始し、長さがmaxLengthの文字列の桁数をカウントします。
            maxLengthが-1の場合は、text.Lengthを使用します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.DeleteCharsFromNumStr(System.String,System.Int32,System.Int32,System.Boolean,System.String@,System.Int32@,System.Boolean@)">
      <summary>
            数値文字列（整数または浮動小数点値）から文字を削除します。
            小数点の左側の数値から数字と負号を削除し、
            小数点の右側から取り除いた桁をすべて０に
            置き換えます。エラーがない場合、TRUEを返します。
            任意の変更が文字列に行われた場合、返される
            パラメータ「retDataChanged」はTrueになります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.InsertStrIntoNumStr(System.String,System.Int32,System.String,System.Boolean,System.String@,System.Int32@,System.Boolean@)">
      <summary>
            数値文字列（整数または浮動小数点値）から文字を削除します。
            小数点の左側の数値から数字と負号を削除し、
            小数点の右側から取り除いた桁をすべて０に
            置き換えます。エラーがない場合、TRUEを返します。
            任意の変更が文字列に行われた場合、返される
            パラメータ「retDataChanged」はTrueになります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.FindFldPos(System.String,System.Int32,System.Int32@,System.Int32@)">
      <summary>
            指定したフィールドの開始位置と終了位置を返します。
            見つかった場合はTrue、それ以外の場合はFalseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.AdjustCaretPosForNumStr(System.String,System.Int32,System.String,System.Boolean)">
      <summary>
            古い文字列内の古い位置の桁数をカウントし、
            新しい文字列内の同じ位置を返します。
            
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.DeleteCharsFromDateTime(System.String,System.Int32,System.Int32,System.Boolean,System.String@,System.Int32@,System.Boolean@)">
      <summary>
            日付／時刻文字列から文字を削除します。
            すべての位置を０または空白に置き換えるだけで、実際に削除される
            文字はありません。「リセット」するだけです。エラーがない場合、
            TRUEを返します。任意の変更が文字列に行われた場合、
            返されるパラメータ「retDataChanged」はTrueになります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.InsertStrIntoDateTime(System.String,System.Int32,System.String,System.String@,System.Int32@,System.Boolean@)">
      <summary>
            日付／時刻文字列に文字を挿入します。
            エラーがない場合、TRUEを返します。任意の変更が文字列に行われた場合、
            返されるパラメータ「retDataChanged」はTrueになります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.SkipLitCharsInDateTimeInsertStr(System.Text.StringBuilder,System.Int32,System.String,System.Int32,System.Int32@)">
      <summary>
            このリテラル文字の文字列の後ろに配置するために参照する
            位置の「挿入文字列」へのインデックスを返します。
            挿入文字列内の文字がなくなった場合、「insertStr」の長さを
            挿入文字列へのインデックスとして返します。
            
            リテラル文字を含まない場合「currText」に
            文字を追加できることに注意してください。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.SkipSpecialLitCharsInDateTimeInsertStr(System.Text.StringBuilder,System.Int32,System.String,System.Int32,System.Int32@,System.Int32)">
      <summary>
            この特殊リテラル文字の文字列の後ろに配置するために
            参照する位置の「挿入文字列」へのインデックスを返します。
            挿入文字列内の文字がなくなった場合、「insertStr」の
            長さを挿入文字列へのインデックスとして返します。
            
            特殊リテラル文字（日付区切り記号、時刻区切り記号など）を含まない場合
            「currText」に文字を追加できることに注意してください。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetLiteralStrAtPos(System.Int32,System.Int32@,System.String)">
      <summary>
            「pos」のリテラル文字を返します。その位置に何もない場合、
            Nullを返します。「retBeginIndex」はテキスト内の
            リテラル文字列が開始する位置を返します。数値の場合、
            現在のテキストを引数として受け取らないので
            機能しません。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ValidateChanges(FarPoint.Win.SuperEdit.MaskFldValue,System.Boolean@)">
      <summary>
            この関数はフィールドが有効であることを確認し、
            範囲外である場合にそれらを変更します（日付または時刻の場合。
            整数と浮動小数点値は変更しません）。
            有効でなく変更できない場合はNullを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.ValidateChanges(System.String,System.Int32,System.Boolean@)">
      <summary>
            この関数はフィールドが有効であることを確認し、
            範囲外である場合にそれらを変更します（日付または時刻の場合。
            整数と浮動小数点値は変更しません）。
            有効でなく変更できない場合はNullを返します。
            </summary>
      <param name="text">テキスト文字列</param>
      <param name="beginPosOfNonFullFld">不完全なフィールドがない場合は-1を渡し、
            それ以外の場合はインデックスを指定します。</param>
      <param name="dataChanged">データが変更されたかどうか</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.IncrementValue(System.String,System.Int32,System.Object,System.Boolean,System.Object,System.String@,System.Int32@)">
      <summary>
            テキストが表す値を（「incrAmt」の記号に応じて）
            インクリメントまたはデクリメントします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithShortMonths(System.String,System.Int32@)">
      <summary>
            文字列が短い月名の１つに一致した場合は1～12の範囲の月インデックスを、
            それ以外の場合は-1を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithLongMonths(System.String,System.Int32@)">
      <summary>
            文字列が長い月名の１つに一致した場合は1～12の範囲の月インデックスを、
            それ以外の場合は-1を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithShortDays(System.String,System.Int32@)">
      <summary>
            文字列が短い曜日名の１つに一致した場合は1～7の範囲の曜日インデックスを、
            それ以外の場合は-1を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithLongDays(System.String,System.Int32@)">
      <summary>
            文字列が長い曜日名の１つに一致した場合は1～7の範囲の曜日インデックスを、
            それ以外は-1を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithAmPm(System.String,System.Int32@)">
      <summary>
            文字列がAmとPmのどちらかに一致した場合、
            0または1のAm/Pmインデックスを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithShortEras(System.String,System.Int32@)">
      <summary>
            文字列が年号のいずれかに一致した場合は、0～（年号数 - 1）の
            範囲の年号インデックス、それ以外の場合は-1を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CompareWithLongEras(System.String,System.Int32@)">
      <summary>
            文字列が年号のいずれかに一致した場合は、0～（年号数 - 1）の
            範囲の年号インデックス、それ以外の場合は-1を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.CmpStrWithStrListHelper(System.String[],System.String,System.Int32@)">
      <summary>
            s内の文字列に一致した場合、「リスト」（0～len - 1）への
            インデックスを返します。それ以外の場合は-1を返します。
            比較する際に文字列の長さは無視されます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.VerifyListFldValue(System.Int32,System.String)">
      <summary>
            指定したテキストに最も近い文字列を返します。
            一致しない場合Nullを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.PrivGetInitialLeadingText">
      <summary>
            最初の入力位置より前のテキストを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.GetFormatStringAtPos(System.String,System.Int32)">
      <summary>
            指定したテキストの指定した位置のフィールドに対する
            書式文字を返します。
            例：Format String: "d/mm/yy"、currText: "25/12/02"
                     position: 3。このメソッドは"mm"を返します。
                     位置が無効の場合、""を返します。
            リテラル位置の場合、その位置の文字の前にバックスラッシュを
            付けて返します（"\c"。「c」は実際の文字）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtParsedTypeMask.IsGregorianCalendar">
      <summary>
            現在グレゴリオ暦に基づいている場合、Trueを返します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtStrParserExcel">
      <summary>
            ParsedFmtString
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.#ctor">
      <summary>
            コンストラクタ（文字列テーブルオブジェクトなし）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.#ctor(System.Collections.IDictionary)">
      <summary>
            コンストラクタ（文字列テーブルディクショナリ付き）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.ParseFormatString(System.String,FarPoint.Win.SuperEdit.MaskType)">
      <summary>
            書式文字列を各部分に解析します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.GetColorForColorIndex(System.Int32)">
      <summary>
            「色インデックス」を.NETの「Color」オブジェクトに変換します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.DivideString(System.String,FarPoint.Win.SuperEdit.FmtParsedExcel@)">
      <summary>
            文字列をスキャンして、セミコロン（;）で区切った
            複数のセクションに区切ります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserExcel.ParseForConditionals(FarPoint.Win.SuperEdit.FmtParsedExcel@)">
      <summary>
            書式文字列の各「部分」を解析し、
            条件を探します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtStrParserExcel.FmtColor">
      <summary>
            書式文字列内で認識される色を定義します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtStrParserPicMask">
      <summary>
            ParsedPicMaskString
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserPicMask.ParseFormatString(System.String,FarPoint.Win.SuperEdit.MaskType)">
      <summary>
            書式文字列を各部分に解析します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserPicMask.GetMaskCodeForChar(System.Char)">
      <summary>
            渡された文字の「マスクコード」を返します。マスク文字でない場合、
            SE_MASK_LITを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserPicMask.IsMaskChar(System.Char)">
      <summary>
            文字がPic Maskセットのメンバである場合、TRUEを返します。 
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.FmtStrParserTypeMask">
      <summary>
            ParsedTypeMaskString
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.ParseFormatString(System.String,FarPoint.Win.SuperEdit.MaskType)">
      <summary>
            書式文字列を各部分に解析します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.ParseChar(System.String,System.Int32,System.Int32@,System.Char@,System.Int32@)">
      <summary>
            書式文字列の１文字を解析します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.MaxCharCountForParseFld(System.Int32)">
      <summary>
            このIDに許可するCの最大数を返します（例：「Y」の
            場合最大４個のY（YYYY）なので４を返します）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetLitSegNearFld(System.Int32,System.Boolean,System.Int32@,System.Int32@)">
      <summary>
            フィールド間にセグメントがない（FALSE）場合、Posに０、Lenに０が入ります。
            fBeforeFldがTRUEの場合フィールドの前、それ以外の場合はフィールドの後ろ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetLitSegBeforeFld(System.Int32,System.Int32@,System.Int32@)">
      <summary>
            フィールド間にセグメントがない（FALSE）場合、Posに０、Lenに０が入ります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.WasFldSpecifiedInString(System.Int32,System.Int32@)">
      <summary>
            指定したフィールドが書式文字列内に含まれていた場合、
            （文字列内の文字数と共に）TRUEを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetNumOfFields">
      <summary>
            m_uFormatOrderCountの値（見つかったフィールドの数）を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetFldIdAtOrderPos(System.Int32,System.Int32@,System.Int32@)">
      <summary>
            要求された順序インデックスにあるフィールドIDを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.FillFmtFldArrays">
      <summary>
            Parserオブジェクトから情報を取り出し、書式フィールド配列と
            区切り記号配列を設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.ValidateFldArrays(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.String)">
      <summary>
            このメソッドは可変長フィールドが、リテラル区切り記号
            （非数値）の間か、固定長フィールドの間に存在することを
            確認します。２つの数値の可変長フィールドを
            並べるときには必ず区切り記号で区切ります。
            さらに、可変長フィールドは固定長の数値フィールドの
            前に置くことはできません。
            問題がある場合、例外をスローします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.FmtStrParserTypeMask.GetFldFmtForParsedFldId(System.Int32,System.Int32)">
      <summary>
            指定したパーサーフィールドの書式マスクID（MaskFmtYY）を返します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.GeneralFormatter">
      <summary>
            GeneralFormatterインタフェースを実装します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.ISEditFormatter">
      <summary>
            値と文字列の相互変換を行う各種オブジェクトに必要な
            メソッドとプロパティを定義するインタフェース。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ISEditFormatter.FromFormattedString(System.String)">
      <summary>
            書式付き文字列の値を解析して返します。
            </summary>
      <param name="value">書式付き文字列</param>
      <returns>解析した値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ISEditFormatter.ToFormattedString(System.Object)">
      <summary>
            渡された値の書式付き文字列（および属性）を返します。
            </summary>
      <param name="value">値を含むオブジェクト</param>
      <returns>書式付き文字列（および属性）</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ISEditFormatter.FromUnformattedString(System.String)">
      <summary>
            書式なし文字列の値を解析して返します。
            </summary>
      <param name="value">書式なし文字列</param>
      <returns>解析した値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ISEditFormatter.ToUnformattedString(System.Object)">
      <summary>
            渡された値の書式なし文字列を返します。
            </summary>
      <param name="value">値を含むオブジェクト</param>
      <returns>書式なし文字列</returns>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ISEditFormatter.RegionSettings">
      <summary>
            地域設定（地域オプション）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ISEditFormatter.ManageInput">
      <summary>
            実装されている場合、ユーザー入力の検証および書式設定に使用する
            エディタを許可するメソッドをサポートします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.FromFormattedString(System.String)">
      <summary>
            書式付き文字列の「値」を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.ToFormattedString(System.Object)">
      <summary>
            渡された値の書式付き文字列（および属性）を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.FromUnformattedString(System.String,System.IFormatProvider@,System.String@)">
      <summary>
            書式なしの文字列の「値」を解析し、解析した文字列に関する追加情報と一緒に返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.FromUnformattedString(System.String)">
      <summary>
            書式なし文字列の「値」を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.GeneralFormatter.ToUnformattedString(System.Object)">
      <summary>
            渡された値の書式なし文字列を返します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.RegionSettings">
      <summary>
            地域設定を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.GeneralFormatter.ManageInput">
      <summary>
            このクラスは「管理入力」をサポートしません。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.MatchAbbrevList(System.String,System.String[],System.Int32@,System.Boolean)">
      <summary>
            渡された文字列が、リスト項目のいずれかに部分的または完全に一致した場合、
            （０ではなく）１から始まるインデックス番号を返します。
            文字列が複数の項目に一致するかどうかも示します。
            月や曜日の３文字表記の一致を確認するために使用します。
            一致しない場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.CmpStringsIgnoreLen(System.String,System.String)">
      <summary>
            長さを無視して２つの文字列を比較します。
            例："Ab"と"abCD"は等しいと見なされます。短い方の文字列が
            長い方のサブセットだからです。比較の際に長さが問題になるのは、
            一方が""（またはNull）で、もう一方が""（またはNull）ではない場合のみです。
            この場合、""は""以外の文字列より小さいと判断されます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.Match_AMPM_Strings(System.String,System.String,System.String,System.Int32@)">
      <summary>
            ターゲットに一致する最初の文字列のAM／PM文字列のリスト
            （0～uAmPmStrCount-1）へのインデックスを返します。
            
            文字列が複数の文字列に一致するかどうかも示します。
            
            一致しない場合は-1を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_MM_or_HH(System.Boolean)">
      <summary>
            OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_M_or_H(System.Boolean)">
      <summary>
            文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_DD">
      <summary>
            OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_D">
      <summary>
            文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_HH24">
      <summary>
            OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_H24">
      <summary>
            文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_NN_or_SS">
      <summary>
            OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_N_or_S">
      <summary>
            文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_AllDigits(System.Int32)">
      <summary>
            OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_ListFld(System.String[],System.Int32@)">
      <summary>
            文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.InputValidation.VerifyCharFor_Ts(System.String,System.String)">
      <summary>
            このメソッドは、strAMとstrPMからリストを作成し、
            VerifyCharFor_ListFld()を呼び出します。
            文字が次のフィールドの文字の場合は２、OKの場合は１、エラーの場合は０を返します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.InputPosType">
      <summary>
            マスクの種類のリスト（データ型ではない）。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.MaskFldValue">
      <summary>
            MaskFldValue
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.RemoveNegPosPattern(System.String,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            注意：このメソッドは、テキストが負のパターンを持つと仮定して
            文字位置を削除する場合に、テキストが実際に負のパターンを
            持つかどうかを確認しません。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.AdjustSelectionForNegPosPattern(System.Int32,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            負のパターンをテキストから削除した後に
            選択内容を調整します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.AdjustForValidValue">
      <summary>
            フィールド内の値が有効な日付または時刻（またはその両方）を構成することを確認します。
            有効でない場合は値を調整します。  
            
            注意：すべてのフィールドを指定する必要はありません。
            たとえば、日付フィールドに月と日のみを与えられた場合、
            日が月に対して有効であることを確認できます。
            ただし、年がないと、２月の正確な日数を特定することができません。
            それでも、少なくとも２月は29日より多くなることがないことはわかっています。
            
調整された値がある場合はTRUEを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.GetBinaryValue">
      <summary>
            「this」オブジェクトに格納された値の「バイナリオブジェクト」を返します。
            例：日付の場合はDateTimeオブジェクトを返します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.FormatThousSep(System.Boolean,System.String,System.Int32,System.String)">
      <summary>
            FormatValue()で使用し、負号と３桁区切り記号を追加します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.PrivAdjustForLimitVal(System.Object,System.Boolean,System.Boolean,System.Object)">
      <summary>
      </summary>
      <returns>調整が必要な場合は１、調整不要の場合は０、
            エラーがあった場合は-1を返します。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.GetMonthsInYear">
      <summary>
            現在の設定値（年と可能な年号）が指定された場合、
            月の最大数を返します（年がない場合、うるう年、
            ヘブライ暦の場合は13、それ以外の場合は12）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.GetDaysInMonth">
      <summary>
            現在の設定値（月、年、可能な年号）が指定された場合、
            月の最大日数を返します。設定値が十分でない（年か月がないなど）場合、
            31にデフォルト設定し、それ以外の場合は
            カレンダーメソッドを呼び出します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.ChangeDateForWeekday(System.Int32,System.Object,System.Object)">
      <summary>
            指定されたdayOfWeek（曜日）で最も近い日付に調整します。
            すべてOKの場合はTrue、変更内容に問題がある場合は
            Falseを返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFldValue.ChangeDateForEra(System.Int32,System.Object,System.Object)">
      <summary>
            日付が新しい年号でも有効であることを確認します。
            すべてOKの場合はTrue、変更内容に問題がある場合は
            Falseを返します。注意：minValueとmaxValue（DateTimeオブジェクト）が
            指定された場合、年号のみではなく日付全体が、
            これらの値によって制限されます。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.MaskType">
      <summary>
            マスクの種類のリスト（データ型ではない）。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.MaskFormatter">
      <summary>
            MaskFormatterインタフェースを実装します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.FromFormattedString(System.String)">
      <summary>
            書式付き文字列の「値」を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.ToFormattedString(System.Object)">
      <summary>
            渡された値の書式付き文字列（および属性）を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.FromUnformattedString(System.String)">
      <summary>
            書式なし文字列の「値」を解析して返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.MaskFormatter.ToUnformattedString(System.Object)">
      <summary>
            渡された値の書式なし文字列を返します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.RegionSettings">
      <summary>
            地域設定を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.ManageInput">
      <summary>
            実装されている場合、ユーザー入力の検証および書式設定に使用する
            エディタを許可するメソッドをサポートします。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.MaskType">
      <summary>
            マスクの種類（なし、PicMask、Floatなど）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.IsFmtStrParsed">
      <summary>
            書式文字を設定または変更（あるいは書式文字以外のものを変更）した以降に
            書式文字を解析したかどうかを指定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.MaskChar">
      <summary>
            マスク文字を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.MaskFormatter.FormatString">
      <summary>
            書式文字列を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.IRegionalSettings">
      <summary>
            地域設定（地域オプション）を定義するオブジェクトが要求する
            メソッドとプロパティを定義するインタフェース。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberLeadingZero">
      <summary>
            浮動小数点値の先頭のゼロを表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberDecimalDigits">
      <summary>
            浮動小数点値の小数点以下の桁数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberGroupSeparator">
      <summary>
            数字グループを区切る文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberGroupSize">
      <summary>
            各数字グループの桁数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NumberNegativePattern">
      <summary>
            負の値の書式を取得または設定します。
            </summary>
      <remarks>
            設定値は.NET FrameworkのNumberFormatInfo.NumberNegativePattern値に
            一致します。
            </remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PercentSign">
      <summary>
            パーセント値を指定する文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PercentDecimalDigits">
      <summary>
            パーセント値の小数点以下の桁数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PercentNegativePattern">
      <summary>
            負のパーセント値の書式を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PercentPositivePattern">
      <summary>
            正のパーセント値の書式を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.NegativeSign">
      <summary>
            負の値を表す文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PositiveSign">
      <summary>
            正の値を表す文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.DecimalSeparator">
      <summary>
            小数点記号を表す文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencyDecimalDigits">
      <summary>
            通貨値の小数点以下の桁数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencySymbol">
      <summary>
            通貨記号を表す文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencyNegativePattern">
      <summary>
            負の通貨値の書式を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrencyPositivePattern">
      <summary>
            正の通貨値の書式を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.AbbreviatedDayNames">
      <summary>
            短い曜日名の配列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.AbbreviatedMonthNames">
      <summary>
            短い月名の配列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.DayNames">
      <summary>
            曜日名の配列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.MonthNames">
      <summary>
            月名の配列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.DateSeparator">
      <summary>
            日付の年月日の区切りを表す文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.ShortDateFormat">
      <summary>
            短い日付の書式を取得または設定します。
            </summary>
      <remarks>
            一般的な日付値のデコードに使用します。
            </remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.LongDateFormat">
      <summary>
            長い日付書式を取得または設定します。
            </summary>
      <remarks>
            一般的な日付値のデコードに使用します。
            </remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.TimeFormat">
      <summary>
            時刻値の書式を取得または設定します。
            </summary>
      <remarks>
            一般的な時刻値のデコードに使用します。
            </remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.TimeSeparator">
      <summary>
            時刻の各部分（時、分、秒、秒の小数）の区切りを指定する文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.AMDesignator">
      <summary>
            12時間制の午前を表す文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.PMDesignator">
      <summary>
            12時間制の午後を表す文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.CurrentYear">
      <summary>
            年が日付値に指定されていない場合現在の年を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.DateTimeFormat">
      <summary>
            現在の文化に関連付けられたDateTimeFormatInfoオブジェクトを取得します。
            </summary>
      <remarks>
            現在の文化が設定されていない場合新しいオブジェクトを返しますが、
            保存しません（変更内容を保存しません）。
            </remarks>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.TwoDigitYearMax">
      <summary>
            ２桁年で表せる100年範囲の最後の年を
            取得または設定します。  
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.IRegionalSettings.Calendar">
      <summary>
            日付値の書式を設定するカレンダーを取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.RegionalSettingsProps">
      <summary>
      </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.RegionalSettings">
      <summary>
            Regional Settingsインタフェースを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.#ctor">
      <summary>
            地域設定の新しいセットを作成します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.#ctor(FarPoint.Win.SuperEdit.IRegionalSettings)">
      <summary>
            指定した親インタフェースから設定を継承して、
            地域設定の新しいセットを作成します。
            </summary>
      <param name="parentRegionSettings">設定の継承元のIRegionalSettingsインタフェース</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.#ctor(System.Globalization.CultureInfo)">
      <summary>
            指定したCultureInfoの文化固有情報に基づいて、
            地域設定の新しいセットを作成します。
            </summary>
      <param name="cultureInfo">文化固有情報を含むCultureInfoオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.#ctor(FarPoint.Win.SuperEdit.RegionalSettings)">
      <summary>
            指定したオブジェクトをコピーして地域設定の新しいセットを作成します。
            </summary>
      <param name="src">コピー元の地域設定</param>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.defRgnSettings">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.Clone">
      <summary>
            現在のインスタンスをコピーして新しい地域設定を作成して返します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.numberNegPattern">
            設定値はMS .NET NumberFormatInfo.NumberNegativePattern値に一致します。
        </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.shortDateFormat">
            一般的な日付値のデコードに使用します。
        </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.longDateFormat">
            一般的な日付値のデコードに使用します。
        </member>
    <member name="F:FarPoint.Win.SuperEdit.RegionalSettings.timeFormat">
            一般的な時刻値のデコードに使用します。
        </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.Set(System.Object,System.Boolean)">
      <summary>
            プロパティが設定されているかどうかを示すビットマップを更新します。
            </summary>
      <param name="prop">プロパティを含むオブジェクト</param>
      <param name="f">プロパティが設定されているかどうかを表すフラグ</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.IsDefined(System.Object)">
      <summary>
            ビットマップに問い合わせ、プロパティが設定されているかどうかを判定します。
            </summary>
      <param name="prop">プロパティを含むオブジェクト</param>
      <returns>設定されている場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.Reset(System.Object)">
      <summary>
            ビットマップをリセットし、プロパティが作成したオブジェクトをすべて解放します。
            </summary>
      <param name="prop">プロパティを含むオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.ResetAll">
      <summary>
            ビットマップ全体をFalseにリセットすると、すべてのプロパティがデフォルト状態になります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.IsAllBlanks(System.String)">
      <summary>
            文字列がすべて空白かどうかを判定します。
            </summary>
      <param name="value">値を含む文字列</param>
      <returns>文字列がすべて空白の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.RegionalSettings.FirstNonBlankChar(System.String,System.Char@)">
      <summary>
            文字列に最初に現れる空白以外の文字を返します。空白以外の文字がない場合はNullを返します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CultureInfoSetting">
      <summary>
            文化固有情報を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.ParentRegionSettings">
      <summary>
            親の地域設定を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PropertySet">
      <summary>
            プロパティセットを配列として取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DefaultSettings">
      <summary>
            デフォルトの地域設定のコピーを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberGroupSeparator">
      <summary>
            数値の桁グループを区切る文字を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberGroupSize">
      <summary>
            数値をグループ化する桁数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberNegativePattern">
      <summary>
            負の値を書式設定する方法を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NegativeSign">
      <summary>
            数値の負号として使用する文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PositiveSign">
      <summary>
            数値の正号として使用する文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DecimalSeparator">
      <summary>
            10進値の整数部と小数部を区切る文字列を
            取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberLeadingZero">
      <summary>
            浮動小数点値の先頭のゼロを表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.NumberDecimalDigits">
      <summary>
            数値に表示する小数点以下の桁数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PercentSign">
      <summary>
            数値に付けてパーセント記号として表示する文字を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PercentNegativePattern">
      <summary>
            負のパーセント値を表示する書式を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PercentPositivePattern">
      <summary>
            正のパーセント値を表示する書式を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PercentDecimalDigits">
      <summary>
            パーセント値の小数点以下の桁数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencyDecimalDigits">
      <summary>
            通貨値の小数点以下の桁数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencySymbol">
      <summary>
            通貨値の通貨記号として使用する文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencyNegativePattern">
      <summary>
            負の通貨値の書式を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrencyPositivePattern">
      <summary>
            正の通貨値の書式を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.AbbreviatedDayNames">
      <summary>
            短い曜日名の配列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.AbbreviatedMonthNames">
      <summary>
            短い月名の配列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DayNames">
      <summary>
            曜日名の配列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.MonthNames">
      <summary>
            曜日名の配列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DateSeparator">
      <summary>
            日付値の年月日を区切るための文字列を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.ShortDateFormat">
      <summary>
            DateTimeFormatプロパティがShortDateまたはShortDateWithTimeに設定されているときに
            短い日付値を書式設定するための文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.LongDateFormat">
      <summary>
            DateTimeFormatプロパティがLongDateまたはLongDateWithTimeに設定されているときに
            長い日付値を書式設定するための文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.TimeFormat">
      <summary>
            DateTimeFormatプロパティがTimeOnly、LongDateWithTime、ShortDateWithTimeの
            いずれかに設定されているときに時刻値を表すための書式を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.TimeSeparator">
      <summary>
            時刻値の各部分（時、分、秒、秒の小数）を区切るために使用する文字列を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.AMDesignator">
      <summary>
            12時間制の午前を表す文字列を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.PMDesignator">
      <summary>
            12時間制の午後を表す文字列を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.DateTimeFormat">
      <summary>
            日付と時刻の表示書式を定義するDateTimeFormatInfoオブジェクトを取得または設定します。
            </summary>
            現在の文化に関連付けられたDateTimeFormatInfoを返します。
            現在の文化が設定されていない場合新しいオブジェクトを返しますが、
            保存しません（変更は保持されません）。
        </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.CurrentYear">
      <summary>
            年が日付値に指定されていない場合現在の年を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.TwoDigitYearMax">
      <summary>
            ２桁年の値に対する世紀を計算するために使用する年の値を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.RegionalSettings.Calendar">
      <summary>
            DateTime値の書式を設定するカレンダーを取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.UserErrorCode">
      <summary>
            UserErrorイベントのエラーコードを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.InvalidCharacter">
      <summary>
            ［1］ユーザーが無効な文字を入力したときに発生します
            （UserEntryプロパティがUserEntry.Formattedに設定されている場合のみ）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.InvalidMovement">
      <summary>
            ［2］ユーザーがカーソルを先頭文字より左に、
            または最終文字より右に移動しようとしたときに発生します。
            AutoAdvanceプロパティがFalseに設定されている場合のみ発生します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.InvalidAction">
      <summary>
            ［3］その他のすべての無効なアクションの場合に発生します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.ExceedLimit">
      <summary>
            ［4］テキストを追加するとデータ長がMaxLengthプロパティで設定した
            最大値を超える場合に発生します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.ButtonMin">
      <summary>
            ［5］ユーザーがボタンをクリックするとButtonIndexプロパティの値がButtonMinプロパティで
            設定した値より小さくなるときに発生します。
            ButtonWrapプロパティがFalseに設定されている場合のみ発生します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.ButtonMax">
      <summary>
[6] ユーザーがボタンをクリックしたとき、ButtonIndex プロパティの値が ButtonMax プロパティで設定した値より大きくなると発生します。ButtonWrap プロパティが False に設定されている場合のみ発生します。     
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.OutOfRange">
      <summary>
            ［7］ユーザーが入力した値が、最大値／最小値プロパティで設定された
            最大値または最小値を超える場合に発生します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.PopupOrDropdownVisible">
      <summary>
            ［8］ポップアップまたはドロップダウンの表示中にユーザーが
            コントロールを操作したときに発生します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.DataNotAllowed">
      <summary>
            ［9］ユーザーが許可されていないデータ（コントロールで許可された
            最大値より大きい値など）を入力したときに発生します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.UserErrorCode.GenericError">
      <summary>
            ［999］その他のタイプのエラーで発生します（対応する他のエラーコードがない場合）。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.ErrorEventArgs">
      <summary>
            Errorイベントのイベントデータを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ErrorEventArgs.#ctor(System.Int32)">
      <summary>
            コントロールによってエラー状態が作成されたたときに発生します。
            </summary>
      <param name="errorCode">発生したエラーコード</param>
      <example><code lang="csharp">
            private void control_UserError(object sender, FarPoint.Win.Input.ErrorEventArgs e)
            {
            Messagebox.Show(Convert.ToString(e.ErrorCode));
            }
            </code><code lang="vb">
            Private Sub control_UserError(ByVal sender As Object, ByVal e As FarPoint.Win.Input.ErrorEventArgs) Handles control.UserError
              Messagebox.Show(e.ErrorCode);
            End Sub
            </code></example>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.ErrorEventArgs.#ctor(System.Int32,System.String)">
      <summary>
            コントロールによってエラー状態が作成されたときに発生します。
            </summary>
      <param name="errorCode">発生したエラーのエラーコード</param>
      <param name="errorText">発生したエラーの追加エラー情報</param>
      <example><code lang="csharp">
            private void control_UserError(object sender, FarPoint.Win.Input.ErrorEventArgs e)
            {
            Messagebox.Show(Convert.ToString(e.ErrorCode) + e.ErrorInfo);
            }
            </code><code lang="vb">
            Private Sub control_UserError(ByVal sender As Object, ByVal e As FarPoint.Win.Input.ErrorEventArgs) Handles control.UserError
              Messagebox.Show(e.ErrorCode + e.ErrorInfo);
            End Sub
            </code></example>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ErrorEventArgs.ErrorCode">
      <summary>
            エラーイベントに関連付けられたエラーコードを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.ErrorEventArgs.ErrorInfo">
      <summary>
            エラーイベントに関連付けられた追加のエラー情報を取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.UserErrorEventHandler">
      <summary>
            UserErrorイベントを処理するメソッドを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.UserErrorEventArgs">
      <summary>
            ユーザーエラーイベントのデータを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.UserErrorEventArgs.#ctor(FarPoint.Win.SuperEdit.UserErrorCode)">
      <summary>
            コントロールによってユーザーエラー状態が作成されたときに発生します。
            </summary>
      <param name="errorCode">発生したユーザーエラーコード</param>
      <example><code lang="csharp">
            private void control_UserError(object sender, FarPoint.Win.Input.UserErrorEventArgs e)
            {
            Messagebox.Show(Convert.ToString(e.ErrorCode));
            }
            </code><code lang="vb">
            Private Sub control_UserError(ByVal sender As Object, ByVal e As FarPoint.Win.Input.UserErrorEventArgs) Handles control.UserError
              Messagebox.Show(e.ErrorCode);
            End Sub
            </code></example>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.UserErrorEventArgs.#ctor(FarPoint.Win.SuperEdit.UserErrorCode,System.String)">
      <summary>
            コントロールによってユーザーエラー状態が作成されたときに発生します。
            </summary>
      <param name="errorCode">発生したエラーのユーザーエラーコード</param>
      <param name="errorText">発生したエラーの追加エラー情報</param>
      <example><code lang="csharp">
            private void control_UserError(object sender, FarPoint.Win.Input.UserErrorEventArgs e)
            {
            Messagebox.Show(Convert.ToString(e.ErrorCode) + e.ErrorInfo);
            }
            </code><code lang="vb">
            Private Sub control_UserError(ByVal sender As Object, ByVal e As FarPoint.Win.Input.UserErrorEventArgs) Handles control.UserError
              Messagebox.Show(e.ErrorCode + e.ErrorInfo);
            End Sub
            </code></example>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.UserErrorEventArgs.UserErrorCode">
      <summary>
            ユーザーエラーイベントに関連付けられたエラーコードを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.TextPastedEventHandler">
      <summary>
            TextPastedイベントを処理するメソッドを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.AdvanceEventHandler">
      <summary>
            Advanceイベントを処理するメソッドを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.AcceptsArrowKeys">
      <summary>
            コントロールがテキストボックス内でキーボードの矢印キーを処理する方法を指定します。  
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.None">
      <summary>
            矢印キーを処理しません。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.Arrows">
      <summary>
            ［Ctrl］キーを使わずに押された矢印キーのみを処理します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.CtrlArrows">
      <summary>
            ［Ctrl］キーと同時に押された矢印キーのみを処理します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.AllArrows">
      <summary>
            すべての矢印キーを処理します（ArrowsとCtrlArrowsの両方）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SuperEdit.AcceptsArrowKeys.AllArrowsIgnoringMultiline">
      <summary>
            Multilineプロパティの設定と無関係にすべての矢印キーを処理します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEdit.SEditTextBox">
      <summary>
            コントロールのテキストエディタを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.ProcessSendMessage(System.Windows.Forms.Message@)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="msg">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.GetLineCount">
      <summary>
            複数行を持つテキストエディタの行数を返します。
            </summary>
      <returns>行数</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.GetLineLength(System.Int32)">
      <summary>
            行の長さを返します。
            </summary>
      <param name="lineIndex">行のインデックス</param>
      <returns>行の長さ</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.OnSEditKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            ユーザーが押したキーを処理します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.PasteFromClipboard">
      <summary>
            クリップボードからデータを貼り付けます。
            </summary>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.Increment(System.Object,System.Boolean)">
      <summary>
            インクリメント値を返します。
            </summary>
      <param name="incValue">インクリメント値</param>
      <param name="wrap">複数行があるかどうか、値を折り返すかどうかを表すブール値</param>
      <returns>インクリメント値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.Decrement(System.Object,System.Boolean)">
      <summary>
            デクリメント値を返します。
            </summary>
      <param name="decValue">デクリメント値</param>
      <param name="wrap">複数行があるかどうか、値を折り返すかどうかを表すブール値</param>
      <returns>デクリメント値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            このコントロールが処理するキーを決定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.ResetRedoText">
      <summary>
            Redoテキストバッファをリセットします。これはUndoChanges()が
            呼び出されたとき設定されます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEdit.SEditTextBox.UndoChanges">
      <summary>
            テキストを「Undoバッファ」に保存されるテキストとして設定することを
            ユーザーに許可します。SelectionStartプロパティと
            SelectionLengthプロパティも設定します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.SEditTextBox.TextPasted">
      <summary>
            テキストがコントロールに貼り付けられたときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.SEditTextBox.TextCut">
      <summary>
コントロールからテキストが切り取られたときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.SEditTextBox.UserError">
      <summary>
            処理不可能または無効な内容が入力されたときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEdit.SEditTextBox.Advance">
      <summary>
            AutoAdvanceプロパティがTrueに設定され、押された矢印キーに応答して
            フォーカスを次または前のコントロールに移動するときに発生します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.RedrawFlag">
      <summary>
            再描画フラグが設定されているかどうかを取得または設定します。
            コントロールの値が変更されたときに再描画します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.LastKeyDown">
      <summary>
            最後に押されたキーのキーコードを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.Formatter">
      <summary>
            編集コントロールのフォーマッタを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.AutoAdvance">
      <summary>
            押された矢印キーに基づいて値を進めるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.Value">
      <summary>
            テキストエディタ内の文字列またはオブジェクトの値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.AcceptsArrowKeys">
      <summary>
            このコントロールが上矢印キーと下矢印キーを処理するかどうかを決定する
            プロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.Text">
      <summary>
            文字列を取得または設定します。UndoバッファとRedoバッファの
            コントロールのTextプロパティを上書きします。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.UndoText">
      <summary>
            Undoバッファの内容を取得または設定します。このバッファは、ユーザーが
            ［Ctrl+Z］キーを押したか、オーナーが「UndoChanges()」を呼び出した場合に使用されます。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.UndoSelStart">
      <summary>
            Undo選択の開始位置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEdit.SEditTextBox.UndoSelLength">
      <summary>
            Undo選択の長さの位置を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.AboutDialog">
      <summary>
            AboutDialogの概要。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AboutDialog.components">
      <summary>
            必須デザイナ変数。
            </summary>
    </member>
    <member name="M:FarPoint.Win.AboutDialog.Dispose(System.Boolean)">
      <summary>
            使用されたリソースをすべてクリーンアップします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.AboutDialog.InitializeComponent">
      <summary>
            デザイナサポートの必須メソッド。このメソッドの内容は
            コードエディタで変更しないでください。
            </summary>
    </member>
    <member name="T:FarPoint.Win.BorderConverter">
      <summary>
            プロパティグリッド内のIBorderタイプのプロパティに対する境界線の種類のドロップダウンリストを提供します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            オブジェクトのプロパティ値のセットを指定して、
            この型のオブジェクトを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して
            新しい値を作成する必要があるかどうかを
            判定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            この型のプロパティのセットを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            この型の標準値のセットを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            このオブジェクトがプロパティをサポートするかどうかを判定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            このオブジェクトが標準値をサポートするかどうかを判定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            指定した型を境界線オブジェクトに変換できるかどうかを判定します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="sourceType">型</param>
      <returns>sourceTypeがStringの場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
            文字列を新しい境界線オブジェクトに変換します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">オブジェクト</param>
      <returns>新しい境界線オブジェクト</returns>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            境界線オブジェクトを指定した型に変換できるかどうかを判定します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">型</param>
      <returns>境界線オブジェクトを指定した型に変換できる場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.BorderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            境界線オブジェクトを文字列に変換します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">オブジェクト</param>
      <param name="destinationType">型</param>
      <returns>境界線オブジェクトの文字列表現</returns>
    </member>
    <member name="T:FarPoint.Win.BorderEditor">
      <summary>
            境界線エディタを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderEditor.SetEditorProps(FarPoint.Win.IBorder,FarPoint.Win.BorderEditorUI)">
      <summary>
            エディタに編集対象の境界線を設定します。
            </summary>
      <param name="border">編集対象のIBorder</param>
      <param name="editor">BorderEditorUI</param>
    </member>
    <member name="M:FarPoint.Win.BorderEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            境界線エディタの値を編集します。
            </summary>
      <param name="context">コンテキスト</param>
      <param name="provider">プロバイダ</param>
      <param name="value">値</param>
    </member>
    <member name="M:FarPoint.Win.BorderEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            指定したコンテキストの境界線エディタのスタイルを取得します。
            </summary>
      <param name="context">コンテキスト</param>
    </member>
    <member name="M:FarPoint.Win.BorderEditor.GetEditStyle">
      <summary>
            境界線エディタのスタイルを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.AboutEditor">
      <summary>
            Aboutダイアログエディタを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.AboutEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            Aboutダイアログの値を編集します。
            </summary>
      <param name="context">コンテキスト</param>
      <param name="provider">プロバイダ</param>
      <param name="value">値</param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.AboutEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            指定したコンテキストのAboutダイアログのスタイルを取得します。
            </summary>
      <param name="context">コンテキスト</param>
    </member>
    <member name="M:FarPoint.Win.AboutEditor.GetEditStyle">
      <summary>
            Aboutダイアログのスタイルを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ClipboardChangeNotifier">
      <summary>
Windows API を使用してクリップボードの内容の変更通知を受け取る手段を提供します。  
            </summary>
      <remarks>
変更通知を受け取るためには、ウィンドウをクリップボード ビューア チェインに登録する必要があります。こうすると、クリップボードが変更されるたびにウィンドウに通知メッセージが送られます。また、チェインの管理に関連するメッセージも提供されます。このクラスは、チェインを維持し、アプリケーションが適切な時点でチェインから削除されるように、これらの動作の詳細を管理します。
            </remarks>
    </member>
    <member name="F:FarPoint.Win.ClipboardChangeNotifier.nextViewerHandle">
      <summary>
クリップボード通知がインストールされている場合はクリップボード ビューア チェインの次のハンドル、それ以外の場合は <see cref="F:System.IntPtr.Zero" />
            </summary>
    </member>
    <member name="F:FarPoint.Win.ClipboardChangeNotifier.disposed">
      <summary>
このクラスが破棄されたかどうかを示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ClipboardChangeNotifier.installedHandle">
      <summary>
クリップボード変更通知がインストールされたウィンドウ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.WndProc(System.Windows.Forms.Message@)">
      <summary>
デフォルトのWndProc処理を提供し、クリップボード変更通知に応答します。
            </summary>
      <param name="e">メッセージ</param>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.OnHandleChange">
      <summary>
ウィンドウハンドル変更イベントに応答し、クリップボード変更通知がインストールされている場合はアンインストールします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.Install">
      <summary>
クリップボード変更通知をインストールします。このクラスの AssignHandle メソッドを最初に呼び出している必要があります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.Uninstall">
      <summary>
クリップボード変更通知をアンインストールします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.OnClipboardChanged(System.EventArgs)">
      <summary><c>ClipboardChanged</c>イベントを発生させます。
            </summary>
      <param name="e">空のイベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.Dispose">
      <summary>
このオブジェクトの破棄中に必要な場合、クリップボードイベント通知をアンインストールします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ClipboardChangeNotifier.#ctor">
      <summary>
このクラスの新しいインスタンスを構築します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ClipboardChangeNotifier.ClipboardChanged">
      <summary>
クリップボードの内容の変更を通知します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ColorPicker.OnColorChanged(System.EventArgs)">
      <summary>
ColorChangedイベントを発生させます。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.ColorPicker.FireColorChanged">
      <summary>
      </summary>
    </member>
    <member name="T:FarPoint.Win.FontSelector">
      <summary>
フォントセレクタを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FontSelector.#ctor">
      <summary>
新しいフォントセレクタを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FontSelector.#ctor(System.Boolean)">
      <summary>
新しいフォントセレクタを作成します。
            </summary>
      <param name="renderAsFont">フォントとしてレンダリングするかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FontSelector.#ctor(System.Boolean,System.String)">
      <summary>
新しいフォントセレクタを作成します。
            </summary>
      <param name="renderAsFont">フォントとしてレンダリングするかどうか</param>
      <param name="sampleString">サンプル文字列</param>
    </member>
    <member name="M:FarPoint.Win.FontSelector.RefreshList">
      <summary>
リストを更新します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FontSelector.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
      <summary>
項目が測定されたときに発生します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FontSelector.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>
項目が描画されたときに発生します。
            </summary>
      <param name="e">イベント項目</param>
    </member>
    <member name="M:FarPoint.Win.FontSelector.OnDropDown(System.EventArgs)">
      <summary>
ドロップダウンされたときに発生します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="P:FarPoint.Win.FontSelector.HideImage">
      <summary>
画像を非表示にするかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FontSelector.RenderListWithFont">
      <summary>
フォントリスト項目をそれぞれのフォントで表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Rect">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Rect.left">
      <summary>
左。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Rect.top">
      <summary>
上。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Rect.right">
      <summary>
右。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Rect.bottom">
      <summary>
下。
            </summary>
    </member>
    <member name="T:FarPoint.Win.HorizontalAlignment">
      <summary>
            コントロールの内容の水平方向の配置を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.HorizontalAlignment.Left">
      <summary>
コントロールの内容を水平軸に沿って左端に揃えます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.HorizontalAlignment.Center">
      <summary>
コントロールの内容を水平軸に沿って左右の端から等間隔に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.HorizontalAlignment.Right">
      <summary>
コントロールの内容を水平軸に沿って右端に揃えます。
            </summary>
    </member>
    <member name="T:FarPoint.Win.VerticalAlignment">
      <summary>
            コントロールの内容の垂直方向の配置を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.VerticalAlignment.Top">
      <summary>
コントロールの内容を垂直軸に沿って上端に揃えます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.VerticalAlignment.Center">
      <summary>
コントロールの内容を垂直軸に沿って上下の端から等間隔に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.VerticalAlignment.Bottom">
      <summary>
コントロールの内容を垂直軸に沿って下端に揃えます。
            </summary>
    </member>
    <member name="T:FarPoint.Win.AppearanceProps">
      <summary>
            内部使用のみ。外観プロパティを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.HorizontalAlignment">
      <summary>
水平方向の配置。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.VerticalAlignment">
      <summary>
垂直方向の配置。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.Parent">
      <summary>
親オブジェクト。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.Font">
      <summary>
テキスト フォント。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.BackColor">
      <summary>
背景色。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AppearanceProps.ForeColor">
      <summary>
テキスト色。
            </summary>
    </member>
    <member name="T:FarPoint.Win.PictureProps">
      <summary>
            内部使用のみ。ピクチャプロパティを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.Stretch">
      <summary>
            ピクチャを拡大してコントロールのサイズに合わせます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.MaintainScale">
      <summary>
            コントロール内のピクチャの縦横比を維持します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.HorizontalAlignment">
      <summary>
            ピクチャを横向きに配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.VerticalAlignment">
      <summary>
            ピクチャを縦向きに配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureProps.Image">
      <summary>
            ピクチャ画像を設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.RenderStyle">
      <summary>
            画像のレンダリングスタイルを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RenderStyle.Normal">
      <summary>
            コントロールに実サイズの画像を表示します(サイズ変更なし）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RenderStyle.Stretch">
      <summary>
            縦横比を無視して画像をサイズ変更し、コントロールのサイズに合わせます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RenderStyle.StretchAndScale">
      <summary>
            縦横比を維持したまま画像をサイズ変更し、コントロールのサイズに合わせます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RenderStyle.Tile">
      <summary>
            画像を複数回表示（タイル表示）し、コントロールのサイズに合わせます。
            </summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyles">
      <summary>
表示スタイルをコントロールに適用するかどうかを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyles.Auto">
      <summary>
システム設定を使用して、コントロールの表示方法を決定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyles.On">
      <summary>
コントロールを表示するときに表示スタイルを適用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.VisualStyles.Off">
      <summary>
コントロールを表示するときに表示スタイルを使用しません。
            </summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyle">
      <summary>
表示スタイルを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Picture">
      <summary>
            表示するピクチャを表します。 
            </summary>
    </member>
    <member name="T:FarPoint.Win.ISerializeSupport">
      <summary>
モデルのオブジェクトのXMLへのシリアル化をサポートするインタフェース。  
            </summary>
    </member>
    <member name="M:FarPoint.Win.ISerializeSupport.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            オブジェクトをXMLに保存します。
            </summary>
      <param name="w">オブジェクトの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeSupport.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            オブジェクトをXMLからロードします。
            </summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor">
      <summary>
            ピクチャを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image)">
      <summary>
            画像を指定してピクチャを作成します。
            </summary>
      <param name="i">画像</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle)">
      <summary>
            画像とスタイルを指定してピクチャを作成します。
            </summary>
      <param name="i">画像</param>
      <param name="style">スタイル</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,System.Drawing.Color)">
      <summary>
            画像と透過色を指定してピクチャを作成します。
            </summary>
      <param name="i">画像</param>
      <param name="transparencyColor">透過色</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle,System.Drawing.Color)">
      <summary>
            画像、スタイル、透過色を指定してピクチャを作成します。
            </summary>
      <param name="i">画像</param>
      <param name="style">スタイル</param>
      <param name="transparencyColor">透過色</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle,System.Drawing.Color,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment)">
      <summary>
            画像、スタイル、透過色、配置を指定してピクチャを作成します。
            </summary>
      <param name="i">画像</param>
      <param name="style">スタイル</param>
      <param name="transparencyColor">透過色</param>
      <param name="alignHorz">画像の水平配置</param>
      <param name="alignVert">画像の垂直配置</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle,System.Drawing.Color,System.Int32)">
      <summary>
指定した画像、スタイル、透過色、透過許容誤差を持つピクチャを作成します。
            </summary>
      <param name="i">画像</param>
      <param name="style">ピクチャのスタイル</param>
      <param name="transparencyColor">透過色</param>
      <param name="transparencyTolerance">色値からの透過許容誤差</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Drawing.Image,FarPoint.Win.RenderStyle,System.Drawing.Color,System.Int32,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment)">
      <summary>
指定した画像、スタイル、透過色（および許容誤差）、内容の配置を持つピクチャを作成します。
            </summary>
      <param name="i">画像</param>
      <param name="style">ピクチャのスタイル</param>
      <param name="transparencyColor">透過色</param>
      <param name="transparencyTolerance">色値からの透過許容誤差</param>
      <param name="alignHorz">画像の水平配置</param>
      <param name="alignVert">画像の垂直配置</param>
    </member>
    <member name="M:FarPoint.Win.Picture.#ctor(System.Object)">
      <summary>
            別のピクチャをコピーしてピクチャを作成します。
            </summary>
      <param name="cloneFrom">ピクチャをコピーするオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Reset">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Picture.Clone">
      <summary>
            内部使用のみ。ピクチャのコピーを作成して返します。
            </summary>
      <returns>ピクチャのコピー</returns>
    </member>
    <member name="M:FarPoint.Win.Picture.Paint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            指定した矩形にピクチャを描画します。
            </summary>
      <param name="g">表示するグラフィックス</param>
      <param name="rect">描画する矩形領域</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した座標位置にピクチャを描画します。
            </summary>
      <param name="g">表示するグラフィックス</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">ピクチャの横幅（ピクセル単位）</param>
      <param name="height">ピクチャの縦幅（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.Picture.OnPictureChanged(System.EventArgs)">
      <summary>
            ピクチャが変更されたときに<see cref="E:FarPoint.Win.Picture.PictureChanged" />イベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            ピクチャをXMLに保存します。
            </summary>
      <param name="w">ピクチャの保存先のXmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            ピクチャをXMLからロードします。 
            </summary>
      <param name="r">ピクチャのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Picture.Dispose">
      <summary>
内部使用のみ。使用されたリソースをすべて解放します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Picture.disposed">
      <summary>
内部使用のみ。破棄するかどうかを指定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Picture.Dispose(System.Boolean)">
      <summary>
内部使用のみ。使用されたリソースをすべて解放します。
            </summary>
      <param name="disposing">破棄するかどうか</param>
    </member>
    <member name="E:FarPoint.Win.Picture.PictureChanged">
      <summary>
            ピクチャを変更したとき発生します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Picture.TransparencyColor">
      <summary>
            ピクチャのレンダリングに使用する透過色を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.Picture.TransparencyTolerance">
      <summary>
透過色として設定された色からの透過許容誤差を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.Picture.Style">
      <summary>
            ピクチャのレンダリングに使用するスタイルを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Picture.AlignHorz">
      <summary>
            ピクチャの水平方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Picture.AlignVert">
      <summary>
            ピクチャの垂直方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Picture.Image">
      <summary>
            表示するピクチャを取得または設定します。 
            </summary>
    </member>
    <member name="T:FarPoint.Win.PictureConverter">
      <summary>
            Pictureオブジェクトを別の形式に変換します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            オブジェクトのプロパティ値のセットを指定して、
            この型のオブジェクトを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して
            新しい値を作成する必要があるかどうかを判定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            ピクチャを指定したファイル形式から変換できるかどうかを判定します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="sourceType">ソースファイル形式</param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            ピクチャを指定したファイル形式に変換できるかどうかを判定します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">変換後のファイル形式</param>
    </member>
    <member name="M:FarPoint.Win.PictureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            ピクチャを指定したファイル形式に変換します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">オブジェクト</param>
      <param name="destinationType">ファイル形式</param>
    </member>
    <member name="T:FarPoint.Win.FpImageConverter">
      <summary>
Imageオブジェクトの型を別の型に変換します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
画像を指定した型に変換できるかどうかを判定します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="sourceType">ソースファイル形式</param>
      <returns>
      </returns>
    </member>
    <member name="T:FarPoint.Win.PictureEditor">
      <summary>
            ピクチャエディタを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.PictureEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            エディタ内の値を返します。
            </summary>
      <param name="context">コンテキスト（ITypeDescriptorContext）</param>
      <param name="provider">プロバイダ（IServiceProvider）</param>
      <param name="value">値</param>
    </member>
    <member name="M:FarPoint.Win.PictureEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>
            エディタ内に値を描画します。
            </summary>
      <param name="e">イベントデータを含むPaintValueEventArgsオブジェクト</param>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSideStyle">
      <summary>
            セルの一辺の境界線のスタイルを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.None">
      <summary>
            ［0］境界線を描画しません。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.HairLine">
      <summary>
            ［1］極細の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.Dotted">
      <summary>
            ［2］点線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.DashDotDot">
      <summary>
            ［3］二点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.DashDot">
      <summary>
            ［4］一点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.Dashed">
      <summary>
            ［5］破線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.ThinLine">
      <summary>
            ［6］細い境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.MediumDashDotDot">
      <summary>
            ［7］中太の二点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.SlantedDashDot">
      <summary>
            ［8］斜め一点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.MediumDashDot">
      <summary>
            ［9］中太の一点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.MediumDashed">
      <summary>
            ［10］中太の破線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.MediumLine">
      <summary>
            ［11］中太の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.ThickLine">
      <summary>
            ［12］太い境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.DoubleLine">
      <summary>
            ［12］二重実線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSideStyle.UserDefined">
      <summary>
            ［99］ユーザー定義の境界線が設定されていることを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSidePattern">
      <summary>
            セルの一辺の境界線のパターンを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.Hair">
      <summary>
            セルの一辺に極細の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.DashDot">
      <summary>
            セルの一辺に一点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.MediumDash">
      <summary>
            セルの一辺に中太の破線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.MediumDashDot">
      <summary>
            セルの一辺に中太の一点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.SlantedDashDot">
      <summary>
            セルの一辺に斜め一点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.SlantedCompound">
      <summary>
            セルの一辺に斜め一点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.Dotted">
      <summary>
            セルの一辺に点線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.DashDotDot">
      <summary>
            セルの一辺に二点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.MediumDashDotDot">
      <summary>
            セルの一辺に中太の二点鎖線の境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComplexBorderSidePattern.DoubleCompound">
      <summary>
            セルの一辺に二重境界線を描画します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IBorder">
      <summary>
セル周囲の境界線（罫線）の描画をサポートするインタフェース。
            </summary>
    </member>
    <member name="M:FarPoint.Win.IBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="P:FarPoint.Win.IBorder.Inset">
      <summary>
            境界線のインセットを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IBorder2">
      <summary>
セル周囲の境界線（罫線）の描画をサポートするインタフェース。
            </summary>
    </member>
    <member name="M:FarPoint.Win.IBorder2.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="T:FarPoint.Win.BevelBorderType">
      <summary>
            ベベル境界線の種類を表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.BevelBorderType.Lowered">
      <summary>
            ［0］凹状のベベル境界線を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.BevelBorderType.Raised">
      <summary>
            ［1］凹状のベベル境界線を描画します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.EmptyBorder">
      <summary>
            スペースがゼロの空の境界線を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.#ctor">
      <summary>
            空の境界線（EmptyBorderオブジェクト）を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            オブジェクトをXMLに保存します。
            </summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            オブジェクトをXMLからロードします。
            </summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.EmptyBorder.Clone">
      <summary>
境界線オブジェクトをクローンします。
            </summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.EmptyBorder.Inset">
      <summary>
            境界線のインセットを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.LineBorder">
      <summary>
            一重境界線を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.LineBorder.#ctor(System.Drawing.Color)">
      <summary>
            色を指定して一重境界線を作成します。
            </summary>
      <param name="color">境界線の色</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.#ctor(System.Drawing.Color,System.Int32)">
      <summary>
            色と太さを指定して一重境界線を作成します。
            </summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.#ctor(System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            色、太さ、境界線を描画する辺を指定して
            一重境界線を作成します。
            </summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <param name="left">セルの左辺に線を描画するかどうかを取得します。</param>
      <param name="top">セルの上辺に線を描画するかどうかを取得します。</param>
      <param name="right">セルの右辺に線を描画するかどうかを取得します。</param>
      <param name="bottom">セルの下辺に線を描画するかどうかを取得します。</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            オブジェクトをXMLに保存します。
            </summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            オブジェクトをXMLからロードします。
            </summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.LineBorder.Clone">
      <summary>
境界線オブジェクトをクローンします。
            </summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Color">
      <summary>
            境界線色を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Inset">
      <summary>
            境界線のインセットを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Thickness">
      <summary>
            境界線の太さを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Left">
      <summary>
            左辺の境界線を描画するかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Top">
      <summary>
            上辺の境界線を描画するかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Right">
      <summary>
            右辺の境界線を描画するかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.LineBorder.Bottom">
      <summary>
            下辺の境界線を描画するかどうかを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.LineBorderFactory">
      <summary>
            パラメータ化されたコンストラクタをサポートしない環境で、
            一重境界線を作成するためのクラスを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.LineBorderFactory.#ctor">
      <summary>
            一重境界線ファクトリを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.LineBorderFactory.CreateLineBorder(System.Drawing.Color)">
      <summary>
            色を指定して一重境界線を作成します。
            </summary>
      <param name="color">境界線の色</param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.LineBorderFactory.CreateLineBorder(System.Drawing.Color,System.Int32)">
      <summary>
            色と太さを指定して一重境界線を作成します。
            </summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.LineBorderFactory.CreateLineBorder(System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            指定した色と太さを持つ一重境界線を作成し、
            描画する境界線の辺を指定します。
            </summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <param name="left">セルの左辺に線を描画するかどうかを取得します。</param>
      <param name="top">セルの上辺に線を描画するかどうかを取得します。</param>
      <param name="right">セルの右辺に線を描画するかどうかを取得します。</param>
      <param name="bottom">セルの下辺に線を描画するかどうかを取得します。</param>
      <returns>
      </returns>
    </member>
    <member name="T:FarPoint.Win.RoundedLineBorder">
      <summary>
            角丸の一重境界線を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.#ctor(System.Drawing.Color)">
      <summary>
            色を指定して角丸一重境界線を作成します。
            </summary>
      <param name="color">境界線の色</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.#ctor(System.Drawing.Color,System.Int32)">
      <summary>
            色と太さを指定して角丸一重境界線を作成します。
            </summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.#ctor(System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            色と太さを指定して角丸の一重境界線を作成し、
            描画する境界線の辺を指定します。
            </summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <param name="left">セルの左辺に線を描画するかどうかを取得します。</param>
      <param name="top">セルの上辺に線を描画するかどうかを取得します。</param>
      <param name="right">セルの右辺に線を描画するかどうかを取得します。</param>
      <param name="bottom">セルの下辺に線を描画するかどうかを取得します。</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="T:FarPoint.Win.RoundedLineBorderFactory">
      <summary>
            パラメータ化されたコンストラクタをサポートしない環境で、
            RoundedLineBorderオブジェクトを作成するためのクラスを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorderFactory.#ctor">
      <summary>
            RoundedLineBorderFactoryオブジェクトを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorderFactory.CreateRoundedLineBorder(System.Drawing.Color)">
      <summary>
            色を指定して角丸の一重境界線を作成します。
            </summary>
      <param name="color">境界線の色</param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorderFactory.CreateRoundedLineBorder(System.Drawing.Color,System.Int32)">
      <summary>
            色と太さを指定して角丸の一重境界線を作成します。
            </summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.RoundedLineBorderFactory.CreateRoundedLineBorder(System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            色と太さを指定して角丸の一重境界線を作成し、
            描画する境界線の辺を指定します。
            </summary>
      <param name="color">境界線の色</param>
      <param name="thickness">境界線の太さ（ピクセル単位）</param>
      <param name="left">セルの左辺に線を描画するかどうかを取得します。</param>
      <param name="top">セルの上辺に線を描画するかどうかを取得します。</param>
      <param name="right">セルの右辺に線を描画するかどうかを取得します。</param>
      <param name="bottom">セルの下辺に線を描画するかどうかを取得します。</param>
      <returns>
      </returns>
    </member>
    <member name="T:FarPoint.Win.BevelBorder">
      <summary>
            一重ベベル境界線を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.#ctor(FarPoint.Win.BevelBorderType)">
      <summary>
            指定した種類のベベル境界線を作成します。
            </summary>
      <param name="type">ベベル境界線の種類</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.#ctor(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            種類、ハイライト色、影の色を指定して
            ベベル境界線を作成します。
            </summary>
      <param name="type">ベベル境界線の種類</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.#ctor(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color,System.Int32)">
      <summary>
            種類、ハイライト色、影の色、幅を指定して
            ベベル境界線を作成します。
            </summary>
      <param name="type">ベベル境界線の種類</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <param name="thickness">ベベル境界線の幅（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.#ctor(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            種類、ハイライト色、影の色、幅、描画する辺を指定して
            ベベル境界線を作成します。
            </summary>
      <param name="type">ベベル境界線の種類</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <param name="thickness">ベベル境界線の幅（ピクセル単位）</param>
      <param name="left">左辺に描画するかどうか</param>
      <param name="top">上辺に描画するかどうか</param>
      <param name="right">右辺に描画するかどうか</param>
      <param name="bottom">下辺に描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintLowered(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形に凹状境界線を描画します。 
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凹状境界線の幅（ピクセル単位）</param>
      <param name="height">凹状境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintLowered(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形に凹状境界線を描画します。 
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凹状境界線の幅（ピクセル単位）</param>
      <param name="height">凹状境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintRaised(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形内に凸状境界線を描画します。 
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凸状境界線の幅（ピクセル単位）</param>
      <param name="height">凸状境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.PaintRaised(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形内に凸状境界線を描画します。 
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">凸状境界線の幅（ピクセル単位）</param>
      <param name="height">凸状境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形内にベベル境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形内にベベル境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            オブジェクトをXMLに保存します。
            </summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            オブジェクトをXMLからロードします。
            </summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorder.Clone">
      <summary>
境界線オブジェクトをクローンします。
            </summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Type">
      <summary>
            ベベル境界線の種類を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Highlight">
      <summary>
            境界線のハイライト色を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Shadow">
      <summary>
            境界線の影の色を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Thickness">
      <summary>
            境界線の太さを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Inset">
      <summary>
            境界線のインセットを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Left">
      <summary>
            左辺の境界線を描画するかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Top">
      <summary>
            上辺の境界線を描画するかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Right">
      <summary>
            右辺の境界線を描画するかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.BevelBorder.Bottom">
      <summary>
            下辺の境界線を描画するかどうかを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.BevelBorderFactory">
      <summary>
            パラメータ化されたコンストラクタをサポートしない環境で、
            ベベル境界線を作成するためのオブジェクトを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.#ctor">
      <summary>
            ベベル境界線ファクトリを作成します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.CreateBevelBorder(FarPoint.Win.BevelBorderType)">
      <summary>
            指定した種類のベベル境界線を作成します。
            </summary>
      <param name="type">ベベル境界線の種類</param>
      <returns>指定されたパラメータを持つベベル境界線（BevelBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.CreateBevelBorder(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            種類、ハイライト色、影の色を指定して
            ベベル境界線を作成します。
            </summary>
      <param name="type">ベベル境界線の種類（凹／凸）</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <returns>指定されたパラメータを持つベベル境界線（BevelBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.CreateBevelBorder(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color,System.Int32)">
      <summary>
            種類、ハイライト色、影の色、幅を指定して
            ベベル境界線を作成します。
            </summary>
      <param name="type">ベベル境界線の種類（凹／凸）</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <param name="thickness">ベベル境界線の幅（ピクセル単位）</param>
      <returns>指定されたパラメータを持つベベル境界線（BevelBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.BevelBorderFactory.CreateBevelBorder(FarPoint.Win.BevelBorderType,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            種類、ハイライト色、影の色、幅、描画する辺を指定して
            ベベル境界線を作成します。
            </summary>
      <param name="type">ベベル境界線の種類（凹／凸）</param>
      <param name="highlight">ベベル境界線のハイライト色</param>
      <param name="shadow">ベベル境界線の影の色</param>
      <param name="thickness">ベベル境界線の幅（ピクセル単位）</param>
      <param name="left">左辺に描画するかどうか</param>
      <param name="top">上辺に描画するかどうか</param>
      <param name="right">右辺に描画するかどうか</param>
      <param name="bottom">下辺に描画するかどうか</param>
      <returns>指定されたパラメータを持つベベル境界線（BevelBorderオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.CompoundBorder">
      <summary>
            複合境界線を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.#ctor(FarPoint.Win.IBorder,FarPoint.Win.IBorder)">
      <summary>
            指定した内側境界線と外側境界線を使用し、複合境界線を作成します。
            </summary>
      <param name="outside">外側境界線</param>
      <param name="inside">内側境界線</param>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.#ctor(FarPoint.Win.IBorder,FarPoint.Win.IBorder,System.Int32,System.Drawing.Color)">
      <summary>
            内側境界線、外側境界線、面の色を指定して、
            複合境界線を作成します。
            </summary>
      <param name="outer">外側境界線</param>
      <param name="inner">内側境界線</param>
      <param name="faceWidth">境界線の面の幅</param>
      <param name="faceColor">境界線の面の色</param>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形内に複合境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形内に複合境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            オブジェクトをXMLに保存します。
            </summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            オブジェクトをXMLからロードします。
            </summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.CompoundBorder.Clone">
      <summary>
境界線オブジェクトをクローンします。
            </summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.Outside">
      <summary>
            複合境界線の外側境界線を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.Inside">
      <summary>
            複合境界線の内側境界線を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.Inset">
      <summary>
            複合境界線の境界線のインセットを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.FaceColor">
      <summary>
            複合境界線の面の色を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CompoundBorder.FaceWidth">
      <summary>
            複合境界線の面の幅を取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.CompoundBorderFactory">
      <summary>
            パラメータ化されたコンストラクタをサポートしない環境で、
            複合境界線を作成するためのオブジェクトを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.CompoundBorderFactory.#ctor">
      <summary>
            複合境界線ファクトリを作成します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.CompoundBorderFactory.CreateCompoundBorder(FarPoint.Win.IBorder,FarPoint.Win.IBorder)">
      <summary>
            指定した内側境界線と外側境界線を使用し、複合境界線を作成します。
            </summary>
      <param name="outside">外側境界線</param>
      <param name="inside">内側境界線</param>
      <returns>指定されたパラメータを持つ複合境界線（CompoundBorderオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSide">
      <summary>
            ４辺から成る複合境界線オブジェクトの１辺を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor">
      <summary>
            デフォルト色SystemColors.WindowFrame、デフォルト幅１、デフォルト破線スタイルSolid、
            空の破線パターン、および空の複合配列を持つ複合境界線の１辺を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(FarPoint.Win.ComplexBorderSideStyle)">
      <summary>
            スタイルを指定して複合境界線の１辺を作成します。
            </summary>
      <param name="sideStyle">境界線の１辺のスタイル</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(FarPoint.Win.ComplexBorderSideStyle,System.Drawing.Color)">
      <summary>
            スタイルと色を指定して複合境界線の１辺を作成します。
            </summary>
      <param name="sideStyle">境界線の１辺のスタイル</param>
      <param name="sideColor">境界線の１辺の色</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Drawing.Color)">
      <summary>
            色を指定して複合境界線の１辺を作成します。
            </summary>
      <param name="color">境界線の１辺の色</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Drawing.Color,System.Int32)">
      <summary>
            色と幅を指定して複合境界線の１辺を作成します。
            </summary>
      <param name="color">境界線の１辺の色</param>
      <param name="width">境界線の１辺の幅（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)">
      <summary>
            色、幅、破線スタイルを指定して複合境界線の１辺を作成します。
            </summary>
      <param name="color">境界線の１辺の色</param>
      <param name="width">境界線の１辺の幅（ピクセル単位）</param>
      <param name="dashStyle">境界線の１辺の破線スタイル
            （.NET FrameworkのDashStyle列挙体のいずれか）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Single[],System.Single[])">
      <summary>
            色、幅、破線スタイル、破線パターン、複合配列を指定して
            複合境界線の１辺を作成します。
            </summary>
      <param name="color">境界線の１辺の色</param>
      <param name="width">境界線の１辺の幅（ピクセル単位）</param>
      <param name="dashStyle">境界線の１辺の破線スタイル
            （Microsoft .NET FrameworkのDashStyle列挙体のいずれか）</param>
      <param name="dashPattern">境界線の破線パターン</param>
      <param name="compoundArray">平行線とスペースから構成される複合線を表す値の配列</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.#ctor(System.Boolean,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Single[],System.Single[])">
      <summary>
            色、幅、破線スタイル、破線パターン、複合配列、
            描画フラグを指定して複合境界線の１辺を作成します。
            </summary>
      <param name="draw">この境界線を描画するかどうかを表すブール値</param>
      <param name="color">境界線の１辺の色</param>
      <param name="width">境界線の１辺の幅（ピクセル単位）</param>
      <param name="dashStyle">境界線の１辺の破線スタイル
            （Microsoft .NET FrameworkのDashStyle列挙体のいずれか）</param>
      <param name="dashPattern">境界線の破線パターン</param>
      <param name="compoundArray">平行線とスペースから構成される複合線を表す値の配列</param>
      <exception cref="T:System.ArgumentException">指定された破線パターンが有効ではありません。破線パターンは正の値である必要があります。</exception>
      <exception cref="T:System.ArgumentException">指定された複合配列値が有効ではありません。複合配列値は０から１の間である必要があります。</exception>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.Equals(System.Object)">
      <summary>
            指定したオブジェクトをこのComplexBorderSideオブジェクトと比較します。
            </summary>
      <param name="o">比較するオブジェクト</param>
      <returns>等しい場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.GetHashCode">
      <summary>
            ComplexBorderSideオブジェクトのハッシュコードを取得します。 
            </summary>
      <returns>オブジェクトのハッシュコードの整数</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.ToString">
      <summary>
複合境界線の辺を文字列に変換します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSide.Clone">
      <summary>
境界線オブジェクトをクローンします。
            </summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Draw">
      <summary>
            この１辺を複合境界線に描画するかどうかを表すブール値を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Color">
      <summary>
            複合境界線のこの１辺の色を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Width">
      <summary>
            複合境界線のこの１辺の幅を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.DashStyle">
      <summary>
            複合境界線のこの１辺の破線スタイルを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.DashPattern">
      <summary>
            複合境界線のこの１辺の破線パターン配列を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.CompoundArray">
      <summary>
            複合境界線のこの１辺の、平行線とスペースから
            構成される複合線を表す配列値を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Style">
      <summary>
            複合境界線のこの１辺のスタイルを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorderSide.Empty">
      <summary>
            空のComplexBorderSideを取得します（DrawがFalse）。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSideFactory">
      <summary>
            パラメータ化したコンストラクタをサポートしない環境で
            複合境界線の１辺を作成する手段を提供するオブジェクトを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.#ctor">
      <summary>
            複合境界線の１辺を作成します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(FarPoint.Win.ComplexBorderSideStyle)">
      <summary>
            ComplexBorderSideStyleを指定して複合境界線の１辺を作成します。
            </summary>
      <param name="sideStyle">辺のComplexBorderSideStyle</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(FarPoint.Win.ComplexBorderSideStyle,System.Drawing.Color)">
      <summary>
            ComplexBorderSideStyleと色を指定して複合境界線の１辺を作成します。
            </summary>
      <param name="sideStyle">辺のComplexBorderSideStyle</param>
      <param name="sideColor">辺の色</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Drawing.Color)">
      <summary>
            色を指定して複合境界線の１辺を作成します。
            </summary>
      <param name="color">辺の色</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Drawing.Color,System.Int32)">
      <summary>
            色と幅を指定して複合境界線の１辺を作成します。
            </summary>
      <param name="color">辺の色</param>
      <param name="width">辺の幅</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)">
      <summary>
            色、幅、破線スタイルを指定して複合境界線の１辺を作成します。
            </summary>
      <param name="color">辺の色</param>
      <param name="width">辺の幅</param>
      <param name="dashStyle">辺の破線スタイル</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Single[],System.Single[])">
      <summary>
            色、幅、破線スタイル、破線パターン、複合配列を指定して複合境界線の１辺を作成します。
            </summary>
      <param name="color">辺の色</param>
      <param name="width">辺の幅</param>
      <param name="dashStyle">辺の破線スタイル</param>
      <param name="dashPattern">辺の破線パターン</param>
      <param name="compoundArray">辺の複合配列</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideFactory.CreateComplexBorderSide(System.Boolean,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle,System.Single[],System.Single[])">
      <summary>
            描画フラグ、色、幅、破線スタイル、破線パターン、複合配列を指定して複合境界線の１辺を作成します。
            </summary>
      <param name="draw">この辺を描画するかどうか</param>
      <param name="color">辺の色</param>
      <param name="width">辺の幅</param>
      <param name="dashStyle">辺の破線スタイル</param>
      <param name="dashPattern">辺の破線パターン</param>
      <param name="compoundArray">辺の複合配列</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderSideConverter">
      <summary>
            ComplexBorderSideオブジェクトのデータ型を別のデータ型に変換します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            オブジェクトのプロパティ値のセットを指定して、
            この型のオブジェクトを作成します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="propertyValues">プロパティ値のIDictionary</param>
      <returns>指定されたパラメータを持つ複合境界線の１辺（ComplexBorderSideオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して
            新しい値を作成する必要があるかどうかを判定します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            この型のプロパティのセットを取得します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="value">オブジェクト</param>
      <param name="attributes">属性（プロパティ）</param>
      <returns>プロパティ</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            このオブジェクトがプロパティをサポートするかどうかを判定します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            複合境界線の１辺のオブジェクトを指定した型に変換できるかどうかを判定します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="destinationType">型</param>
      <returns>複合境界線の１辺のオブジェクトを指定した型に変換できる場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
            ComplexBorderSideオブジェクトを文字列に変換します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="culture">CultureInfo</param>
      <param name="value">オブジェクト</param>
      <param name="destinationType">型</param>
      <returns>ComplexBorderSideオブジェクトの文字列表現</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
      </summary>
      <param name="manager">
      </param>
      <param name="codeObject">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderSideCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
      </summary>
      <param name="manager">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:FarPoint.Win.ComplexBorder">
      <summary>
            複合境界線を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.#ctor(FarPoint.Win.ComplexBorderSide)">
      <summary>
            指定したComplexBorderSideオブジェクトを４辺すべてに使用して
            複合境界線を作成します。
            </summary>
      <param name="sides">４辺すべてに使用する複合境界線の辺（ComplexBorderSideオブジェクト）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.#ctor(FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide)">
      <summary>
            各辺のComplexBorderSideStyleを指定して複合境界線を作成します。
            </summary>
      <param name="left">複合境界線の左辺（ComplexBorderSideオブジェクト）</param>
      <param name="top">複合境界線の上辺（ComplexBorderSideオブジェクト）</param>
      <param name="right">複合境界線の右辺（ComplexBorderSideオブジェクト）</param>
      <param name="bottom">複合境界線の下辺（ComplexBorderSideオブジェクト）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            シリアル化情報から新しい複合境界線オブジェクトを作成します。
            </summary>
      <param name="info">シリアル化したオブジェクトデータを保持するオブジェクト</param>
      <param name="context">シリアル化元またはシリアル化先に関するコンテキスト情報</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
複合境界線オブジェクトをシリアル化します。
            </summary>
      <param name="info">シリアル化したオブジェクトデータを保持するオブジェクト</param>
      <param name="context">シリアル化元またはシリアル化先に関するコンテキスト情報</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形内に複合境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形内に複合境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">複合境界線の幅（ピクセル単位）</param>
      <param name="height">複合境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            オブジェクトをXMLに保存します。
            </summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            オブジェクトをXMLからロードします。
            </summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Equals(System.Object)">
      <summary>
            指定したオブジェクトをこのComplexBorderオブジェクトと比較します。
            </summary>
      <param name="o">比較するオブジェクト</param>
      <returns>等しい場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.GetHashCode">
      <summary>
            ComplexBorderオブジェクトのハッシュコードを取得します。 
            </summary>
      <returns>オブジェクトのハッシュコードの整数</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorder.Clone">
      <summary>
境界線オブジェクトをクローンします。
            </summary>
      <returns>この境界線オブジェクトのコピー。</returns>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Inset">
      <summary>
            境界線のインセットを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Left">
      <summary>
            左辺のComplexBorderSideオブジェクトを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Top">
      <summary>
            上辺のComplexBorderSideオブジェクトを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Right">
      <summary>
            右辺のComplexBorderSideオブジェクトを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ComplexBorder.Bottom">
      <summary>
            下辺のComplexBorderSideオブジェクトを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ComplexBorderFactory">
      <summary>
            パラメータ化したコンストラクタをサポートしない環境で
            複合境界線を作成する手段を提供するオブジェクトを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderFactory.#ctor">
      <summary>
            複合境界線ファクトリを作成します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderFactory.CreateComplexBorder(FarPoint.Win.ComplexBorderSide)">
      <summary>
            指定した辺を４辺すべてに使用して
            複合境界線を作成します。
            </summary>
      <param name="sides">４辺すべてに使用する複合境界線の辺（ComplexBorderSideオブジェクト）</param>
      <returns>指定されたパラメータを持つ複合境界線（ComplexBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.ComplexBorderFactory.CreateComplexBorder(FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide,FarPoint.Win.ComplexBorderSide)">
      <summary>
            各辺を指定して複合境界線を作成します。
            </summary>
      <param name="left">複合境界線の左辺（ComplexBorderSideオブジェクト）</param>
      <param name="top">複合境界線の上辺（ComplexBorderSideオブジェクト）</param>
      <param name="right">複合境界線の右辺（ComplexBorderSideオブジェクト）</param>
      <param name="bottom">複合境界線の下辺（ComplexBorderSideオブジェクト）</param>
      <returns>指定されたパラメータを持つ複合境界線（ComplexBorderオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.DoubleLineBorder">
      <summary>
            二重境界線を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.#ctor(System.Drawing.Color)">
      <summary>
            色を指定して、３ピクセル幅の二重境界線を作成します。
            </summary>
      <param name="color">二重境界線の色</param>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.#ctor(System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            色と描画する辺を指定して二重境界線を
            作成します。
            </summary>
      <param name="color">二重境界線の色</param>
      <param name="left">左辺に描画するかどうか</param>
      <param name="top">上辺に描画するかどうか</param>
      <param name="right">右辺に描画するかどうか</param>
      <param name="bottom">下辺に描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.Paint(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            指定した矩形内に境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイスインタフェース</param>
      <param name="x">左上隅のx座標</param>
      <param name="y">左上隅のy座標</param>
      <param name="width">境界線幅（ピクセル単位）</param>
      <param name="height">境界線の高さ（ピクセル単位）</param>
      <param name="rightToLeft">境界線を右から左へ描画するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            オブジェクトをXMLに保存します。
            </summary>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorder.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            オブジェクトをXMLからロードします。
            </summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="P:FarPoint.Win.DoubleLineBorder.Thickness">
      <summary>
            二重境界線の幅を取得します（常に３に設定されます）。
            </summary>
    </member>
    <member name="T:FarPoint.Win.DoubleLineBorderFactory">
      <summary>
            パラメータ化したコンストラクタをサポートしない環境で
            二重境界線を作成する手段を提供するクラスを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorderFactory.#ctor">
      <summary>
            二重境界線ファクトリを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorderFactory.CreateDoubleLineBorder(System.Drawing.Color)">
      <summary>
            色を指定して二重境界線を作成します。
            </summary>
      <param name="color">二重境界線の色</param>
      <returns>指定されたパラメータを持つ二重境界線（DoubleLineBorderオブジェクト）</returns>
    </member>
    <member name="M:FarPoint.Win.DoubleLineBorderFactory.CreateDoubleLineBorder(System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            色と描画する辺を指定して二重境界線を作成します。
            </summary>
      <param name="color">二重境界線の色</param>
      <param name="left">左辺に描画するかどうか</param>
      <param name="top">上辺に描画するかどうか</param>
      <param name="right">右辺に描画するかどうか</param>
      <param name="bottom">下辺に描画するかどうか</param>
      <returns>指定されたパラメータを持つ二重境界線（DoubleLineBorderオブジェクト）</returns>
    </member>
    <member name="T:FarPoint.Win.InstanceDescriptorCodeDomSerializer">
      <summary>
内部使用のみ。インスタンス記述子のコード DOM シリアライザ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.InstanceDescriptorCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
逆シリアル化します。
            </summary>
      <param name="manager">シリアル化マネージャ</param>
      <param name="codeObject">コード オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.InstanceDescriptorCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>
シリアライザ。
            </summary>
      <param name="manager">シリアル化マネージャ</param>
      <param name="value">値</param>
    </member>
    <member name="T:FarPoint.Win.ApplyBorderEventArgs">
      <summary>
            ApplyBorderイベントのイベントデータを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ApplyBorderEventArgs.#ctor(FarPoint.Win.IBorder)">
      <summary>
            新しいApplyBorderEventArgsオブジェクトを構築します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ApplyBorderEventArgs.Border">
      <summary>
            境界線を取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ApplyBorderEventHandler">
      <summary>
            ApplyBorderイベントを処理する定義済みメソッドを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.BorderEditorUI">
      <summary>
            境界線エディタユーザーインタフェースを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.BorderEditorUI.components">
      <summary>
            必須デザイナ変数。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderEditorUI.#ctor(FarPoint.Win.IBorder)">
      <summary>
            新しい境界線エディタユーザーインタフェースを作成します。
            </summary>
      <param name="border">
      </param>
    </member>
    <member name="M:FarPoint.Win.BorderEditorUI.Dispose(System.Boolean)">
      <summary>
            使用されたリソースをすべてクリーンアップします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.BorderEditorUI.InitializeComponent">
      <summary>
            デザイナサポートの必須メソッド。このメソッドの内容は
            コードエディタで変更しないでください。
            </summary>
    </member>
    <member name="E:FarPoint.Win.BorderEditorUI.ApplyChanged">
      <summary>
            変更を適用したときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.BorderEditorUI.DiscardChanged">
      <summary>
            変更を破棄したときに発生します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ButtonTextAlign">
      <summary>
            ボタンテキストの配置を指定します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonTextAlign.TextBottomPictTop">
      <summary>
            テキストをコントロールの下部に、ピクチャを上部に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonTextAlign.TextTopPictBottom">
      <summary>
            テキストをコントロールの上部に、ピクチャを下部に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonTextAlign.TextLeftPictRight">
      <summary>
            テキストをコントロールの左側に、ピクチャを右側に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonTextAlign.TextRightPictLeft">
      <summary>
            テキストをコントロールの右側に、ピクチャを左側に配置します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.BackStyle">
      <summary>
背景スタイルを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.BackStyle.Default">
      <summary>
デフォルトの背景スタイルを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.BackStyle.Gradient">
      <summary>
グラデーション背景スタイルを表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.FpButtonPaintArgs">
      <summary>
FarPoint ボタン描画イベント引数。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.g">
      <summary>
ボタンのグラフィック デバイス。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.r">
      <summary>
ボタンの矩形領域。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.rectTextIn">
      <summary>
テキストの矩形領域。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.backColor">
      <summary>
ボタンの背景色。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.foreColor">
      <summary>
ボタンのテキスト色。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.font">
      <summary>
ボタンのテキストのフォント フェース。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.halign">
      <summary>
ボタンのテキストの水平方向の配置。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.valign">
      <summary>
ボタンのテキストの垂直方向の配置。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.pressed">
      <summary>
ボタンが押されたかどうか。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.focus">
      <summary>
ボタンがフォーカスを持つかどうか。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.text">
      <summary>
ボタンのテキストを表す String。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.textDown">
      <summary>
ボタンが押されたときのテキストを表す String。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.nAlign">
      <summary>
ボタンのテキストの配置。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.textOrientation">
      <summary>
ボタンのテキストの向き。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.wordWrap">
      <summary>
テキストを複数行に折り返せるかどうか。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.shadowSize">
      <summary>
ボタンの影のサイズ。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.darkColor">
      <summary>
ボタンの端の暗色。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.lightColor">
      <summary>
ボタンの端の明色。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.pictUp">
      <summary>
押されていないときのボタンの画像。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.pictDown">
      <summary>
押されているときのボタンの画像。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.bLocked">
      <summary>
ボタンがロックされているかどうか。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.prefix">
      <summary>
ボタンのホットキー接頭辞。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.style">
      <summary>
ボタンの表示スタイル。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.mouseOver">
      <summary>
マウスがボタンの上に置かれているかどうか。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.backcolor2">
      <summary>
ボタンのグラデーションの２番目の背景色。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.backstyle">
      <summary>
ボタンの背景スタイル。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.mode">
      <summary>
ボタンの線形グラデーション モード。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButtonPaintArgs.rightToLeft">
      <summary>
ボタンを右から左へ描画するかどうか。
            </summary>
    </member>
    <member name="T:FarPoint.Win.FpButton">
      <summary>
            FarPointのボタンコントロールを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpButton.theme">
      <summary>
内部使用のみ。表示スタイルのテーマ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.#cctor">
      <summary>
      </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.Dispose(System.Boolean)">
      <summary>
      </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="M:FarPoint.Win.FpButton.#ctor">
      <summary>
            新しいFarPointボタンコントロールを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnButtonClicked(System.EventArgs)">
      <summary>
ButtonClicked イベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>
VisualStyleTheme の ThemeChanged イベントを処理します。
            </summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnGotFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnLostFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnDoubleClick(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            背景を描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseLeave(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnMouseEnter(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Boolean)">
      <summary>
            ボタンを持つセルを描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="r">画像矩形</param>
      <param name="backColor">背景色</param>
      <param name="foreColor">前景（テキスト）色</param>
      <param name="font">テキストのフォント</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="pressed">ボタンが押されているかどうか</param>
      <param name="focus">フォーカスがあるかどうか</param>
      <param name="text">押されていないときのボタンのテキスト</param>
      <param name="textDown">押されたときのボタンのテキスト</param>
      <param name="nAlign">ボタンの画像を基準としたテキストの配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="shadowSize">ボタン周囲の影のサイズ</param>
      <param name="darkColor">影（ボタンの暗い部分）の色</param>
      <param name="lightColor">ボタンの明るい部分の色</param>
      <param name="pictUp">押されていないときのボタンのピクチャ（画像）</param>
      <param name="pictDown">押されたときのボタンのピクチャ（画像）</param>
      <param name="bLocked">セルがロックされているかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Boolean,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Image,System.Drawing.Image,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.VisualStyles,System.Boolean)">
      <param name="backColor2">グラデーション ボタンの２番目の色を指定します。</param>
      <param name="backstyle">背景描画の種類を指定します。</param>
      <param name="mode">グラデーション ボタンの描画方法を指定します。</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,System.Drawing.Font,System.String,System.String,FarPoint.Win.ButtonTextAlign,System.Boolean,System.Int32,System.Drawing.Image,System.Drawing.Image)">
      <summary>
            ボタンのテキストとピクチャを表示するために必要な高さと幅を計算します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="size">サイズ</param>
      <param name="font">フォント</param>
      <param name="text">押されていないときのボタンのテキスト</param>
      <param name="textDown">押されたときのボタンのテキスト</param>
      <param name="nAlign">テキスト配置</param>
      <param name="wordWrap">テキストを複数行に折り返すかどうか</param>
      <param name="shadowSize">ボタン周囲の影のサイズ</param>
      <param name="pictUp">押されていないときのボタンのピクチャ（画像）</param>
      <param name="pictDown">押されたときのボタンのピクチャ（画像）</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,System.Drawing.Font,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.TextOrientation,System.Boolean,System.Int32,System.Drawing.Image,System.Drawing.Image,System.Drawing.Text.HotkeyPrefix)">
      <param name="prefix">ホットキー接頭辞</param>
    </member>
    <member name="M:FarPoint.Win.FpButton.PerformClick">
      <summary>
コントロールのClickイベントを生成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpButton.NotifyDefault(System.Boolean)">
      <summary>
このボタンが外観上デフォルトボタンであることをコントロールに通知します。
            </summary>
      <param name="value">コントロールがデフォルトボタンとして動作するかどうか</param>
    </member>
    <member name="E:FarPoint.Win.FpButton.ButtonClicked">
      <summary>
ボタン コントロールがクリックされたときに発生します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.HotkeyPrefix">
      <summary>
アンパーサンド（&amp;）文字でテキストに下線を引くかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.VisualStyles">
      <summary>
表示スタイルを使用するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.BackColor2">
      <summary>
グラデーション ボタンの描画時に使用される２番目の色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.GradientMode">
      <summary>
グラデーション ボタンの描画スタイルを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.BackgroundStyle">
      <summary>
背景のレンダリング方法を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.DarkColor">
      <summary>
            ボタンの3D表示の外側境界線を描画するための色を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.LightColor">
      <summary>
            ボタンの3D表示の内側境界線を描画するための色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.WordWrap">
      <summary>
            ボタン内で１行に入らないテキストを複数行に
            折り返すかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.ShadowSize">
      <summary>
ボタン周囲の影のサイズを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.Picture">
      <summary>
            ボタンに表示する画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.PictureDown">
      <summary>
            押されたときのボタン内に表示する画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.TwoState">
      <summary>
            ボタンが２値式ボタンかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.Value">
      <summary>
            ボタンの値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.TextAlign">
      <summary>
            ボタンのピクチャを基準としたテキストの配置方法を取得または設定します
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.TextOrientation">
      <summary>
            ボタン描画時のテキストの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.TextDown">
      <summary>
            押されたときに表示するボタンのテキストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.HorizontalAlignment">
      <summary>
            ボタンのテキストの水平方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.VerticalAlignment">
      <summary>
            ボタンのテキストの垂直方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpButton.DialogResult">
      <summary>
ボタンがクリックされたときに親に返される値を取得または設定します。 
            </summary>
    </member>
    <member name="T:FarPoint.Win.CanvasBase">
      <summary>
            キャンバスのベースを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ElementControl">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IElement">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.IElement.SetRedraw(System.Boolean,System.Boolean)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="E:FarPoint.Win.IElement.ForegroundImageChanged">
      <summary>
            コントロールの前景画像を変更したときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.IElement.BackgroundImageChanged">
      <summary>
            コントロールの背景画像を変更したときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.IElement.PictureChanged">
      <summary>
            コントロールのピクチャを変更したときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.IElement.FontChanged">
      <summary>
            コントロールのフォントを変更したときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.IElement.Click">
      <summary>
            ポインタが要素の上に置かれた状態で、ユーザーが左右いずれかのマウスボタンをクリックして解放すると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.IElement.DoubleClick">
      <summary>
            ポインタが要素の上に置かれた状態で、ユーザーが左右いずれかのマウスボタンのクリックと解放を続けて２回実行すると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.IElement.MouseDown">
      <summary>
            ユーザーがマウスボタンをクリックしたときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.IElement.MouseUp">
      <summary>
            ユーザーがマウスボタンを離したときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.IElement.MouseMove">
      <summary>
            ユーザーがマウスを動かしたときに発生します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementControl.PICTURE_MARGIN_DEFAULT">
      <summary>
            要素のデフォルトピクチャマージンを表します（２ピクセル）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementControl.BACK_COLOR_DEFAULT">
      <summary>
            要素のデフォルト背景色を表します（SystemColors.Control）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementControl.FORE_COLOR_DEFAULT">
      <summary>
            要素のデフォルトテキスト色を表します（SystemColors.ControlText）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementControl.fontOverride">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.#ctor">
      <summary>
            コントロール要素を作成します（ElementControlオブジェクト）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.#ctor(System.Object)">
      <summary>
            指定したオブジェクトに基づいてコントロール要素（ElementControlオブジェクト）を作成します。
            </summary>
      <param name="cloneFrom">設定のコピー元のコントロール要素</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializePictureTransparencyTolerance">
      <summary>
            PictureTransparencyToleranceプロパティを持続させるかどうかを指定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetPictureTransparencyTolerance">
      <summary>
            要素のピクチャの透過許容誤差をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.AdjustClientArea">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetRedraw(System.Boolean,System.Boolean)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetBorder">
      <summary>
            コントロールの境界線をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializeBorder">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializePictureTransparencyColor">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetPictureTransparencyColor">
      <summary>
            ピクチャの透過色をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetPicture">
      <summary>
            コントロールのピクチャをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializeFont">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetFont">
      <summary>
            コントロールのフォントをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnParentChanged(System.EventArgs)">
      <summary>
親コントロールが変更されたときに ParentChanged イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetFont">
      <summary>
            フォントが指定されていない場合、現在のフォントまたはデフォルトのフォントを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetText">
      <summary>
            内容をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializeBackColor">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetBackColor">
      <summary>
            コントロールの背景色をデフォルト値にリセットします。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ShouldSerializeForeColor">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetForeColor">
      <summary>
            コントロールのテキスト色をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Select(System.Boolean)">
      <summary>
            コントロールをアクティブにします。
            </summary>
      <param name="selected">選択されている場合はTrue、それ以外の場合はFalse</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetControl">
      <summary>
            コントロールを取得します。  
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Update">
      <summary>
            コントロールにクライアント領域内で無効となった領域を再描画させます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
要素の境界を、指定したサイズの境界矩形の位置とサイズに設定します。 
            </summary>
      <param name="x">境界矩形の左上隅のx座標</param>
      <param name="y">境界矩形の左上隅のy座標</param>
      <param name="width">境界矩形の幅（ピクセル単位）</param>
      <param name="height">境界矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetBounds(System.Drawing.Rectangle)">
      <summary>
            指定した境界矩形オブジェクトの位置とサイズを使用して要素の境界を設定します。 
            </summary>
      <param name="rectInput">境界矩形を含むRectangleオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Focus(System.Boolean)">
      <summary>
            フォーカスをコントロールに移動します。
            </summary>
      <param name="giveFocus">フォーカスをコントロールに移動するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>
背景ピクチャが変更されたときに BackgroundImageChanged イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnForegroundImageChanged(System.Object,System.EventArgs)">
      <summary>
前景ピクチャが変更されたときに<see cref="F:FarPoint.Win.ElementControl.ForegroundImageChanged" />イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPictureChanged(System.Object,System.EventArgs)">
      <summary>
ピクチャが変更されたときに<see cref="F:FarPoint.Win.ElementControl.PictureChanged" />イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnLostFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnGotFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnLostFocusNoRefresh(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnGotFocusNoRefresh(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnClick(System.EventArgs)">
      <summary>
ユーザーがコントロールの上にカーソルを置いてクリックしたときに Click イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoClick(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnDoubleClick(System.EventArgs)">
      <summary>
ユーザーがコントロールの上にカーソルを置いてダブルクリックしたときに DoubleClick イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
コントロールの上にカーソルがあるときにポインタ ボタンが押された場合、MouseDown イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
コントロールの上にカーソルがあるときにポインタ ボタンが離された場合、MouseUp イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
コントロールの上にカーソルがあり、コントロール内をポインタが移動したときに、MouseMove イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ResetElements">
      <summary>
            要素をデフォルト設定にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Reset">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.Clone">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetState(FarPoint.Win.ElementState)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="eState">コントロールの状態</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.ToggleState">
      <summary>
            コントロールの状態を切り替えます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetClientRectangle">
      <summary>
            内部使用のみ。
            </summary>
      <returns>コントロールの座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <returns>コントロールの座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
要素自体の再描画が要求されたときに Paint イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>
コントロール（テキストとピクチャ）をオーバーライドスタイルで描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">領域を囲む矩形</param>
      <param name="overrideStyle">スタイルとして使用するElementStyle</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            コントロール（テキストとピクチャ）を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
      <param name="rPict">ピクチャを囲む矩形</param>
      <param name="rText">テキストを囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.String)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
      <param name="rPict">ピクチャを囲む矩形</param>
      <param name="rText">テキストを囲む矩形</param>
      <param name="paintString">文字列</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="fmt">書式文字列</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintTextAndPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintForegroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="faceRect">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintSpecialForeground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            コントロールの背景色を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>
コントロールの背景をオーバーライドスタイルで描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">領域を囲む矩形</param>
      <param name="overrideStyle">スタイルのオーバーライドに使用するElementStyle</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            コントロールの背景が描画されたときに発生します。
            </summary>
      <param name="e">イベントデータを含むPaintEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.SetElementStyle(FarPoint.Win.ElementStyle)">
      <summary>
            要素のスタイルを設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.GetElementStyle">
      <summary>
            要素のスタイルを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.AddStateNotify(FarPoint.Win.IStateNotify)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.RemoveStateNotify(FarPoint.Win.IStateNotify)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FireStateNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#get_Tag">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#set_Tag(System.Object)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_BackgroundImageChanged(System.EventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_BackgroundImageChanged(System.EventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_FontChanged(System.EventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_FontChanged(System.EventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_Click(System.EventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_Click(System.EventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_DoubleClick(System.EventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_DoubleClick(System.EventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_MouseDown(System.Windows.Forms.MouseEventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_MouseDown(System.Windows.Forms.MouseEventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_MouseUp(System.Windows.Forms.MouseEventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_MouseUp(System.Windows.Forms.MouseEventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#add_MouseMove(System.Windows.Forms.MouseEventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementControl.FarPoint#Win#IElement#remove_MouseMove(System.Windows.Forms.MouseEventHandler)">
      <summary>
            コントロール要素を表します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementControl.PictureChanged">
      <summary>
            コントロールのピクチャが変更されたときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementControl.ForegroundImageChanged">
      <summary>
            コントロールの前景画像が変更されたときに発生します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureTransparencyTolerance">
      <summary>
            要素の透過許容誤差を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextWrap">
      <summary>
            要素内で改行せずにテキストを自動的に折り返すどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextWrapPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.CancelMouse">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.CancelMousePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Focused">
      <summary>
            コントロールがフォーカスを持つかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ContainsFocus">
      <summary>
            要素に現在入力フォーカスがあるかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureMargin">
      <summary>
            テキストとピクチャの間の余白を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureMarginPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginBottom">
      <summary>
            コントロール下端と内容の間の余白を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginBottomPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginTop">
      <summary>
            コントロール上端と内容の間の余白を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginTopPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginLeft">
      <summary>
            コントロール左端と内容の間の余白を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginLeftPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginRight">
      <summary>
            コントロール右端と内容の間の余白を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.MarginRightPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Redraw">
      <summary>
            要素の描画を許可するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Parent">
      <summary>
            コントロールの親を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ParentPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Visible">
      <summary>
コントロールを表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Enabled">
      <summary>
            コントロールがフォーカスを受け取ってユーザーアクションに応答するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Selectable">
      <summary>
            コントロールがフォーカスを受け取れるかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.SelectablePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.CanFocus">
      <summary>
            コントロールがフォーカスを受け取れるかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.CanFocusPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Border">
      <summary>
            コントロールの境界線を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.BorderPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignText">
      <summary>
            コントロールのテキスト配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignTextPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextOrientation">
      <summary>
            コントロールのテキストの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextOrientationPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureOrientation">
      <summary>
            コントロールのピクチャの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureOrientationPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PictureTransparencyColor">
      <summary>
            コントロールのピクチャの透過色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ForegroundImage">
      <summary>
            コントロールの前景画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ForegroundImagePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.BackgroundImage">
      <summary>
            コントロールの背景画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Picture">
      <summary>
            コントロールのピクチャを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.PicturePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.DrawFocusRectangle">
      <summary>
            コントロールのフォーカス矩形の描画スタイルを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.DrawFocusRectanglePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.State">
      <summary>
            コントロールの要素の状態を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.StatePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Font">
      <summary>
            コントロールのフォントを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.FontPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Text">
      <summary>
            コントロールの内容を、表示されたものと完全一致する文字列として取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.TextPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.About">
      <summary>
            コントロールに関する情報を表示します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Name">
      <summary>
            コントロールを識別するためにコード内で使用する名前を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.BackColor">
      <summary>
            コントロールの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.BackColorPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ForeColor">
      <summary>
            コントロールのテキスト色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ForeColorPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignHorz">
      <summary>
            コントロールの内容の水平方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignHorzPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignVert">
      <summary>
            コントロールの内容の垂直方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.AlignVertPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Rectangle">
      <summary>
            コントロールのクライアント領域内の矩形を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.StateNotifyList">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.Elements">
      <summary>
            現在のElementControlが含むIElement派生オブジェクトのコレクションを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementControl.ElementsPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.#ctor">
      <summary>
            キャンバスのベースを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.OnSizeChanged(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.Reset">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.ResetText">
      <summary>
            内容をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.AdjustClientArea">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.ProcessMnemonic(System.Char)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.SetElementBounds(System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.OnGotFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。MouseDown処理。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。MouseUp処理。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CanvasBase.CanFocus">
      <summary>
            コントロールがフォーカスを受け取れるかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.CanvasBase.HotkeyPrefix">
      <summary>
            文字の前に入力されたアンパーサンド（&amp;）によって指定される
            ホットキーに、アンダースコア（_）を表示するかどうかを
            取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.CanvasContainerBase">
      <summary>
            キャンバスコンテナのベースを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ElementContainerControl">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IWindowlessChildSupport">
      <summary>
            ウィンドウなしの子コントロールをサポートするオブジェクトによって提供されるインタフェース。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementContainerControl.PICTURE_MARGIN_DEFAULT">
      <summary>
            要素のデフォルトピクチャマージンを表します（２ピクセル）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementContainerControl.BACK_COLOR_DEFAULT">
      <summary>
            要素のデフォルト背景色を表します（SystemColors.Control）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementContainerControl.FORE_COLOR_DEFAULT">
      <summary>
            要素のデフォルトテキスト色を表します（SystemColors.ControlText）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementContainerControl.fontOverride">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.#ctor">
      <summary>
            子を含む新しいコントロール要素を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.#ctor(System.Object)">
      <summary>
            指定したオブジェクトを複製して、子を含む新しいコントロール要素を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.#ctor(System.Object,System.Boolean)">
      <summary>
            指定したオブジェクトを複製して、子を含む新しいコントロール要素を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializePictureTransparencyTolerance">
      <summary>
            PictureTransparencyToleranceプロパティを持続させるかどうかを指定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetPictureTransparencyTolerance">
      <summary>
            要素のピクチャの透過許容誤差をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetRedraw(System.Boolean,System.Boolean)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetBorder">
      <summary>
            コントロールの境界線をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeBorder">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeTextRotationAngle">
      <summary>
TextRotationAngleプロパティを永続化する必要があるかどうかを示します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetTextRotationAngle">
      <summary>
要素のテキストの回転角度をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializePictureTransparencyColor">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetPictureTransparencyColor">
      <summary>
コントロールのピクチャの透過色（PictureTransparencyColorプロパティ）をデフォルト色にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeFont">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetFont">
      <summary>
            コントロールのフォントをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnParentChanged(System.EventArgs)">
      <summary>
            親が変更されたときに発生します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetFont">
      <summary>
            フォントが指定されていない場合、現在のフォントまたはデフォルトのフォントを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetText">
      <summary>
            内容をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeBackColor">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetBackColor">
      <summary>
            コントロールの背景色をデフォルト値にリセットします。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ShouldSerializeForeColor">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetForeColor">
      <summary>
            ForeColorプロパティをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Select(System.Boolean)">
      <summary>
            コントロールをアクティブにします。
            </summary>
      <param name="selected">選択された場合はTrue、それ以外の場合はFalse。</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetControl">
      <summary>
            Controlオブジェクトを取得します。  
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Update">
      <summary>
            コントロールにクライアント領域内で無効となった領域を再描画させます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            整数値を使用して、コントロールの境界を指定した位置とサイズに設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetBounds(System.Drawing.Rectangle)">
      <summary>
            指定した矩形オブジェクトの位置とサイズを使用してコントロールの境界を設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Focus(System.Boolean)">
      <summary>
            フォーカスをコントロールに移動します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>
            背景ピクチャが変更されたときに発生します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnForegroundImageChanged(System.Object,System.EventArgs)">
      <summary>
            前景ピクチャが変更されたときに発生します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPictureChanged(System.Object,System.EventArgs)">
      <summary>
            ピクチャを変更したとき発生します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnLostFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnGotFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnLostFocusNoRefresh(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnGotFocusNoRefresh(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnClick(System.EventArgs)">
      <summary>
            ユーザーがコントロールをクリックしたときに発生します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoClick(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnDoubleClick(System.EventArgs)">
      <summary>
            ユーザーがコントロールをダブルクリックしたときに発生します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            カーソルがコントロールの上に置かれた状態でマウスボタンがクリックされると発生します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            カーソルがコントロールの上に置かれた状態でマウスボタンが解放されると発生します。 
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            ポインタがコントロール内を移動し、カーソルがコントロールの上に置かれると発生します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ResetElements">
      <summary>
            要素をデフォルト設定にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Reset">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Clone">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.Clone(System.Boolean)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetState(FarPoint.Win.ElementState)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="eState">コントロールの状態</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.ToggleState">
      <summary>
            コントロールの状態を切り替えます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetClientRectangle">
      <summary>
            内部使用のみ。
            </summary>
      <returns>コントロールの座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <returns>コントロールの座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            要素に再描画が要求されているときに発生します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>
コントロール（テキストとピクチャ）をオーバーライドスタイルで描画します。
            </summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="rectInput">描画するコントロールの座標</param>
      <param name="overrideStyle">描画に使用するElementStyle</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            コントロール（テキストとピクチャ）を描画します。
            </summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="rectInput">描画するコントロールの座標</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
      <param name="rPict">ピクチャを囲む矩形</param>
      <param name="rText">テキストを囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@,System.String)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
      <param name="rPict">ピクチャを囲む矩形</param>
      <param name="rText">テキストを囲む矩形</param>
      <param name="paintString">文字列</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="fmt">文字列書式</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintTextAndPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintForegroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="faceRect">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintSpecialForeground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            コントロールの背景色を描画します。
            </summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="rectInput">描画するコントロールの座標</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>
コントロールの背景をオーバーライドスタイルで描画します。
            </summary>
      <param name="g">Graphicsオブジェクト</param>
      <param name="rectInput">描画するコントロールの座標</param>
      <param name="overrideStyle">描画に使用するElementStyle</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            コントロールに再描画が要求されているときに発生します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.SetElementStyle(FarPoint.Win.ElementStyle)">
      <summary>
            要素のスタイルを設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.GetElementStyle">
      <summary>
            要素のスタイルを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.AddStateNotify(FarPoint.Win.IStateNotify)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.RemoveStateNotify(FarPoint.Win.IStateNotify)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FireStateNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#get_Tag">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#set_Tag(System.Object)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_BackgroundImageChanged(System.EventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_BackgroundImageChanged(System.EventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_FontChanged(System.EventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_FontChanged(System.EventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_Click(System.EventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_Click(System.EventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_DoubleClick(System.EventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_DoubleClick(System.EventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_MouseDown(System.Windows.Forms.MouseEventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_MouseDown(System.Windows.Forms.MouseEventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_MouseUp(System.Windows.Forms.MouseEventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_MouseUp(System.Windows.Forms.MouseEventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#add_MouseMove(System.Windows.Forms.MouseEventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementContainerControl.FarPoint#Win#IElement#remove_MouseMove(System.Windows.Forms.MouseEventHandler)">
      <summary>
            子を含むコントロール要素を表します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureTransparencyTolerance">
      <summary>
            要素の透過許容誤差を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextWrap">
      <summary>
            改行せずにテキストを自動的に折り返すどうかを取得または設定します。 
            </summary>
      <example><code lang="csharp">
            element.TextWrap = true;
            </code><code lang="vb">
            element.TextWrap = True;
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.CancelMouse">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Focused">
      <summary>
            コントロールがフォーカスを持つかどうかを取得します。
            </summary>
      <example><code lang="csharp">
            control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp");
            control.PictureMargin = 34;
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.MarginLeft = 3;
            control.MarginRight = 3;
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180;
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left;
            control.BackColor = Color.Red;
            control.Text = "NO SMOKING";
            private void button1_Click(object sender, System.EventArgs e)
            {
            // Turn off the No Smoking sign
            control.Visible=false;
            }
            </code><code lang="vb">
            control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp")
            control.PictureMargin = 34
            control.MarginTop = 3
            control.MarginBottom = 3
            control.MarginLeft = 3
            control.MarginRight = 3
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180
            control.MarginTop = 3
            control.MarginBottom = 3
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left
            control.BackColor = Color.Red
            control.Text = "NO SMOKING"
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
            'Turn off the NO Smoking sign
            control.Visible = False
            End Sub
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ContainsFocus">
      <summary>
            要素に現在入力フォーカスがあるかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureMargin">
      <summary>
            テキストとピクチャの間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp");
            control.PictureMargin = 34;
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.MarginLeft = 3;
            control.MarginRight = 3;
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180;
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left;
            control.BackColor = Color.Red;
            control.Text = "NO SMOKING";
            </code><code lang="vb">
            control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp")
            control.PictureMargin = 34
            control.MarginTop = 3
            control.MarginBottom = 3
            control.MarginLeft = 3
            control.MarginRight = 3
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180
            control.MarginTop = 3
            control.MarginBottom = 3
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left
            control.BackColor = Color.Red
            control.Text = "NO SMOKING"
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginBottom">
      <summary>
            コントロール下端と内容の間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp");
            control.PictureMargin = 34;
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.MarginLeft = 3;
            control.MarginRight = 3;
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180;
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left;
            control.BackColor = Color.Red;
            control.Text = "NO SMOKING";
            </code><code lang="vb">
            control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp")
            control.PictureMargin = 34
            control.MarginTop = 3
            control.MarginBottom = 3
            control.MarginLeft = 3
            control.MarginRight = 3
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180
            control.MarginTop = 3
            control.MarginBottom = 3
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left
            control.BackColor = Color.Red
            control.Text = "NO SMOKING"
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginTop">
      <summary>
            コントロール上端と内容の間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp");
            control.PictureMargin = 34;
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.MarginLeft = 3;
            control.MarginRight = 3;
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180;
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left;
            control.BackColor = Color.Red;
            control.Text = "NO SMOKING";
            </code><code lang="vb">
            control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp")
            control.PictureMargin = 34
            control.MarginTop = 3
            control.MarginBottom = 3
            control.MarginLeft = 3
            control.MarginRight = 3
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180
            control.MarginTop = 3
            control.MarginBottom = 3
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left
            control.BackColor = Color.Red
            control.Text = "NO SMOKING"
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginLeft">
      <summary>
            コントロール左端と内容の間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp");
            control.PictureMargin = 34;
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.MarginLeft = 3;
            control.MarginRight = 3;
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180;
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left;
            control.BackColor = Color.Red;
            control.Text = "NO SMOKING";
            </code><code lang="vb">
            control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp")
            control.PictureMargin = 34
            control.MarginTop = 3
            control.MarginBottom = 3
            control.MarginLeft = 3
            control.MarginRight = 3
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180
            control.MarginTop = 3
            control.MarginBottom = 3
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left
            control.BackColor = Color.Red
            control.Text = "NO SMOKING"
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.MarginRight">
      <summary>
            コントロール右端と内容の間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            control.Picture = Image.FromFile(Application.StartupPath + "\\smokes.bmp");
            control.PictureMargin = 34;
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.MarginLeft = 3;
            control.MarginRight = 3;
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180;
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left;
            control.BackColor = Color.Red;
            control.Text = "NO SMOKING";
            </code><code lang="vb">
            control.Picture = Image.FromFile(Application.StartupPath &amp; "\smokes.bmp")
            control.PictureMargin = 34
            control.MarginTop = 3
            control.MarginBottom = 3
            control.MarginLeft = 3
            control.MarginRight = 3
            control.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate180
            control.MarginTop = 3
            control.MarginBottom = 3
            control.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            control.AlignHorz = FarPoint.Win.HorizontalAlignment.Left
            control.BackColor = Color.Red
            control.Text = "NO SMOKING"
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Redraw">
      <summary>
            要素の描画を許可するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Parent">
      <summary>
            コントロールの親を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.SkipMouseProcessing">
      <summary>
            コントロールのマウス押下フラグを設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ActiveWindowlessObject">
      <summary>
            コントロールのアクティブ子オブジェクトを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Visible">
      <summary>
コントロールを表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Enabled">
      <summary>
            コントロールがフォーカスを受け取ってユーザーアクションに応答するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Selectable">
      <summary>
            コントロールがフォーカスを受け取れるかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.CanFocus">
      <summary>
            コントロールがフォーカスを受け取れるかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Border">
      <summary>
            コントロールの境界線を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignText">
      <summary>
            コントロールのテキスト配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextOrientation">
      <summary>
            コントロールのテキストの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextRotationAngle">
      <summary>
コントロールのテキストの回転角度を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextRotationAnglePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureOrientation">
      <summary>
            コントロールのピクチャの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.PictureTransparencyColor">
      <summary>
            コントロールのピクチャの透過色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ForegroundImage">
      <summary>
            コントロールの前景画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.BackgroundImage">
      <summary>
            コントロールの背景画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Picture">
      <summary>
            コントロールのピクチャを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.DrawFocusRectangle">
      <summary>
            コントロールのフォーカス矩形の描画スタイルを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.State">
      <summary>
            コントロールの要素の状態を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Font">
      <summary>
            コントロールのフォントを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.FontPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Text">
      <summary>
            コントロールの内容を、表示されたものと完全一致する文字列として取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.TextPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.About">
      <summary>
            コントロールに関する情報を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Name">
      <summary>
            コントロールを識別するためにコード内で使用する名前を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.BackColor">
      <summary>
            コントロールの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ForeColor">
      <summary>
            コントロールのテキスト色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ForeColorPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignHorz">
      <summary>
            コントロールの内容の水平方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignHorzPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignVert">
      <summary>
            コントロールの内容の垂直方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.AlignVertPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Rectangle">
      <summary>
            コントロールのクライアント領域内の矩形を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.StateNotifyList">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.Elements">
      <summary>
            現在のElementControlが含むIElement派生オブジェクトのコレクションを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementContainerControl.ElementsPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.#ctor">
      <summary>
            キャンバスコンテナのベースの設定を処理します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.#ctor(System.Object)">
      <summary>
            指定したクローンを持つキャンバスコンテナのベースの設定を処理します。
            </summary>
      <param name="cloneFrom">新しいキャンバス コンテナのクローン元のオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.#ctor(System.Object,System.Boolean)">
      <summary>
指定したクローンと、親を持たないかどうかに従って、キャンバス コンテナの設定を処理します。
            </summary>
      <param name="cloneFrom">新しいキャンバス コンテナのクローン元のオブジェクト</param>
      <param name="noParent">親を持たないかどうか</param>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.OnSizeChanged(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.Reset">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.ResetText">
      <summary>
            内容をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.AdjustClientArea">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.ProcessMnemonic(System.Char)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.SetElementBounds(System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.OnGotFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。MouseDown処理。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CanvasContainerBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。MouseUp処理。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CanvasContainerBase.CanFocus">
      <summary>
            コントロールがフォーカスを受け取れるかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.CanvasContainerBase.HotkeyPrefix">
      <summary>
            文字の前に入力されたアンパーサンド（&amp;）によって指定される
            ホットキーに、アンダースコア（_）を表示するかどうかを
            取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IChangeNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.CheckValue">
      <summary>
            チェックボックスの値を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckValue.False">
      <summary>
            チェックボックスの値をFalseに設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckValue.True">
      <summary>
            チェックボックスの値をTrueに設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckValue.Indeterminate">
      <summary>
            チェックボックスの値をIndeterminateに設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.chkCheckState">
      <summary>
            チェックボックスの状態を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.False">
      <summary>
            チェックボックスの状態をFalseに設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.True">
      <summary>
            チェックボックスの状態をTrueに設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.FalsePressed">
      <summary>
            チェックボックスの状態をFalse・押下に設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.TruePressed">
      <summary>
            チェックボックスの状態をTrue・押下に設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.Indeterminate">
      <summary>
            チェックボックスの状態をIndeterminateに設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.chkCheckState.IndeterminatePressed">
      <summary>
            チェックボックスの状態をIndeterminate・押下に設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.CheckBoxPictureIndex">
      <summary>
            チェックボックスの状態を表すピクチャのインデックスを指定します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.False">
      <summary>
            チェックボックスのFalse状態を表すピクチャのインデックスを設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.True">
      <summary>
            チェックボックスのTrue状態を表すピクチャのインデックスを設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.FalsePressed">
      <summary>
            チェックボックスのFalseで押された状態を表すピクチャのインデックスを設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.TruePressed">
      <summary>
            チェックボックスのTrueで押された状態を表すピクチャのインデックスを設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.Indeterminate">
      <summary>
            チェックボックスのIndeterminate状態を表すピクチャのインデックスを設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.IndeterminatePressed">
      <summary>
            チェックボックスのIndeterminateで押された状態を表すピクチャのインデックスを設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.FalseDisabled">
      <summary>
            チェックボックスのFalseで無効の状態を表すピクチャのインデックスを設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.TrueDisabled">
      <summary>
            チェックボックスのTrueで無効の状態を表すピクチャのインデックスを設定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.CheckBoxPictureIndex.IndeterminateDisabled">
      <summary>
            チェックボックスのIndeterminateで無効の状態を表すピクチャのインデックスを設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.CheckBoxPictureConverter">
      <summary>
            CheckBoxPictureオブジェクトを別の形式に変換します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CheckBoxPictureConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            オブジェクトのプロパティ値のセットを指定して、
            この型のオブジェクトを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CheckBoxPictureConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して
            新しい値を作成する必要があるかどうかを
            判定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.CheckBoxPicture">
      <summary>
            チェックボックスのそれぞれの状態に使用するピクチャ（画像）を表します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.Item(System.Int32)">
      <summary>
            チェックボックスのピクチャ（画像）のインデックスを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.Item(FarPoint.Win.CheckBoxPictureIndex)">
      <summary>
            チェックボックスのピクチャ（画像）のインデックスを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.False">
      <summary>
            チェックボックスのFalse状態を表すピクチャ（画像）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.FalseDisabled">
      <summary>
            チェックボックスのFalseで無効の状態を表すピクチャ（画像）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.FalsePressed">
      <summary>
            チェックボックスのFalseで押された状態を表すピクチャ（画像）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.Indeterminate">
      <summary>
            チェックボックスのIndeterminate状態を表すピクチャ（画像）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.IndeterminateDisabled">
      <summary>
            チェックボックスのIndeterminateで無効の状態を表すピクチャ（画像）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.IndeterminatePressed">
      <summary>
            チェックボックスのIndeterminateで押された状態を表すピクチャ（画像）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.True">
      <summary>
            チェックボックスのTrue状態を表すピクチャ（画像）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.TrueDisabled">
      <summary>
            チェックボックスのTrueで無効の状態を表すピクチャ（画像）を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CheckBoxPicture.TruePressed">
      <summary>
            チェックボックスのTrueで押された状態を表すピクチャ（画像）を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.FpCheckBox">
      <summary>
            FarPointチェックボックスコントロールを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpCheckBox.DEFAULT_PICTURE_WIDTH">
      <summary>
            デフォルトチェックボックスのピクチャの幅。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpCheckBox.DEFAULT_PICTURE_HEIGHT">
      <summary>
            デフォルトチェックボックスのピクチャの高さ。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpCheckBox.theme">
      <summary>
内部使用。表示スタイルのテーマを設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.#cctor">
      <summary>
      </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.Dispose(System.Boolean)">
      <summary>
破棄します。
            </summary>
      <param name="disposing">破棄するかどうか。</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.#ctor">
      <summary>
            新しいFarPointチェックボックスコントロールを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>
            背景ピクチャが変更されたときに発生します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.ResetCaption">
      <summary>
            チェックボックスのテキストをデフォルト設定にリセットします。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>
VisualStyleTheme の ThemeChanged イベントを処理します。
            </summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.ResetTextTrue">
      <summary>
            チェックボックスのTrue状態のテキストをデフォルト設定にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.ResetTextFalse">
      <summary>
            チェックボックスのFalse状態のテキストをデフォルト設定にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.ResetTextIndeterminate">
      <summary>
            チェックボックスのIndeterminate状態のテキストをデフォルト設定にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnCheckedChanged(System.EventArgs)">
      <summary>
            CheckedChangedイベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnCheckStateChanged(System.EventArgs)">
      <summary>
            CheckStateChangedイベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Size,System.Object,System.Drawing.Font,System.String,System.String,System.String,System.String,FarPoint.Win.CheckBoxPicture,FarPoint.Win.ButtonTextAlign,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix)">
      <param name="prefix">ホットキー接頭辞</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            背景を描画します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            チェックボックスを描画します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>
書式を調整します。
            </summary>
      <param name="fmt">書式</param>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.CheckValue,System.Boolean,System.Drawing.Font,System.String,System.String,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.CheckBoxPicture,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.Picture,System.Drawing.StringFormat,System.Boolean)">
      <summary>
            デフォルトのピクチャの高さと幅を持つチェックボックスを描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.CheckValue,System.Boolean,System.Drawing.Font,System.String,System.String,System.String,System.String,FarPoint.Win.ButtonTextAlign,FarPoint.Win.CheckBoxPicture,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.Picture,System.Drawing.StringFormat,System.Boolean,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean)">
      <summary>
            チェックボックスを描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCheckBox.WndProc(System.Windows.Forms.Message@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpCheckBox.CheckChanged">
      <summary>
            コントロールのチェック状態が変化したときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpCheckBox.CheckStateChanged">
      <summary>
            コントロールのチェック状態が変化するときに発生します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.BackgroundImage">
      <summary>
            チェックボックスコントロールの背景画像として使用するピクチャを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.PictureWidth">
      <summary>
            コントロールのチェックボックスピクチャ（画像）の幅を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.PictureHeight">
      <summary>
            コントロールのチェックボックスピクチャ（画像）の高さを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.PictureAlignH">
      <summary>
            コントロールのチェックボックスピクチャの水平方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.PictureAlignV">
      <summary>
            コントロールのチェックボックスピクチャの垂直方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.Caption">
      <summary>
            チェックボックスに表示するデフォルトテキストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.HotkeyPrefix">
      <summary>
アンパーサンド（&amp;）文字でテキストに下線を引くかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.VisualStyles">
      <summary>
表示スタイルを使用するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.TextTrue">
      <summary>
            チェックボックスコントロールの状態がTrueのときに表示するテキストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.TextFalse">
      <summary>
            チェックボックスコントロールの状態がFalseのときに表示するテキストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.TextIndeterminate">
      <summary>
            チェックボックスコントロールの状態がIndeterminateのときに表示するテキストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.Checked">
      <summary>
            チェックボックスがONかどうかを表す値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.AutoCheck">
      <summary>
            チェックボックスコントロールをクリックするか、コントロールにフォーカスがあるときでスペースキーを押して、
            ユーザーがコントロールの状態を切り替えることができるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.CheckState">
      <summary>
            チェックボックスの状態を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.TextAlign">
      <summary>
            チェックボックスコントロール内のピクチャを基準とするテキストの配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.ThreeState">
      <summary>
            チェックボックスコントロールに第３の状態があるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.Value">
      <summary>
            チェックボックスコントロールの値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCheckBox.Picture">
      <summary>
            チェックボックス画像として使用するピクチャの配列を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.AutoComplete">
      <summary>
オート コンプリート機能を有効にするかどうかを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AutoComplete.None">
      <summary>
オート コンプリートは実行されません。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AutoComplete.Append">
      <summary>
最も近い一致を最後に追加し、テキストの残りの部分をハイライト表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.AutoSearch">
      <summary>
            文字キー入力によるコンボボックスのリスト項目の自動検索の有効／無効と検索方法を表します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.AutoSearch.None">
      <summary>
            文字キー入力による検索を無効にします。文字キーの入力は無視されます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AutoSearch.SingleCharacter">
      <summary>
            １文字のキー入力に基づいて最初の文字が一致するリスト項目を検索し、
            一致する項目があった場合は一致した最初の項目までスクロールします。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AutoSearch.MultipleCharacter">
      <summary>
            任意の文字数のキー入力に基づいて、入力文字と一致するリスト項目を検索し、
            一致する項目があった場合は一致した最初の項目までスクロールします。
            </summary>
    </member>
    <member name="F:FarPoint.Win.AutoSearch.SingleGreaterThan">
      <summary>
            １文字のキー入力に基づいて最初の文字が一致するリスト項目を検索し、
            一致する項目があった場合は一致した最初の項目までスクロールします。
            一致する項目がない場合は、先頭の文字が、アルファベット順で入力文字以降の次の項目まで移動します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ListAlignment">
      <summary>
            ドロップダウンリストを配置するコンボボックスの辺を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ListAlignment.Left">
      <summary>
            ドロップダウンリストを左側に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ListAlignment.Right">
      <summary>
            ドロップダウンリストを右側に配置します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ComboCharacterSet">
      <summary>
セルの内容に使用できる文字セットを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComboCharacterSet.Ascii">
      <summary>
任意のASCII文字
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComboCharacterSet.Alpha">
      <summary>
英字のみ
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComboCharacterSet.AlphaNumeric">
      <summary>
英数字のみ
            </summary>
    </member>
    <member name="F:FarPoint.Win.ComboCharacterSet.Numeric">
      <summary>
数字のみ
            </summary>
    </member>
    <member name="T:FarPoint.Win.FpCombo">
      <summary>
            FarPointコンボボックスコントロールを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SuperEditBase">
      <summary>
            コントロールを編集するベースを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ISpinUpNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ISpinDownNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IPopUpNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IDropDownNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ISlideLeftNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ISlideRightNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnDropDown(System.Object,FarPoint.Win.DropDownEventArgs)">
      <summary><see cref="F:FarPoint.Win.SuperEditBase.DropDown" />イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.#ctor">
      <summary>
            新しいSuperEditBaseオブジェクトを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Reset">
      <summary>
            コントロールの内容をデフォルト値にリセットします。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.IsNull">
      <summary>
            コントロールがNull値を含むかどうかを判定します。
            </summary>
      <returns>コントロールがNull値を含むかどうかを表すブール値</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.IsValid">
      <summary>
            コントロールの内容が有効かどうかを判定します。
            </summary>
      <returns>内容が有効の場合True</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetFont">
      <summary>
            コントロールのフォントをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeBackColor">
      <summary>
            内部使用のみ。
            </summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetBackColor">
      <summary>
            背景色をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeForeColor">
      <summary>
            内部使用のみ。
            </summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetForeColor">
      <summary>
            テキスト色をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeInvalidColor">
      <summary>
            内部使用のみ。
            </summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetInvalidColor">
      <summary>
            コントロールが無効なデータを含むときに使用する背景色をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeNullColor">
      <summary>
            内部使用のみ。
            </summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetNullColor">
      <summary>
            コントロールがNull値を含むときに表示する背景色をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetText">
      <summary>
            内容をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeText">
      <summary>
            内部使用のみ。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeButtonColor">
      <summary>
            内部使用のみ。
            </summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetButtonColor">
      <summary>
コントロール内のボタンの背景色をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeButtonMarginColor">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetButtonMarginColor">
      <summary>
            編集コントロールのボタンとテキストの間の余白の色をデフォルト色にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ShouldSerializeBorder">
      <summary>
            内部使用のみ。
            </summary>
      <returns>プロパティ値をデフォルトから変更した場合はTrue。それ以外の場合はFalse。</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ResetBorder">
      <summary>
            境界線をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetDrawingText(System.String)">
      <summary>
            描画するテキストを含む文字列を取得します。
            </summary>
      <param name="paintString">テキストを含む文字列</param>
      <returns>テキストを含む文字列</returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetDrawingStringFormat(System.Drawing.Rectangle@)">
      <summary>
            指定した矩形にテキストを描画するための新しい文字列書式を取得します。
            </summary>
      <param name="drawRect">テキストを描画する矩形</param>
      <returns>文字列書式を含むStringFormatオブジェクト</returns>
      <remarks>一部の設定で矩形が変更される場合があります。</remarks>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
Paint イベントを発生させて、編集コントロールを描画します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnResize(System.EventArgs)">
      <summary>
Resize イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnSizeChanged(System.EventArgs)">
      <summary>
SizeChanged イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnParentFontChanged(System.EventArgs)">
      <summary>
ParentFontChanged イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnParentChanged(System.EventArgs)">
      <summary>
ParentChanged イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.IsMouseOverButton">
      <summary>
            ポインタが編集コントロールのボタンの上にあるかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetToolTip(System.Windows.Forms.ToolTip,System.String)">
      <summary>
            埋め込み（内部の子）コントロールのToolTipテキストを設定します。
            </summary>
      <param name="toolTipControl">ToolTipコントロールの名前</param>
      <param name="toolTipText">ポップアップヒントとして表示するテキストの文字列</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ToggleState">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Select(System.Int32,System.Int32)">
      <summary>
            編集コントロールの指定した位置から開始して、指定した数の文字を選択します。
            </summary>
      <param name="selStart">選択を開始するコントロール内の最初の文字の位置</param>
      <param name="selLength">選択する文字数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SelectAll">
      <summary>
            コントロールの内容全体を選択します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnClick(System.EventArgs)">
      <summary>
Click イベントを発生させます。 
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnCausesValidationChanged(System.EventArgs)">
      <summary>
CausesValidationChanged イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseEnter(System.EventArgs)">
      <summary>
MouseEnter イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
MouseMove イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseLeave(System.EventArgs)">
      <summary>
MouseLeave イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetCharIndexAtPoint(System.Drawing.Point,System.Boolean)">
      <summary>
グラフィック オブジェクトの指定した位置にある文字インデックスを計算します。
            </summary>
      <param name="pt">ポイント</param>
      <param name="splitChar">文字を分割するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnDoubleClick(System.EventArgs)">
      <summary>
DoubleClick イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnGotFocus(System.EventArgs)">
      <summary>
GotFocus イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditTextCut(System.Object,System.EventArgs)">
      <summary>
EditTextCut イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditTextPasted(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>
EditTextPasted イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>
EditKeyDown イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>
EditKeyPress イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>
EditKeyUp イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditValidating(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>
EditValidating イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditValidated(System.Object,System.EventArgs)">
      <summary>
EditValidated イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditTextChanged(System.Object,System.EventArgs)">
      <summary>
EditTextChanged イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditClick(System.Object,System.EventArgs)">
      <summary>
EditClick イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditDoubleClick(System.Object,System.EventArgs)">
      <summary>
EditDoubleClick イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditHelpRequested(System.Object,System.Windows.Forms.HelpEventArgs)">
      <summary>
EditHelpRequested イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseEnter(System.Object,System.EventArgs)">
      <summary><see cref="!:FarPoint.Win.SuperEditBase.EditMouseEnter" />イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseLeave(System.Object,System.EventArgs)">
      <summary>
EditMouseLeave イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
EditMouseWheel イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
EditMouseUp イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
EditMouseMove イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
EditMouseDown イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditGotFocus(System.Object,System.EventArgs)">
      <summary>
EditGotFocus イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Validate(System.String)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Validate">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetValueFromFreeFormat">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ForceValidation">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ForceText(FarPoint.Win.SuperEdit.ISEditFormatter,System.Object)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnEditLostFocus(System.Object,System.EventArgs)">
      <summary>
EditLostFocus イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnUserError(FarPoint.Win.SuperEdit.UserErrorEventArgs)">
            ユーザーが処理不可能または無効なアクションを実行するときに発生します。
            <summary><see cref="F:FarPoint.Win.SuperEditBase.UserError" />イベントを発生させます。
            </summary><param name="e">イベント引数</param></member>
    <member name="M:FarPoint.Win.SuperEditBase.OnInvalidData(System.EventArgs)">
      <summary><see cref="F:FarPoint.Win.SuperEditBase.InvalidData" />イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
            コントロールに無効なデータが含まれているときに発生します。
        </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnAdvance(System.EventArgs)">
      <summary><see cref="F:FarPoint.Win.SuperEditBase.Advance" />イベントを発生させます。 
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>
Layout イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Copy">
      <summary>
            編集コントロールで選択されているテキストをクリップボードにコピーします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Cut">
      <summary>
            編集コントロールで選択されている内容をクリップボードに切り取ります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Paste">
      <summary>
            クリップボードの内容を編集コントロールに貼り付けます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Clear">
      <summary>
編集コントロールの選択されている内容をすべて削除します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Undo">
      <summary>
            直前の編集コマンドを取り消します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SetNull">
      <summary>
            コントロールの値をNull値に設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.ClearAll">
      <summary>
編集コントロールの内容をすべて削除します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
MouseUp イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary><see cref="!:FarPoint.Win.SuperEditBase.MouseDown" />イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SpinUpNotify(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SpinDownNotify(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.FirePopup">
      <summary>
            内部使用のみ。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.PopUpNotify(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.DropDownNotify(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SlideLeftNotify(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.SlideRightNotify(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.CreateStringWithLiterals(System.String)">
      <summary>
            リテラル文字から成る文字列を作成します。
            </summary>
      <param name="originalString">コピー元の文字列</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.HandleValidCharacter(System.Int32@)">
      <summary>
内部使用のみ。文字はコントロールによって処理されていない場合に有効です。
            </summary>
      <param name="c">ASCII文字の数値</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.HandleValidKey(System.Int32)">
      <summary>
内部使用のみ。キーはコントロールによって処理されていない場合に有効です。
            </summary>
      <param name="c">ASCII文字の数値</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetLeftmostCharacters(System.Int32)">
      <summary>
            左端の文字から開始して指定した文字数を取得します。 
            </summary>
      <param name="count">返す文字数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetRightmostCharacters(System.Int32)">
      <summary>
            右端の文字から開始して指定した数の文字を取得します。 
            </summary>
      <param name="count">返す文字数</param>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.GetCharFromPos(System.Drawing.Point)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="pt">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.SuperEditBase.Select(System.Boolean,System.Boolean)">
      <summary>
            タブ順序に指定された順序でコントロールを
            選択します。
            </summary>
      <param name="directed">
            選択するコントロールの方向を指定する場合はTrue、それ以外の場合はFalse
            </param>
      <param name="forward">
            タブ順序に従って移動する場合はTrue、タブ順序の逆に移動する場合はFalse
            </param>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.SpinUp">
      <summary>
            ユーザーが編集コントロールのスピンアップボタンをクリックするときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.SpinDown">
      <summary>
            ユーザーが編集コントロールのスピンダウンボタンをクリックするときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.PopUp">
      <summary>
            ユーザーが編集コントロールのポップアップボタンをクリックするときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.DropDown">
      <summary>
            ユーザーが編集コントロールのドロップダウンボタンをクリックするときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.SlideLeft">
      <summary>
            ユーザーが編集コントロールのスライド左ボタンをクリックするときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.SlideRight">
      <summary>
            ユーザーが編集コントロールのスライド右ボタンをクリックするときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.UserError">
      <summary>
            処理不可能または無効な内容が入力されたときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.InvalidData">
      <summary>
            コントロールに無効なデータが含まれているときに発生します。
        </summary>
    </member>
    <member name="E:FarPoint.Win.SuperEditBase.Advance">
      <summary>
            フォーカスを前または次のコントロールに移動するときに発生します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Cursor">
      <summary>
            ポインタが編集コントロールの上に置かれているときのポインタの画像を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.VisualStyles">
      <summary>
表示スタイルが使用されるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Modified">
      <summary>
            編集コントロールのテキストが変更されているかどうかを表すブール値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonAlign">
      <summary>
            編集コントロールのボタンの配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonWidth">
      <summary>
            編集コントロールのボタンの幅を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMargin">
      <summary>
            編集コントロールのボタンとテキストの間の余白を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonWrap">
      <summary>
            ボタンインデックスがButtonMinとButtonMaxプロパティで指定した値に達したときに
            折り返すかどうかを表すブール値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonIndex">
      <summary>
            編集コントロールのボタンのインデックス値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMin">
      <summary>
            編集コントロールのボタンインデックスの最小値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMax">
      <summary>
            編集コントロールのボタンインデックスの最大値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonStyle">
      <summary>
            編集コントロールに表示するボタンの種類を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.DrawFocusRectangle">
      <summary>
            編集コントロールのフォーカス矩形の描画スタイルを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.EditModeCursorPosition">
      <summary>
            編集コントロールのフォーカスを受け取ったときのポインタの位置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AllowClipboardKeys">
      <summary>
            コントロールがクリップボードショートカットキーをサポートするかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Focused">
      <summary>
            編集コントロールにフォーカスがあるかどうかを表すブール値を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Enabled">
      <summary>
            コントロールがフォーカスを受け取ってユーザーアクションに応答するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AutoAdvance">
      <summary>
            矢印キーでポインタが移動したときにフォーカスが別のコントロールに移動するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.InvalidOption">
      <summary>
            コントロールがフォーカスを失ったとき無効なデータを表示する、非表示にする、またはクリアするかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Font">
      <summary>
            コントロールのフォントを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.BackColor">
      <summary>
            コントロールの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.BackgroundImage">
      <summary>
            コントロールの背景画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ForeColor">
      <summary>
            コントロールのテキスト色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.InvalidColor">
      <summary>
            コントロールに無効なデータが含まれているときに表示する背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.NullColor">
      <summary>
            コントロールがNull値を含むときに表示する背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.UserEntry">
      <summary>
            データがコントロールに提供されたときの検証方法を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.UserEntryPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.CausesValidation">
      <summary>
            コントロールがフォーカスを失ったときに他のコントロールでデータ検証が発生するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.CanValidate">
      <summary>
            フォーカスを失ったときにコントロールがデータを検証するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Selectable">
      <summary>
            ユーザーが編集コントロールを操作できるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.CanFocus">
      <summary>
            編集コントロールがフォーカスを受け取れるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Text">
      <summary>
            コントロールの書式付きの内容を、表示されたものと完全一致する文字列として
            取得または設定します。  
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonColor">
      <summary>
            編集コントロールのボタンの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ButtonMarginColor">
      <summary>
            編集コントロールのボタンとテキストの間の余白の色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AllowNull">
      <summary>
            コントロールがNull値を有効とみなすかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.HideSelection">
      <summary>
            コントロールがフォーカスを失ったときに選択されているテキストのハイライト表示も取り消すかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AutoHeight">
      <summary>
            フォントに基づいてコントロール全体をサイズ変更するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AutoMenu">
      <summary>
            基本的な編集操作のコンテキストメニューをコントロールが表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ControlType">
      <summary>
            コントロールが読み取り／書き込み、読み取り専用、静的のいずれかであるか、またはボタンを押したときに値の変更を許可するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.PictureOrientation">
      <summary>
            編集コントロールのピクチャの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.PictureTransparencyColor">
      <summary>
            編集コントロールのピクチャの透過色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.TextOrientation">
      <summary>
            編集コントロールのテキストの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.TextWrap">
      <summary>
            改行せずにテキストを自動的に折り返すどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AlignText">
      <summary>
            ピクチャの配置を基準としたテキストの配置を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Picture">
      <summary>
            編集コントロールに表示するピクチャを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.PictureMargin">
      <summary>
            テキストとピクチャの間の余白を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.FormatText">
      <summary>
            編集コントロールのテキスト内容を書式設定する方法を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Value">
      <summary>
            編集コントロールの書式なしの値を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Border">
      <summary>
            コントロールの境界線を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AlignHorz">
      <summary>
            コントロールの内容の水平方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.AlignVert">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.SelectionStart">
      <summary>
            選択されている文字の先頭位置、または文字が選択されていない場合の
            挿入ポイントの位置を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.SelectionLength">
      <summary>
            編集コントロールで選択されている文字数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.SelectedText">
      <summary>
            編集コントロールで現在選択されているテキストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.Formatter">
      <summary>
            コントロールのフォーマッタを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.MaxLength">
      <summary>
            コントロール内に入力または貼り付け可能な最大文字数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.ContextMenu">
      <summary>
            コントロールで表示するコンテキストメニューを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SuperEditBase.HotkeyPrefix">
      <summary>
            文字の前にアンパーサンド（&amp;）を入力したときに、静的コントロールで
            その文字にアンダースコア（_）を付けるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.#ctor">
      <summary>
            FarPointコンボボックスコントロールを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.SelectPageDown">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.SelectNext">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.SelectPageUp">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.SelectPrevious">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnEditKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnEditMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.DoAutoSearching(System.Int32,FarPoint.Win.AutoSearch)">
      <summary>
            指定された文字の自動検索を実行します。
            </summary>
      <param name="c">文字</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.HandleValidCharacter(System.Int32@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.HandleValidKey(System.Int32)">
      <summary>
            内部使用のみ。有効な文字キー入力を処理します。
            </summary>
      <param name="key">入力された文字キー</param>
      <returns>有効な場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnCloseUp(System.EventArgs)">
      <summary>
            CloseUpイベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnDropDown(FarPoint.Win.DropDownEventArgs)">
      <summary>
            DropDownイベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むDropDownEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnSelectedIndexChanged(System.EventArgs)">
      <summary>
            SelectedIndexChangedイベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnSelectedValueChanged(System.EventArgs)">
      <summary>
            SelectedValueChangedイベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.OnSelectionChangeCommitted(System.EventArgs)">
      <summary>
            SelectionChangeCommittedイベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.DropDownDefaultAction">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.WndProc(System.Windows.Forms.Message@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.DropDownNotify(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="o">アクションのオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.ShowList(System.Boolean)">
      <summary>
            コンボボックスコントロールのドロップダウンリストを表示するかどうかを決定します。
            </summary>
      <param name="bShow">ドロップダウンリストを表示するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.ToggleState">
      <summary>
            内部使用のみ。コントロールの状態を切り替えます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.GetDroppedList">
      <summary>
            ドロップダウンリストボックスを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpCombo.DrawListBoxItem(System.Windows.Forms.ListBox,System.Windows.Forms.DrawItemEventArgs)">
      <summary>
リストボックス項目の１つを描画します。
            </summary>
      <param name="ctlListBox">リストボックスコントロール</param>
      <param name="e">項目を含むDrawItemイベント</param>
    </member>
    <member name="M:FarPoint.Win.FpCombo.ProcessDialogChar(System.Char)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpCombo.CloseUp">
      <summary>
            コントロールが終了する（閉じる）ときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpCombo.SelectedIndexChanged">
      <summary>
            コンボボックスリスト内の選択項目のインデックスが変更されたときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpCombo.SelectedValueChanged">
      <summary>
            コンボボックスリストの選択項目の値が変更されたときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpCombo.SelectionChangeCommitted">
      <summary>
            コンボボックスリストの選択項目への変更が確定されたときに発生します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ListControl">
      <summary>
            コンボボックスのドロップダウンリストに使用するリストボックスコントロールを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AcceptsArrowKeys">
      <summary>
            キーボードの矢印キーを処理する方法を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ListAlignment">
      <summary>
            ドロップダウンリストを配置するコントロールの辺を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.WordWrap">
      <summary>
            １行に収まらないテキストを複数行に折り返すかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AutoComplete">
      <summary>
編集可能なコンボを使用するときにオート コンプリートを有効にするかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.CharacterSet">
      <summary>
使用する文字セットを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.CharacterCasing">
      <summary>
大文字小文字の設定を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.Editable">
      <summary>
            コンボボックスのテキスト部分が編集可能かどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.BorderStyle">
      <summary>
            境界線スタイルを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.Multiline">
      <summary>
            コンボボックスがテキストを複数行で表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AcceptsReturn">
      <summary>
            コンボボックスがキーボードの復帰（［Enter］キー）を受け付けるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.MaximumLength">
      <summary>
            コンボボックスのテキスト部分のデータの最大文字数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ListOffset">
      <summary>
            リストをコントロールの配置した端からオフセットするピクセル数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.BackgroundColor">
      <summary>
            コンボボックスの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ListWidth">
      <summary>
            コンボボックスのドロップダウンリストの幅を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.MaxDrop">
      <summary>
            コンボボックスのドロップダウンリストに一度に表示する項目数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.AutoSearch">
      <summary>
            文字キーの入力によってコンボボックスの項目リストを検索する方法を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.List">
      <summary>
            コンボボックスの項目リストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ItemData">
      <summary>
コンボボックスの項目データリストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.ImageList">
      <summary>
コンボボックスの画像リストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.SelectedItem">
      <summary>
            コンボボックスリストで選択されている項目を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.SelectedIndex">
      <summary>
            コンボボックスリストで選択されている項目のインデックスを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpCombo.DroppedDown">
      <summary>
            ドロップダウンリストを表示（ドロップダウン）するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.MathOverride">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="F:FarPoint.Win.MathOverride.pow10">
      <summary>
10のべき乗を簡単に調べられるようにします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.Pow10(System.Int32)">
      <summary>
指定したべき指数で10をべき乗した結果を返します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.ApproxEqual(System.Double,System.Double)">
      <summary>
２つの数値を2^-4でスケーリング（４ビット除去）してから、それらの数値が等しいかどうかをテストします。これは小さい丸め誤差を取り除くために四捨五入メソッドと切り捨てメソッドで使用されます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.ApproxRound2(System.Double,System.Int32)">
      <summary>
ApproxEqual を考慮して倍精度浮動小数点数値を 15 桁の 10 進数にする端数処理メソッド。
            </summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.ApproxFloor(System.Double)">
      <summary>
ApproxEqualを考慮するfloorメソッド。
            </summary>
    </member>
    <member name="M:FarPoint.Win.MathOverride.ApproxCeiling(System.Double)">
      <summary>
ApproxEqualを考慮するceilingメソッド。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ControlBase">
      <summary>
            FarPointコントロールの共通原理（基本クラス）を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ControlBase.#ctor">
      <summary>
            コントロールの新しい基本クラスを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ControlBase.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            指定したキーが、事前処理なしでコントロールによって
            処理可能なキーかどうかを判定します。
            </summary>
      <param name="keyData">チェックするキー</param>
      <returns>
            事前処理なしでコントロールによる処理が可能なキーの場合はTrue、それ以外の場合はFalse
            </returns>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnGotFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnLostFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.InvalidateFocus">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnPaint(System.Windows.Forms.PaintEventArgs,System.Object)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
      <param name="val">
      </param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.SetClientSize(System.Drawing.Rectangle)">
      <summary>
            コントロールのクライアント矩形サイズを設定します。
            </summary>
      <param name="rect">クライアント矩形</param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.GetAdjustedClientRectangle(System.Drawing.Rectangle,FarPoint.Win.Inset,FarPoint.Win.Inset)">
      <summary>
            コントロールの調整済みクライアント矩形を返します。
            </summary>
      <param name="ctlRectangle">クライアント矩形</param>
      <param name="border">境界線のインセット</param>
      <param name="margin">余白のインセット</param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.SetBoundingRectangle(System.Drawing.Rectangle,FarPoint.Win.Inset,FarPoint.Win.Inset)">
      <summary>
            コントロールのクライアント矩形の境界を設定します。
            </summary>
      <param name="ctlRectangle">クライアント矩形</param>
      <param name="border">境界線のインセット</param>
      <param name="margin">余白のインセット</param>
    </member>
    <member name="M:FarPoint.Win.ControlBase.WndProc(System.Windows.Forms.Message@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.TextAlign">
      <summary>
            コントロールのテキストとピクチャの配置を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextAlign.TextBottomPictTop">
      <summary>
            テキストをコントロールの下辺に配置し、ピクチャがある場合は
            テキストの上に配置します
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextAlign.TextTopPictBottom">
      <summary>
            テキストをコントロールの上辺に配置し、ピクチャがある場合は
            テキストの下に配置します
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextAlign.TextLeftPictRight">
      <summary>
            テキストをコントロールの左辺に配置し、ピクチャがある場合は
            テキストの右に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextAlign.TextRightPictLeft">
      <summary>
            テキストをコントロールの右辺に配置し、ピクチャがある場合は
            テキストの左に配置します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.DrawFocusRectangle">
      <summary>
            フォーカス矩形の表示と位置を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.Default">
      <summary>
            システム設定からフォーカス矩形を継承します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.None">
      <summary>
            フォーカス矩形を表示しません。
            </summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.AroundText">
      <summary>
            テキストの周囲にのみフォーカス矩形を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.AroundPicture">
      <summary>
            ピクチャの周囲にのみフォーカス矩形を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.AroundTextAndPicture">
      <summary>
            テキストとピクチャの周囲にフォーカス矩形を描画します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.DrawFocusRectangle.AroundEdge">
      <summary>
            要素の端の周囲にフォーカス矩形を描画します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.TextOrientation">
      <summary>
            コントロールのテキストの向きを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextHorizontal">
      <summary>
            コントロールのテキストを水平方向に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextHorizontalFlipped">
      <summary>
            コントロールのテキストを水平方向に配置して反転させます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextVertical">
      <summary>
            コントロールのテキストを垂直方向に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextVerticalFlipped">
      <summary>
            コントロールのテキストを垂直方向に反転して配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextTopDown">
      <summary>
            コントロールの上から下の方向でテキストを配置し、左から右の方向で折り返します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextTopDownRTL">
      <summary>
            コントロールの上から下の方向でテキストを配置し、右から左の方向で折り返します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.TextOrientation.TextRotateCustom">
      <summary>
シェイプ関連オブジェクトのみの回転角度に基づいてテキストを配置します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.PictureOrientation">
      <summary>
            コントロールのピクチャの向きを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotateNone">
      <summary>
            ピクチャを回転しません。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotate90">
      <summary>
            ピクチャを右に90度回転します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotate180">
      <summary>
            ピクチャを右に180度回転します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotate270">
      <summary>
            ピクチャを右に270度回転します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.PictureOrientation.PictureRotateCustom">
      <summary>
ピクチャを右にカスタムの角度回転します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ElementState">
      <summary>
            要素の表示状態を切り替えます。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementState.Normal">
      <summary>
            表示状態は通常（アクティブ）です。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementState.Inverted">
      <summary>
            表示状態は反転されています（要素が押されたときなど）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementState.Inactive">
      <summary>
            表示状態は非アクティブです。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ElementWithButtonsStyle">
      <summary>
            ElementWithButtonsクラスで使用するボタンスタイルを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtonsStyle.StaticNoButtons">
      <summary>
            ボタンを表示しません。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtonsStyle.Scroll">
      <summary>
            両側にボタンを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtonsStyle.DropDown">
      <summary>
            ドロップダウンボタンを右側に表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementWithButtonsStyle.PopUp">
      <summary>
            ポップアップボタンを右側に表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IStateNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IElementNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IElementDeletedNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IInternalCommunication">
      <summary>
      </summary>
    </member>
    <member name="T:FarPoint.Win.IElementEnhanced">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ElementWithButtons">
      <summary>
            ボタンを表示するウィンドウレス要素を表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ElementWindowless">
      <summary>
            コントロールのウィンドウレス要素を表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementWindowless.PICTURE_MARGIN_DEFAULT">
      <summary>
            要素のデフォルトピクチャマージンを表します（２ピクセル）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementWindowless.BACK_COLOR_DEFAULT">
      <summary>
            要素のデフォルト背景色を表します（SystemColors.Control）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ElementWindowless.FORE_COLOR_DEFAULT">
      <summary>
            要素のデフォルトテキスト色を表します（SystemColors.ControlText）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.#ctor">
      <summary>
            新しいウインドウレス要素オブジェクトを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.#ctor(System.Object)">
      <summary>
            指定したオブジェクトに基づいて新しいウインドウレス要素オブジェクトを作成します。 
            </summary>
      <param name="cloneFrom">コピー元のオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.CopyTo(System.Object)">
      <summary>
            このウインドウレス要素オブジェクトのプロパティを対象オブジェクトにコピーします。 
            </summary>
      <param name="target">対象オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPictureMargin">
      <summary>
            テキストとピクチャの間の余白をデフォルト値にリセットします。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetMarginBottom">
      <summary>
            要素の下辺と内容の間の余白をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetMarginTop">
      <summary>
            要素の上辺と内容の間の余白をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetMarginLeft">
      <summary>
            要素の左辺と内容の間の余白をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetMarginRight">
      <summary>
            要素の右辺と内容の間の余白をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetRedraw(System.Boolean,System.Boolean)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            オブジェクトをXMLに保存します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            オブジェクトをXMLからロードします。
            </summary>
      <param name="r">オブジェクトのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.BringToFront(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SendToBack(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetVisible">
      <summary>
            要素の表示／非表示をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetEnabled">
      <summary>
            要素の有効／無効をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetCanFocus">
      <summary>
            要素にフォーカスできるかどうかをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetBorder">
      <summary>
            要素の境界線をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetAlignText">
      <summary>
            要素のテキスト配置をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetTextOrientation">
      <summary>
            要素のテキストの向きをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeTextRotationAngle">
      <summary>
TextRotationAngleプロパティを永続化する必要があるかどうかを示します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetTextRotationAngle">
      <summary>
要素のテキストの回転角度をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPictureOrientation">
      <summary>
            要素のピクチャの向きをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializePictureTransparencyTolerance">
      <summary>
            PictureTransparencyToleranceプロパティを持続させるかどうかを指定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPictureTransparencyTolerance">
      <summary>
            要素のピクチャの透過許容誤差をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializePictureTransparencyColor">
      <summary>
            PictureTransparencyColorプロパティを持続させるかどうかを指定します。
            </summary>
      <returns>透過色</returns>
      <example><code lang="csharp">
            control.Picture = Image.FromFile("d:\overlay.bmp");
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.PictureTransparencyColor = Color.Blue;
            </code><code lang="vb">
            control.Picture = Image.FromFile("d:\overlay.bmp")
            control.MarginTop = 3
            control.MarginBottom = 3
            control.PictureTransparencyColor = Color.Blue
            </code></example>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPictureTransparencyColor">
      <summary>
            要素のピクチャの透過色をデフォルト値にリセットします。
            </summary>
      <example><code lang="csharp">
            control.Picture = Image.FromFile("d:\overlay.bmp");
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.PictureTransparencyColor = Color.Blue;
            private void button1_Click(object sender, System.EventArgs e)
            {
            control.ResetPictureTransparencyColor()
            }
            </code><code lang="vb">
            control.Picture = Image.FromFile("d:\overlay.bmp")
            control.MarginTop = 3
            control.MarginBottom = 3
            control.PictureTransparencyColor = Color.Blue
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
            control.ResetPictureTransparencyColor()
            End Sub
            </code></example>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetPicture">
      <summary>
            要素の画像をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetForegroundImage">
      <summary>
            要素の前景画像をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetBackgroundImage">
      <summary>
            要素の背景画像をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeFont">
      <summary>
            Fontプロパティを持続させるかどうかを指定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetFont">
      <summary>
            要素のフォントをデフォルト値にリセットします。
            </summary>
      <example><code lang="csharp">
            Font f = new System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold);
            element.Font = f;
            element.State = FarPoint.Win.ElementState.Inverted;
            element.ResetFont();
            </code><code lang="vb">
            Dim f As New System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold)
            element.Font = f
            element.State = FarPoint.Win.ElementState.Inverted
            element.ResetFont();
            </code></example>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetFont">
      <summary>
            FontプロパティがNullの場合、要素が使用するデフォルトフォントを取得します。
            </summary>
      <example><code lang="csharp">
            Font f = element.GetFont();
            }
            </code><code lang="vb">
            Font f = element.GetFont()
            </code></example>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetText">
      <summary>
            要素のテキストをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeTag">
      <summary>
            Tagプロパティを持続させるかどうかを指定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetTag">
      <summary>
            要素のTagオブジェクトをデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeBackColor">
      <summary>
            BackColor プロパティを持続させるかどうかを指定します。
            </summary>
      <returns>新しい背景色</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetBackColor">
      <summary>
            背景色をデフォルト設定にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ShouldSerializeForeColor">
      <summary>
            ForeColorプロパティを持続させるかどうかを指定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetForeColor">
      <summary>
            要素のテキスト色をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetAlignHorz">
      <summary>
            要素の水平方向の配置をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetAlignVert">
      <summary>
            要素の垂直方向の配置をデフォルト値にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnGotFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnLostFocus(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Select(System.Boolean)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetControl">
      <summary>
            要素がElementWindowlessクラスから派生した場合、Controlオブジェクトを取得します。  
            </summary>
      <returns>ElementControlから派生した場合はNull</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnFontChanged(System.EventArgs)">
      <summary>
コントロールのフォントが変更されたときに<see cref="F:FarPoint.Win.ElementWindowless.FontChanged" />イベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Update">
      <summary>
            コントロールにクライアント領域内で無効となった領域を再描画させます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.AdjustClientArea">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
要素の境界を、指定したサイズ（整数値）の境界矩形の位置とサイズに設定します。 
            </summary>
      <param name="x">境界矩形の左上隅の X 座標（整数）</param>
      <param name="y">境界矩形の左上隅の Y 座標（整数）</param>
      <param name="width">境界矩形のピクセル単位の幅（整数）</param>
      <param name="height">境界矩形のピクセル単位の高さ（整数）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single)">
      <summary>
要素の境界を、指定したサイズ（浮動小数点数値）の境界矩形の位置とサイズに設定します。 
            </summary>
      <param name="x">境界矩形の左上隅の X 座標（浮動小数点数）</param>
      <param name="y">境界矩形の左上隅の Y 座標（浮動小数点数）</param>
      <param name="width">境界矩形のピクセル単位の幅（浮動小数点数）</param>
      <param name="height">境界矩形のピクセル単位の高さ（浮動小数点数）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetBounds(System.Drawing.Rectangle)">
      <summary>
要素の境界を、指定した境界矩形オブジェクトの位置とサイズ（整数値）に設定します。 
            </summary>
      <param name="rectInput">整数でサイズが指定された境界矩形を含む Rectangle オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetBounds(System.Drawing.RectangleF)">
      <summary>
要素の境界を、指定した境界矩形オブジェクトの位置とサイズ（浮動小数点数値）に設定します。 
            </summary>
      <param name="rectInput">浮動小数点数でサイズが指定された境界矩形を含む Rectangle オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Focus(System.Boolean)">
      <summary>
            フォーカスを要素に移動します。
            </summary>
      <param name="giveFocus">要素がフォーカスを受け取れるかどうか</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.AttachMouseListeners">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DetachListeners">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>
背景ピクチャが変更されたときに<see cref="F:FarPoint.Win.ElementWindowless.BackgroundImageChanged" />イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnForegroundImageChanged(System.Object,System.EventArgs)">
      <summary>
前景ピクチャが変更されたときに<see cref="F:FarPoint.Win.ElementWindowless.ForegroundImageChanged" />イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPictureChanged(System.Object,System.EventArgs)">
      <summary>
ピクチャが変更されたときに<see cref="F:FarPoint.Win.ElementWindowless.PictureChanged" />イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnParentChanged(System.EventArgs)">
      <summary>
要素の親が変更されたときに<see cref="F:FarPoint.Win.ElementWindowless.ParentChanged" />イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnChanged(System.Object,System.EventArgs)">
      <summary>
要素が変更されたときに<see cref="F:FarPoint.Win.ElementWindowless.Changed" />イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
要素のプロパティが変更されたときに<see cref="F:FarPoint.Win.ElementWindowless.PropertyChanged" />イベントを発生させます。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            MouseDown処理。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
コントロールの上にカーソルがある状態でポインタボタンが押されたときに<see cref="F:FarPoint.Win.ElementWindowless.MouseDown" />イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            MouseDown処理。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
コントロールの上にカーソルがある状態でポインタボタンが離されたときに<see cref="F:FarPoint.Win.ElementWindowless.MouseUp" />イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
ポインタがコントロール内を移動してカーソルがコントロールの上に置かれたときに<see cref="F:FarPoint.Win.ElementWindowless.MouseMove" />イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnClick(System.EventArgs)">
      <summary>
ユーザーがコントロールをクリックしたときに<see cref="F:FarPoint.Win.ElementWindowless.Click" />イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoClick(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnDoubleClick(System.EventArgs)">
      <summary>
ユーザーがコントロールをダブルクリックしたときに<see cref="F:FarPoint.Win.ElementWindowless.DoubleClick" />イベントを発生させます。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Refresh">
      <summary>
            要素のクライアント領域を無効にしてすぐに再描画させます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ResetElements">
      <summary>
            要素をデフォルト設定にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Reset">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.Clone">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetState(FarPoint.Win.ElementState)">
      <summary>
            要素の状態を設定します。
            </summary>
      <param name="eState">要素を設定する列挙状態</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.ToggleState">
      <summary>
            要素の状態を切り替えます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetClientRectangle">
      <summary>
            要素の座標を取得します。
            </summary>
      <returns>要素の座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>
            要素の座標を取得します。
            </summary>
      <param name="rectInput">矩形を含むRectangleオブジェクト</param>
      <returns>要素の座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetClientRectangleF">
      <summary>
            要素の座標を取得します。
            </summary>
      <returns>要素の座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetClientRectangleF(System.Drawing.RectangleF)">
      <summary>
            要素の座標を取得します。
            </summary>
      <param name="rectInput">矩形を含むRectangleオブジェクト</param>
      <returns>要素の座標</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            要素（テキストとピクチャ）を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">要素の座標</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>
要素（テキストとピクチャ）をオーバーライドスタイルで描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">要素の座標</param>
      <param name="overrideStyle">オーバーライド時に使用するスタイル</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetTextAndPictureRectangles(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle@,System.Drawing.Rectangle@)">
      <summary>
            要素のテキストとピクチャの矩形を取得します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">要素座標を含むRectangleオブジェクト</param>
      <param name="rPict">取得するピクチャの矩形</param>
      <param name="rText">取得するテキストの矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.AdjustStringFormat(System.Drawing.StringFormat@)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="fmt">文字列書式</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintText(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            要素のテキストを指定した矩形に描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rText">テキストを囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            指定した要素にピクチャを描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rPict">ピクチャを囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintTextAndPicture(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            要素にテキストとピクチャを描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">テキストとピクチャの両方を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintForegroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            前景画像を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintFocusRectangle(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            フォーカス矩形を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintElements(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            要素を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="faceRect">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            境界線を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintBackgroundImage(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            背景画像を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintSpecialBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            特殊背景を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintSpecialForeground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            特殊前景を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            背景色を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
要素の背景を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">要素の座標</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle,FarPoint.Win.ElementStyle)">
      <summary>
要素の背景をオーバーライドスタイルで描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="rectInput">要素の座標</param>
      <param name="overrideStyle">オーバーライド時に使用するスタイル</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetElementStyle(FarPoint.Win.ElementStyle)">
      <summary>
            要素のスタイルを設定します。
            </summary>
      <param name="style">要素のスタイルを含むElementStyleオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.SetElementStyle(FarPoint.Win.ElementStyle,System.Boolean)">
      <summary>
            要素のスタイルを設定し、未設定のプロパティをクリアします。
            </summary>
      <param name="style">要素のスタイルを含むElementStyleオブジェクト</param>
      <param name="clearUnsetProps">要素の未設定のプロパティを
            デフォルト値にリセットするかどうかを表すブール値</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetElementStyle">
      <summary>
            要素のスタイルを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.AddStateNotify(FarPoint.Win.IStateNotify)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.RemoveStateNotify(FarPoint.Win.IStateNotify)">
      <summary>
            内部使用のみ。
            </summary>
      <param name="target">対象</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.FireStateNotify">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetRotatedTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming)">
      <summary>
            指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="r">矩形</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <returns>サイズ</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetRotatedTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming)">
      <summary>
            指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="r">RectangleF</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <returns>SizeFオブジェクト</returns>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.GetRotatedTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming)">
      <summary>
            指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="r">RectangleF</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">複数行テキストを描画する場合は True、それ以外の場合は False</param> // 20080 -scl
            <param name="hotkeyPrefix">HotkeyPrefix</param><param name="stringTrim">StringTrimming</param><returns>SizeFオブジェクト</returns></member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Rectangle,FarPoint.Win.HorizontalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32)">
      <summary>
            指定したフォント、色、配置、向き、ホットキー接頭辞、折り返し設定を使用して、指定した矩形に指定した文字列を描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32)">
      <summary>
            指定したフォント、色、配置、向き、折り返し設定、ホットキー接頭辞、文字列トリミングを使用して、指定した矩形に指定した文字列を描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32)">
      <summary>
            指定したフォント、色、配置、向き、折り返し設定、ホットキー接頭辞、文字列トリミングを使用して、指定した矩形に指定した文字列を描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean)">
      <summary>
            指定したフォント、色、配置、向き、折り返し設定、ホットキー接頭辞、文字列トリミングを使用して、指定した矩形に指定した文字列を描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
      <param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Single)">
      <summary>
            指定したフォント、色、配置、向き、折り返し設定、ホットキー接頭辞、文字列トリミングを使用して、指定した矩形に指定した文字列を描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
      <param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param>
      <param name="rotationAngle">テキストを回転する角度</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Single)">
      <summary>
指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">複数行テキストの場合は True</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
      <param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param>
      <param name="rotationAngle">テキストを回転する角度</param>
    </member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Boolean)">
      <summary>
指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">テキストを複数行で描画する場合は True、それ以外の場合は False</param> // 20080 -scl
            <param name="hotkeyPrefix">HotkeyPrefix</param><param name="stringTrim">StringTrimming</param><param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param><param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param><param name="rotationAngle">テキストを回転する角度</param><param name="rightToLeft">右から左へレンダリングする場合は True</param></member>
    <member name="M:FarPoint.Win.ElementWindowless.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Boolean)">
      <summary>
指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">テキストを複数行で描画する場合は True、それ以外の場合は False</param> // 20080 -scl
            <param name="hotkeyPrefix">HotkeyPrefix</param><param name="stringTrim">StringTrimming</param><param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param><param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param><param name="rotationAngle">テキストを回転する角度</param><param name="rightToLeft">右から左へレンダリングする場合は True</param></member>
    <member name="E:FarPoint.Win.ElementWindowless.BackgroundImageChanged">
      <summary>
            要素の背景画像が変更されると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.Click">
      <summary>
            ユーザーが要素をクリックすると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.DoubleClick">
      <summary>
            ユーザーが要素をダブルクリックすると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.FontChanged">
      <summary>
            要素のフォントが変更されると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.ForegroundImageChanged">
      <summary>
            要素の前景画像が変更されると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.MouseDown">
      <summary>
            カーソルが要素の上に置かれた状態でユーザーがマウスボタンを押すと発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.MouseMove">
      <summary>
            カーソルが要素の上に置かれた状態でユーザーがカーソルを移動すると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.MouseUp">
      <summary>
            カーソルが要素の上に置かれた状態でユーザーがマウスボタンを解放すると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.PictureChanged">
      <summary>
            要素のピクチャが変更されると発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.ParentChanged">
      <summary>
            要素の親が変更されたときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.Changed">
      <summary>
            要素が変更されたとき発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.ElementWindowless.PropertyChanged">
      <summary>
            要素のプロパティが変更されたときに発生します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextWrap">
      <summary>
            要素のテキストを折り返すかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextWrapPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Focused">
      <summary>
            要素にフォーカスがあるかどうかを取得します。
            </summary>
      <example><code lang="csharp">
            bool vbool;
            element.AlignHorz = FarPoint.Win.HorizontalAlignment.Left;
            element.AlignVert = FarPoint.Win.VerticalAlignment.Top;
            element.TextWrap = true;
            element.Text = "Let's plan on meeting at 10.";
            vbool = element.Focused;
            textBox1.Text = Convert.ToString(vbool);
            </code><code lang="vb">
            Dim vbool As Boolean
            element.AlignHorz = FarPoint.Win.HorizontalAlignment.Left
            element.AlignVert = FarPoint.Win.VerticalAlignment.Top
            element.TextWrap = true
            element.Text = "Let's plan on meeting at 10."
            vbool = control.Focused
            TextBox1.Text = vbool
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ContainsFocus">
      <summary>
            要素に現在入力フォーカスがあるかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.CancelMouse">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureMargin">
      <summary>
            テキストとピクチャの間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginBottom">
      <summary>
            要素の下辺と内容の間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginBottom = 20;
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginBottom = 20
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginTop">
      <summary>
            要素の上辺と内容の間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginTop = 20;
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginTop = 20
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginLeft">
      <summary>
            要素の左辺と内容の間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginLeft = 20;
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginLeft = 20
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.MarginRight">
      <summary>
            要素の右辺と内容の間の余白を取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginRight = 20;
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginRight = 20
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Redraw">
      <summary>
            要素の描画を許可するかどうかを取得または設定します。
            </summary>
      <example><code lang="csharp">
            private void button1_Click(object sender, System.EventArgs e)
            {
            element.Redraw = true;
            }
            </code><code lang="vb">
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
            element.Redraw = True
            End Sub
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Selectable">
      <summary>
            コントロールがフォーカスを受け取れるかどうかを取得または設定します。 
            </summary>
      <example><code lang="csharp">
            private void button1_Click(object sender, System.EventArgs e)
            {
            element.Visible = true;
            element.Enabled = false;
            element.Selectable = false;
            }
            </code><code lang="vb">
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
            element.Visible = True
            element.Enabled = False
            element.Selectable = False
            End Sub
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.DrawFocusRectangle">
      <summary>
            要素のフォーカス矩形の描画スタイルを取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginBottom = 20;
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText;
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginBottom = 20
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Parent">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Visible">
      <summary>
            要素を表示するかどうかを取得または設定します。 
            </summary>
      <example><code lang="csharp">
            private void button1_Click(object sender, System.EventArgs e)
            {
            element.Visible = true;
            element.Enabled = false;
            element.Selectable = false;
            }
            </code><code lang="vb">
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
            element.Visible = True
            element.Enabled = False
            element.Selectable = False
            End Sub
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Enabled">
      <summary>
            この要素が有効かどうかを取得または設定します。  
            </summary>
      <example><code lang="csharp">
            private void button1_Click(object sender, System.EventArgs e)
            {
            element.Visible = true;
            element.Enabled = false;
            element.Selectable = false;
            }
            </code><code lang="vb">
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
            element.Visible = True
            element.Enabled = False
            element.Selectable = False
            End Sub
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.CanFocus">
      <summary>
            要素がフォーカスを受け取れるかどうかを取得または設定します。
            </summary>
            /// <example><code lang="csharp">
            private void button1_Click(object sender, System.EventArgs e)
            {
            element.Visible = true;
            element.Enabled = false;
            element.Selectable = false;
            element.CanFocus = false;
            }
            </code><code lang="vb">
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
            element.Visible = True
            element.Enabled = False
            element.Selectable = False
            element.CanFocus = False
            End Sub
            </code></example></member>
    <member name="P:FarPoint.Win.ElementWindowless.Border">
      <summary>
            要素の境界線を取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginBottom = 20;
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText;
            element.Border = new FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,true,true,false,false);
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginBottom = 20
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText
            element.Border = New FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,True,True,False,False)
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.AlignText">
      <summary>
            要素のテキスト配置を取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginBottom = 20;
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText;
            element.Border = new FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,true,true,false,false);
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginBottom = 20
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText
            element.Border = New FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,True,True,False,False)
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextOrientation">
      <summary>
            要素のテキストの向きを取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginBottom = 20;
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText;
            element.Border = new FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,true,true,false,false);
            element.TextOrientation = FarPoint.Win.TextOrientation.TextTopDown;
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginBottom = 20
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText
            element.Border = New FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,True,True,False,False)
            element.TextOrientation = FarPoint.Win.TextOrientation.TextTopDown
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextOrientationPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextRotationAngle">
      <summary>
要素のテキストの回転角度を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextRotationAnglePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureOrientation">
      <summary>
            要素のピクチャの向きを取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.Picture = System.Drawing.Image.FromFile("d:\\mail16A.ico");
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight;
            element.PictureMargin = 25;
            element.MarginBottom = 20;
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText;
            element.Border = new FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,true,true,false,false);
            element.TextOrientation = FarPoint.Win.TextOrientation.TextTopDown;
            element.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate90;
            </code><code lang="vb">
            element.Picture = System.Drawing.Image.FromFile("d:\mail16A.ico")
            element.AlignText = FarPoint.Win.TextAlign.TextLeftPictRight
            element.PictureMargin = 25
            element.MarginBottom = 20
            element.DrawFocusRectangle = FarPoint.Win.DrawFocusRectangle.AroundText
            element.Border = New FarPoint.Win.BevelBorder(FarPoint.Win.BevelBorderType.Lowered,SystemColors.ControlLightLight,SystemColors.ControlDark,3,True,True,False,False)
            element.TextOrientation = FarPoint.Win.TextOrientation.TextTopDown
            element.PictureOrientation = FarPoint.Win.PictureOrientation.PictureRotate90
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureOrientationPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureTransparencyTolerance">
      <summary>
            要素の透過許容誤差を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.PictureTransparencyColor">
      <summary>
            要素の透過色を取得または設定します。
            </summary>
      <example><code lang="csharp">
            control.Picture = Image.FromFile("d:\overlay.bmp");
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.PictureTransparencyColor = Color.Blue;
            </code><code lang="vb">
            control.Picture = Image.FromFile("d:\overlay.bmp")
            control.MarginTop = 3
            control.MarginBottom = 3
            control.PictureTransparencyColor = Color.Blue
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Picture">
      <summary>
            要素のピクチャを取得または設定します。
            </summary>
      <example><code lang="csharp">
            control.Picture = Image.FromFile("d:\overlay.bmp");
            control.MarginTop = 3;
            control.MarginBottom = 3;
            control.PictureTransparencyColor = Color.Blue;
            </code><code lang="vb">
            control.Picture = Image.FromFile("d:\overlay.bmp")
            control.MarginTop = 3
            control.MarginBottom = 3
            control.PictureTransparencyColor = Color.Blue
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ForegroundImage">
      <summary>
            要素の前景画像を取得または設定します。
            </summary>
      <example><code lang="csharp">
            control.ForegroundImage = new FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp"));
            control.MarginTop = 3;
            control.MarginBottom = 3;
            </code><code lang="vb">
            control.ForegroundImage = New FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp"))
            control.MarginTop = 3
            control.MarginBottom = 3
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ForegroundImagePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.BackgroundImage">
      <summary>
            コントロールの背景画像を取得または設定します。
            </summary>
      <example><code lang="csharp">
            control.BackgroundImage = new FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp"));
            control.MarginTop = 3;
            control.MarginBottom = 3;
            </code><code lang="vb">
            control.BackgroundImage = New FarPoint.Win.Picture(Image.FromFile("d:\overlay.bmp"))
            control.MarginTop = 3
            control.MarginBottom = 3
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.BackgroundImagePriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.State">
      <summary>
            要素の状態を取得または設定します。
            </summary>
      <example><code lang="csharp">
            Font f = new System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold);
            element.Font = f;
            element.State = FarPoint.Win.ElementState.Inverted;
            </code><code lang="vb">
            Dim f As New System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold)
            element.Font = f
            element.State = FarPoint.Win.ElementState.Inverted
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Font">
      <summary>
            要素のフォントを取得または設定します。
            </summary>
      <example><code lang="csharp">
            Font f = new System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold);
            element.Font = f;
            element.State = FarPoint.Win.ElementState.Inverted;
            </code><code lang="vb">
            Dim f As New System.Drawing.Font("MS Sans Serif", 12, FontStyle.Bold)
            element.Font = f
            element.State = FarPoint.Win.ElementState.Inverted
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.FontPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Text">
      <summary>
            要素のテキストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.TextPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Name">
      <summary>
            要素の名前を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Tag">
      <summary>
            要素のTagオブジェクトを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.BackColor">
      <summary>
            要素の背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.BackColorPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ForeColor">
      <summary>
            要素の前景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.ForeColorPriv">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.AlignHorz">
      <summary>
            要素の内容の水平方向の配置を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.AlignVert">
      <summary>
            要素の内容の垂直方向の配置を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Rectangle">
      <summary>
            要素の矩形の座標を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.RectangleF">
      <summary>
            要素の矩形の座標を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.StateNotifyList">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWindowless.Elements">
      <summary>
            現在のElementControlオブジェクトに含まれるIElement派生オブジェクトのコレクションを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.#ctor(System.Object)">
      <summary>
            指定したオブジェクトをコピーして、ボタン付きの新しい要素を作成します。
            </summary>
      <param name="cloneFrom">コピー元のオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.Dispose">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.Reset">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.InitializeButtons">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.SetRedraw(System.Boolean,System.Boolean)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.AttachListeners">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.GetClientRectangle(System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.ProcessMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            MouseDownイベントを処理します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.ProcessMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            MouseUpイベントを処理します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnScrollClick(System.Object,System.EventArgs)">
      <summary>
            スクロールボタンで発生するClickイベントを処理します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnScrollMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            スクロールボタンで発生するMouseDownイベントを処理します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnScrollDoubleClick(System.Object,System.EventArgs)">
      <summary>
            スクロールボタンで発生するDoubleClickイベントを処理します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnDropClick(System.Object,System.EventArgs)">
      <summary>
            ドロップダウンボタンで発生するClickイベントを処理します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnDropDoubleClick(System.Object,System.EventArgs)">
      <summary>
            ドロップダウンボタンで発生するDoubleClickイベントを処理します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnPopUpClick(System.Object,System.EventArgs)">
      <summary>
            ポップアップボタンで発生するClickイベントを処理します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.OnPopUpDoubleClick(System.Object,System.EventArgs)">
      <summary>
            ポップアップボタンで発生するDoubleClickイベントを処理します。
            </summary>
      <param name="sender">イベントを発生させたオブジェクト</param>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.Clone">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.SetBoundsFloat(System.Single,System.Single,System.Single,System.Single)">
      <summary>
要素の境界を、指定したサイズの境界矩形の位置とサイズに設定します。 
            </summary>
      <param name="x">境界矩形の左上隅のx座標</param>
      <param name="y">境界矩形の左上隅のy座標</param>
      <param name="width">境界矩形の幅（ピクセル単位）</param>
      <param name="height">境界矩形の高さ（ピクセル単位）</param>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.SetElementBounds(System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.DoClick(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementWithButtons.DoMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.Redraw">
      <summary>
            要素の描画を許可するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.Parent">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ButtonStyle">
      <summary>
            ElementsWithButtonsオブジェクトのボタンスタイルを取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.ButtonStyle = FarPoint.Win.ElementWithButtonsStyle.DropDown;
            element.ButtonWidth = 5;
            </code><code lang="vb">
            element.ButtonStyle = FarPoint.Win.ElementWithButtonsStyle.DropDown
            element.ButtonWidth = 5
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ButtonWidth">
      <summary>
            ボタンの幅を取得または設定します。
            </summary>
      <example><code lang="csharp">
            element.ButtonStyle = FarPoint.Win.ElementWithButtonsStyle.DropDown;
            element.ButtonWidth = 5;
            </code><code lang="vb">
            element.ButtonStyle = FarPoint.Win.ElementWithButtonsStyle.DropDown
            element.ButtonWidth = 5
            </code></example>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.VisualStyles">
      <summary>
内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ButtonWidthInternal">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ScrollUpButton">
      <summary>
            スクロールアップボタンが実装されているかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.ScrollDownButton">
      <summary>
            スクロールダウンボタンが実装されているかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.DropDownButton">
      <summary>
            ドロップダウンボタンが実装されているかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementWithButtons.PopUpButton">
      <summary>
            ポップアップボタンが実装されているかどうかを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.NoFocusChangeException">
      <summary>
            フォーカスが変更されない例外を表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.DropDownButtonElement">
      <summary>
ドロップダウンボタン要素を表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ButtonElement">
            ==========================================================================================
             <summary>
            ボタン要素オブジェクトを表します。
             </summary></member>
    <member name="M:FarPoint.Win.ButtonElement.#ctor">
      <summary>
            ボタン要素オブジェクトを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.#ctor(System.Object)">
      <summary>
            別のボタン要素をコピーしてボタン要素を作成します。
            </summary>
      <param name="cloneFrom">コピー元のオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.Clone">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            MouseDown処理。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ButtonElement.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            MouseUp処理。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.#ctor">
      <summary>
新しいドロップダウンボタン要素を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.Dispose">
      <summary>
システム リソースを解放します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.AttachMouseListeners">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.DetachListeners">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.DoMouseEnter(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.DoMouseLeave(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.DropDownButtonElement.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.DropDownButtonElement.VisualStyles">
      <summary>
内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SpinUpButtonElement">
      <summary>
スピンアップボタン要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.#ctor">
      <summary>
新しいスピンアップボタン要素を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.Dispose">
      <summary>
システム リソースを解放します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.AttachMouseListeners">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.DetachListeners">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.DoMouseEnter(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.DoMouseLeave(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinUpButtonElement.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SpinUpButtonElement.VisualStyles">
      <summary>
内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SpinDownButtonElement">
      <summary>
スピンダウンボタン要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.#ctor">
      <summary>
新しいスピンダウンボタン要素を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.Dispose">
      <summary>
システム リソースを解放します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.AttachMouseListeners">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.DetachListeners">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.DoMouseEnter(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.DoMouseLeave(System.Object,System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.OnPaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.DoMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SpinDownButtonElement.OnPaint(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SpinDownButtonElement.VisualStyles">
      <summary>
内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Elements">
      <summary>
            要素のコレクションを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.#ctor">
      <summary>
            要素のコレクションを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.Find(System.String)">
      <summary>
            指定した名前に一致するコレクション内の要素を検索します。
            </summary>
      <param name="elementName">要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Contains(System.Object)">
      <summary>
要素がコレクションに含まれるかどうかを取得します。
            </summary>
      <param name="element">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.IndexOf(System.Object)">
      <summary>
            要素のコレクション内のインデックスを取得します。
            </summary>
      <param name="element">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.FindByType(System.Type,System.String)">
      <summary>
指定した型と名前に一致するコレクション内の要素を検索します。
            </summary>
      <param name="t">要素の型</param>
      <param name="elementName">要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Add(System.Object)">
      <summary>
            要素をコレクションに追加してそのインデックスを返します。
            </summary>
      <param name="e">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Add(System.Object,System.Boolean)">
      <summary>
            要素をコレクションに追加してそのインデックスを返します。
            </summary>
      <param name="e">要素オブジェクト</param>
      <param name="noClone">クローンせずにそのまま追加するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Insert(System.Int32,System.Object)">
      <summary>
コレクションの指定したインデックスに要素を挿入します。
            </summary>
      <param name="index">インデックス</param>
      <param name="e">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Insert(System.Int32,System.Object,System.Boolean)">
      <summary>
コレクションの指定したインデックスに要素を挿入します。
            </summary>
      <param name="index">インデックス</param>
      <param name="e">要素オブジェクト</param>
      <param name="noClone">クローンせずにそのまま追加するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Clear">
      <summary>
すべての要素をコレクションから削除します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.Remove(System.Object)">
      <summary>
            指定した要素をコレクションから削除します。
            </summary>
      <param name="e">要素オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Elements.RemoveAt(System.Int32)">
      <summary>
インデックスで指定した要素をコレクションから削除します。
            </summary>
      <param name="index">要素のインデックス</param>
    </member>
    <member name="M:FarPoint.Win.Elements.RemoveByName(System.String)">
      <summary>
名前で指定した要素をコレクションから削除します。
            </summary>
      <param name="elementName">要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Elements.Replace(System.Object,System.Object)">
      <summary>
            既存の要素を新しい要素に置き換えます。 
            </summary>
      <param name="newObj">使用する新しい要素</param>
      <param name="oldObj">置き換える要素</param>
      <returns>成功した場合は新しい要素、それ以外の場合は-１</returns>
    </member>
    <member name="M:FarPoint.Win.Elements.ReplaceAt(System.Int32,System.Object)">
      <summary>
            インデックスの既存の要素を新しい要素に置き換えます。 
            </summary>
      <param name="index">置換対象の要素のインデックス</param>
      <param name="newObj">使用する新しい要素</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Elements.GetEnumerator(System.Int32,System.Int32)">
      <summary>
要素の配列リストのインデックスと数を返します。
            </summary>
      <param name="index">要素の位置</param>
      <param name="count">コレクション内の要素数</param>
      <returns>要素の配列リストのインデックスと数</returns>
    </member>
    <member name="M:FarPoint.Win.Elements.GetEnumerator">
      <summary>
要素の配列リストを返します。
            </summary>
      <returns>要素の配列リスト</returns>
    </member>
    <member name="M:FarPoint.Win.Elements.AddNotify(FarPoint.Win.IElementNotify)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.RemoveNotify(FarPoint.Win.IElementNotify)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.FireElementNotify(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.AddDeletedNotify(FarPoint.Win.IElementDeletedNotify)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.RemoveDeletedNotify(FarPoint.Win.IElementDeletedNotify)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.FireElementDeletedNotify(System.Object)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.CopyTo(System.Array,System.Int32)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.AddRange(System.Object[])">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Elements.Count">
      <summary>
            コレクションの要素数を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Elements.Item(System.Int32)">
      <summary>
            コレクションの指定したインデックスの要素を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Elements.IsSynchronized">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Elements.SyncRoot">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Elements.ElementEnumerator">
      <summary>
            各種の列挙子（All、Days、RecurringDates、SpecificDates）の
            IEnumeratorを実装します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.ElementEnumerator.#ctor(FarPoint.Win.Elements)">
      <summary>
            指定した配列内の要素の列挙子を作成します。
            </summary>
      <param name="elementArray">要素配列</param>
    </member>
    <member name="M:FarPoint.Win.Elements.ElementEnumerator.#ctor(FarPoint.Win.Elements,System.Boolean,System.Int32,System.Int32)">
      <summary>
            配列の指定範囲に含まれる要素の列挙子を作成します。
            </summary>
      <param name="elementArray">要素配列</param>
      <param name="returnIndex">インデックスを返すかどうか</param>
      <param name="startIndex">開始インデックス</param>
      <param name="endIndex">終了インデックス</param>
    </member>
    <member name="M:FarPoint.Win.Elements.ElementEnumerator.MoveNext">
      <summary>
            列挙子を要素配列内の次の要素に進めます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Elements.ElementEnumerator.Reset">
      <summary>
            列挙子を最初の位置にリセットします。これは要素配列の
            最初の要素の前となります。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Elements.ElementEnumerator.Current">
      <summary>
            列挙子の現在の要素を取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.IElementStyle">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ElementStyle">
      <summary>
            要素スタイルオブジェクトを表します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.#ctor">
      <summary>
            要素スタイルを作成します（ElementStyleオブジェクト）。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.Reset">
      <summary>
要素スタイルをリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsPictureMarginSet">
      <summary>
            PictureMarginプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsMarginBottomSet">
      <summary>
            MarginBottomプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsMarginTopSet">
      <summary>
            MarginTopプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsMarginLeftSet">
      <summary>
            MarginLeftプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsMarginRightSet">
      <summary>
            MarginRightプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsSelectableSet">
      <summary>
            MarginRightプロパティが設定されているかどうかを表す値を取得します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsDrawFocusRectangleSet">
      <summary>
            DrawFocusRectangleプロパティが設定されているかどうかを判定します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsVisibleSet">
      <summary>
            Visibleプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsEnabledSet">
      <summary>
            Enabledプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsTextWrapSet">
      <summary>
            TextWrapプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsCanFocusSet">
      <summary>
            CanFocusプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsBorderSet">
      <summary>
            Borderプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsAlignTextSet">
      <summary>
            AlignTextプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsTextOrientationSet">
      <summary>
            TextOrientationプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsPictureOrientationSet">
      <summary>
            PictureOrientationプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsPictureTransparencyColorSet">
      <summary>
            PictureTransparencyColorプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsPictureSet">
      <summary>
            Pictureプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsForegroundImageSet">
      <summary>
            ForegroundImageプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsBackgroundImageSet">
      <summary>
            BackgroundImageプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsFontSet">
      <summary>
            Fontプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsTextSet">
      <summary>
            Textプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsStyleNameSet">
      <summary>
            StyleNameプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsBackColorSet">
      <summary>
            BackColorプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsForeColorSet">
      <summary>
            ForeColorプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsAlignHorzSet">
      <summary>
            AlignHorzプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ElementStyle.IsAlignVertSet">
      <summary>
            AlignVertプロパティが設定されているかどうかを判定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.PictureMargin">
      <summary>
            スタイルのテキストとピクチャの間の余白を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.MarginBottom">
      <summary>
            オブジェクトの下端から内容までの余白を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.MarginTop">
      <summary>
            オブジェクトの上端から内容までの余白を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.MarginLeft">
      <summary>
            オブジェクトの左端から内容までの余白を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.MarginRight">
      <summary>
            オブジェクトの右端から内容までの余白を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Selectable">
      <summary>
            ユーザーが要素を操作できるかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.DrawFocusRectangle">
      <summary>
            オブジェクトのフォーカス矩形の描画スタイルを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Visible">
      <summary>
            スタイルで要素を表示するかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Enabled">
      <summary>
            オブジェクトがフォーカスを取得してユーザーアクションに応答するかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.TextWrap">
      <summary>
            改行せずにテキストを自動的に折り返すどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.CanFocus">
      <summary>
            オブジェクトがフォーカスを受け取れるかどうかを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Border">
      <summary>
            スタイルの境界線を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.AlignText">
      <summary>
            スタイルのピクチャの配置を基準としたテキストの配置を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.TextOrientation">
      <summary>
            テキストの向きを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.PictureOrientation">
      <summary>
            スタイルのピクチャの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.PictureTransparencyColor">
      <summary>
            スタイルのピクチャの透過色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Picture">
      <summary>
            スタイルのピクチャを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.ForegroundImage">
      <summary>
            スタイルの前景画像を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.BackgroundImage">
      <summary>
            スタイルの背景画像を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Font">
      <summary>
            スタイルのフォントを取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.Text">
      <summary>
            コントロールの内容を、表示されたものと完全一致する文字列として取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.StyleName">
      <summary>
            作成したスタイルの名前を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.BackColor">
      <summary>
            スタイルの背景色を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.ForeColor">
      <summary>
            スタイルのテキスト色を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.AlignHorz">
      <summary>
            スタイルの水平方向の配置を取得または設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.ElementStyle.AlignVert">
      <summary>
            スタイルの垂直方向の配置を取得または設定します。 
            </summary>
    </member>
    <member name="T:FarPoint.Win.FpHyperlink">
      <summary>
            FarPointハイパーリンクコントロールを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.#ctor">
      <summary>
            新しいFarPointハイパーリンクコントロールを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            ハイパーリンクコントロールの背景を描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnPaint(System.Windows.Forms.PaintEventArgs,System.Object)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.IsPointInPicture(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,FarPoint.Win.Picture)">
      <summary>
            ポイントがハイパーリンクコントロールのピクチャ内にあるかどうかを決定します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="x">ポイントのX座標</param>
      <param name="y">ポイントのＹ座標</param>
      <param name="faceRect">画像矩形</param>
      <param name="pic">ピクチャ（画像）</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.IsPointInLink(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle,System.String,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Windows.Forms.LinkArea[],FarPoint.Win.Picture)">
      <summary>
            ポイントがハイパーリンクコントロールのリンクのテキスト内にあるかどうかを決定します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="x">ポイントのX座標</param>
      <param name="y">ポイントのＹ座標</param>
      <param name="r">画像矩形</param>
      <param name="text">ハイパーリンクのテキスト</param>
      <param name="f">テキストのフォント</param>
      <param name="horizontalAlignment">水平方向の配置</param>
      <param name="verticalAlignment">垂直方向の配置</param>
      <param name="areas">ハイパーリンク領域</param>
      <param name="pict">ピクチャ（画像）</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Windows.Forms.LinkArea[],System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Picture,System.Boolean[],System.Boolean,System.Boolean)">
      <param name="rightToLeft">右から左への描画を設定するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,System.Object)">
      <summary>
ハイパーリンクコントロールのテキストを表示するサイズを取得します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">フォント</param>
      <param name="value">値</param>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnLinkClicked(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpHyperlink.OnInvalidLink(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.Picture">
      <summary>
            ハイパーリンクコントロールの背景に表示するピクチャを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.VisitedLinkColor">
      <summary>
            以前に開いたリンクを描画する色を取得または設定します
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.LinkColor">
      <summary>
            ハイパーリンクコントロールのリンクの色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.Links">
      <summary>
            URL文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.LinkAreas">
      <summary>
            リンクとして使用するテキスト領域を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.LinksVisited">
      <summary>
            リンクを開いたかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.Link">
      <summary>
            URL文字列を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.LinkArea">
      <summary>
            リンクとして使用するテキスト領域を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.Visited">
      <summary>
            リンクを開いたかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.HorizontalAlignment">
      <summary>
            ハイパーリンクコントロールのテキストの水平方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpHyperlink.VerticalAlignment">
      <summary>
            ハイパーリンクコントロールのテキストの垂直方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpHyperlink.LinkClicked">
      <summary>
            ユーザーがリンクをクリックするときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpHyperlink.InvalidLink">
      <summary>
            ユーザーがリンクをクリックするときに発生します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Inset">
      <summary>
            境界線と余白のサイズを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Inset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
上下左右を指定してインセットを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Inset.#ctor(System.Int32,System.Int32)">
      <summary>
指定した x と y を使用してインセットを作成します。
            </summary>
      <param name="xInset">
      </param>
      <param name="yInset">
      </param>
    </member>
    <member name="M:FarPoint.Win.Inset.#ctor(System.Int32)">
      <summary>
指定した側を使用してインセットを作成します。
            </summary>
      <param name="sideInset">
      </param>
    </member>
    <member name="P:FarPoint.Win.Inset.Left">
      <summary>
            左からのインセットを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Inset.Top">
      <summary>
            上からのインセットを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Inset.Right">
      <summary>
            右からのインセットを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Inset.Bottom">
      <summary>
            下からのインセットを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ProgressTextStyle">
      <summary>
進行状況インジケータのテキスト部分の外観を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressTextStyle.Value">
      <summary>
生の値をテキストとして表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressTextStyle.Percent">
      <summary>
パーセント値を表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressTextStyle.PercentRemaining">
      <summary>
残りのパーセントを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressTextStyle.Custom">
      <summary>
Textプロパティの値によって定義されたカスタムテキストを表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ProgressOrientation">
      <summary>
            コントロールの進行状況インジケータの向きを指定します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressOrientation.LeftToRight">
      <summary>
            左から右の水平方向の進行状況インジケータを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressOrientation.RightToLeft">
      <summary>
            右から左の水平方向の進行状況インジケータを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressOrientation.TopToBottom">
      <summary>
            上から下の垂直方向の進行インジケータを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressOrientation.BottomToTop">
      <summary>
            下から上の垂直方向の進行状況インジケータを表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ProgressStyle">
      <summary>
コントロールの進行状況インジケータの外観を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressStyle.Default">
      <summary>
進行状況インジケータを塗りつぶしで表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressStyle.Bars">
      <summary>
進行状況インジケータを連続した小さいバーで表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressStyle.Gradient">
      <summary>
プログレス インジケータをグラデーションとして表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ProgressStyle.Picture">
      <summary>
プログレス インジケータをピクチャとして表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.FpProgress">
      <summary>
            FarPoint進行状況インジケータコントロールを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpProgress.maximum">
      <summary>
            進行状況インジケータコントロールの向き定数。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpProgress.theme">
      <summary>
内部使用のみ。表示スタイルのテーマ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.#cctor">
      <summary>
新しい FarPoint プログレス インジケータを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.Finalize">
      <summary>
内部使用のみ。FarPoint プログレス インジケータ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.Dispose(System.Boolean)">
      <summary>
内部使用のみ。使用されたリソースをすべて解放します。
            </summary>
      <param name="disposing">破棄するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.#ctor">
FpProgress基本クラス。
            <summary>
            新しいFarPoint進行状況インジケータコントロールを作成します。
            </summary></member>
    <member name="M:FarPoint.Win.FpProgress.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>
            背景ピクチャが変更されたときに発生します。
            </summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>
VisualStyleTheme の ThemeChanged イベントを処理します。
            </summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            進行状況インジケータの背景を描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.OnPaint(System.Windows.Forms.PaintEventArgs,System.Object)">
      <summary>
内部使用のみ。コントロールを描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpProgress.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,System.Int32,System.Int32,System.Int32,FarPoint.Win.ProgressOrientation,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.Color,System.Drawing.Color,System.Boolean,FarPoint.Win.Picture,System.Boolean,FarPoint.Win.ProgressStyle,FarPoint.Win.VisualStyles,FarPoint.Win.ProgressTextStyle,System.String,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode,FarPoint.Win.Picture,System.Boolean)">
      <param name="visualStyles">表示スタイル（XP テーマ）設定</param>
      <param name="textStyle">プログレス インジケータのテキスト スタイル</param>
      <param name="textStr">プログレス インジケータのテキスト文字列</param>
      <param name="rightToLeft"> 右から左へ描画するかどうかを指定します。</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,System.Int32,System.Int32,System.Int32,FarPoint.Win.ProgressOrientation)">
      <summary>
            進行状況インジケータのテキストとピクチャを表示するために必要な高さと幅を計算します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">テキストのフォント</param>
      <param name="value">値</param>
      <param name="minimum">最小許容値</param>
      <param name="maximum">最大許容値</param>
      <param name="orientation">進行状況インジケータの向き</param>
    </member>
    <member name="M:FarPoint.Win.FpProgress.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,System.Int32,System.Int32,System.Int32,FarPoint.Win.ProgressOrientation,FarPoint.Win.ProgressTextStyle,System.String)">
      <summary>
            進行状況インジケータのテキストとピクチャを表示するために必要な高さと幅を計算します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">テキストのフォント</param>
      <param name="value">値</param>
      <param name="minimum">最小許容値</param>
      <param name="maximum">最大許容値</param>
      <param name="orientation">進行状況インジケータの向き</param>
      <param name="textStyle">何をテキストとして表示するかを指定します。</param>
      <param name="textStr">表示するテキスト文字列</param>
    </member>
    <member name="P:FarPoint.Win.FpProgress.BackgroundImage">
      <summary>
            コントロールの背景画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.TextStyle">
      <summary>
進行状況インジケータのテキスト部分の表示方法を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Orientation">
      <summary>
            進行状況インジケータの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Style">
      <summary>
進行状況インジケータの表示方法を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.VisualStyles">
      <summary>
プログレス インジケータを表示する際に表示スタイルを使用するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Maximum">
      <summary>
            進行状況インジケータの最大値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Minimum">
      <summary>
            進行状況インジケータの最小値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Value">
      <summary>
            進行状況インジケータの現在値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.FillColor">
      <summary>
プログレス インジケータを描画する色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.FillColor2">
      <summary>
プログレス インジケータをグラデーションで描画する際の２番目の色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.GradientMode">
      <summary>
スタイルがグラデーションを表示するよう設定されている場合にプログレス インジケータに表示するグラデーション スタイルを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.Picture">
      <summary>
スタイルがピクチャを表示するよう設定されている場合にプログレス インジケータに表示する画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.FillTextColor">
      <summary>
            進行状況インジケータのテキスト色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.ShowText">
      <summary>
プログレス インジケータにパーセント値をテキストとして表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.HorizontalAlignment">
      <summary>
            進行状況インジケータのテキストの水平方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpProgress.VerticalAlignment">
      <summary>
            進行状況インジケータのテキストの垂直方向の配置を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.RadioOrientation">
      <summary>
            コントロールのオプションボタンの向きを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RadioOrientation.Horizontal">
      <summary>
            オプションボタンを水平方向に表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RadioOrientation.Vertical">
      <summary>
            オプションボタンを垂直方向に表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.RadioPictureType">
      <summary>
            マルチオプションボタンコントロールの個々のオプションの状態を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RadioPictureType.PictureFalse">
      <summary>
            False状態のピクチャを使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RadioPictureType.PictureFalsePressed">
      <summary>
            Falseで押された状態のピクチャを使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RadioPictureType.PictureTrue">
      <summary>
            True状態のピクチャを使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.RadioPictureType.PictureTruePressed">
      <summary>
            Trueで押された状態のピクチャを使用します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.RadioPictureConverter">
      <summary>
            CheckBoxPictureオブジェクトを別の形式に変換します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.RadioPictureConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
            オブジェクトのプロパティ値のセットを指定して、
            この型のオブジェクトを作成します。
            </summary>
      <param name="context">コンテキスト</param>
      <param name="propertyValues">プロパティ値</param>
    </member>
    <member name="M:FarPoint.Win.RadioPictureConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            このオブジェクトの値を変更するのに、CreateInstanceメソッドを呼び出して
            新しい値を作成する必要があるかどうかを判定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.RadioPicture">
      <summary>
            それぞれのオプションボタンの状態を表すピクチャを表します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.Item(System.Int32)">
      <summary>
            それぞれのオプションボタンの状態を表すピクチャを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.Item(FarPoint.Win.RadioPictureType)">
      <summary>
            それぞれのオプションボタンの状態を表すピクチャを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.False">
      <summary>
            False状態に使用する画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.FalsePressed">
      <summary>
            Falseで押された状態に使用する画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.True">
      <summary>
            True状態に使用する画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.RadioPicture.TruePressed">
      <summary>
            Trueで押された状態に使用する画像を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.FpMultiOption">
      <summary>
            FarPointのマルチオプションボタンコントロールを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpMultiOption.DEFAULT_PICTURE_WIDTH">
      <summary>
            デフォルトのピクチャ（画像）の幅。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpMultiOption.DEFAULT_PICTURE_HEIGHT">
      <summary>
            デフォルトのピクチャ（画像）の高さ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.#ctor">
            FpMultiOption基本クラス
            <summary>
            新しいマルチオプションボタンコントロールを作成します。
            </summary></member>
    <member name="M:FarPoint.Win.FpMultiOption.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>
            背景ピクチャが変更されたときに発生します。
            </summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>
VisualStyleTheme の ThemeChanged イベントを処理します。
            </summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnValueChanged(System.EventArgs)">
      <summary>
            ValueChangedイベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.ProcessMnemonic(System.Char)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.DoLayout(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList,System.Drawing.Rectangle[]@,System.Drawing.Rectangle[]@,System.Drawing.Rectangle[]@,System.Int32,System.Int32,System.Boolean)">
      <summary>
            マルチオプションボタンのレイアウト矩形を計算します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList)">
      <summary>
            デフォルトの幅と高さを持つコントロールで（オプションボタンの）テキストと
            ピクチャを表示するために必要な高さと幅を計算します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">フォント</param>
      <param name="nAlign">テキスト配置</param>
      <param name="nOrientation">オプションボタンのリストの向き（垂直または水平方向）</param>
      <param name="radioPicture">オプションボタンのピクチャ（画像）</param>
      <param name="radioList">オプションリストの配列</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.GetPreferredSize(System.Drawing.Graphics,System.Drawing.Font,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList,System.Int32,System.Int32)">
      <summary>
            コントロールの（オプションボタンの）テキストとピクチャを表示するために必要な
            高さと幅を計算します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="font">フォント</param>
      <param name="nAlign">テキスト配置</param>
      <param name="nOrientation">オプションボタンのリストの向き（垂直または水平方向）</param>
      <param name="radioPicture">オプションボタンのピクチャ（画像）</param>
      <param name="radioList">オプションリストの配列</param>
      <param name="pictWidth">オプションボタンのピクチャの幅</param>
      <param name="pictHeight">オプションボタンのピクチャの高さ</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            背景を描画します。
            </summary>
      <param name="e">イベント引数</param>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Picture,System.Boolean)">
      <summary>
            デフォルトの幅と高さを持つマルチオプションボタンを描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpMultiOption.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.ButtonTextAlign,FarPoint.Win.RadioOrientation,FarPoint.Win.RadioPicture,System.Collections.ArrayList,System.Int32,System.Int32,System.Boolean,System.Boolean,FarPoint.Win.Picture,System.Boolean,System.Int32,System.Int32,System.Int32,FarPoint.Win.VisualStyles,System.Boolean)">
      <summary>
            マルチオプションボタンを描画します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpMultiOption.ValueChanged">
      <summary>
            ユーザーが別のオプションを選択（値を変更）したときに発生します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.BackgroundImage">
      <summary>
            オプションボタンコントロールに使用する背景画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.VisualStyles">
      <summary>
表示スタイルを使用するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.ItemData">
      <summary>
項目データリストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.UseMnemonic">
      <summary>
            特殊キー（ショートカットキー）を項目の選択に使用できるかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.TextAlign">
      <summary>
            ピクチャを基準とするテキストの配置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.Orientation">
      <summary>
            マルチオプションボタンの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.Picture">
      <summary>
            オプションボタンのそれぞれの状態に使用するピクチャを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.List">
      <summary>
            個々のオプションボタンのリストを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.Value">
      <summary>
            マルチオプションボタンから現在選択されているオプションを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.HorizontalAlignment">
      <summary>
            オプションを水平方向に配置する方法を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.VerticalAlignment">
      <summary>
            オプションを垂直方向に配置する方法を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.PictureWidth">
      <summary>
            コントロールのピクチャ（画像）の幅を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpMultiOption.PictureHeight">
      <summary>
            コントロールのピクチャ（画像）の高さを取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SliderOrientation">
      <summary>
            スライダの向きを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SliderOrientation.Horizontal">
      <summary>
            スライダを水平方向に表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SliderOrientation.Vertical">
      <summary>
            スライダを垂直方向に表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SliderOrientation.HorizontalRightToLeft">
      <summary>
スライダを水平方向に右から左へ表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.SliderOrientation.VerticalBottomToTop">
      <summary>
スライダを垂直方向に下から上へ表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.FpSlider">
      <summary>
            FarPointのスライダ（トラックバー）コントロールを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.FpSlider.theme">
      <summary>
内部使用のみ。表示スタイルのテーマ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.#cctor">
      <summary>
      </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.Dispose(System.Boolean)">
      <summary>
      </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.#ctor">
      <summary>
            新しいFarPointスライダ（トラックバー）コントロールを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnBackgroundImageChanged(System.Object,System.EventArgs)">
      <summary>
            背景ピクチャが変更されたときに発生します。
            </summary>
      <param name="sender">イベントのソース</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>
VisualStyleTheme の ThemeChanged イベントを処理します。
            </summary>
      <param name="sender">オブジェクト</param>
      <param name="e">EventArgs</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnValueChanged(System.EventArgs)">
      <summary>
            ValueChangedイベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnError(System.EventArgs)">
      <summary>
Error イベントを発生させます。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseEnter(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseLeave(System.EventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            内部使用のみ。背景を描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.FpSlider.DoPaint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Boolean,System.Drawing.Color,FarPoint.Win.SliderOrientation,System.Int32,System.Int32,System.Int32,FarPoint.Win.Picture,System.Int32,System.Int32,FarPoint.Win.Picture,System.Drawing.Color,FarPoint.Win.Picture,System.Boolean,System.Boolean,System.Boolean,FarPoint.Win.VisualStyles,System.Drawing.Color,System.Boolean)">
      <param name="tickColor">スライダーの目盛の色</param>
      <param name="rightToLeft">右から左へ描画する場合は True</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.GetPreferredSize(FarPoint.Win.SliderOrientation,System.Int32,System.Int32,System.Int32)">
      <summary>
指定した向きと値を使用してスライダー全体を表示するのに必要なサイズを取得します。
            </summary>
      <param name="orientation">スライダの向き</param>
      <param name="minimum">スライダの最小値</param>
      <param name="maximum">スライダの最大値</param>
      <param name="tickSpacing">目盛の間隔</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.IsPointInKnob(System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32,FarPoint.Win.SliderOrientation,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
ポイントがスライダーのノブの中にあるかどうかを判定します。
            </summary>
      <param name="x">ポイントのX座標</param>
      <param name="y">ポイントのＹ座標</param>
      <param name="r">画像矩形</param>
      <param name="value">値</param>
      <param name="orientation">スライダの向き</param>
      <param name="minimum">最小値</param>
      <param name="maximum">最大値</param>
      <param name="knobWidth">スライダのつまみの幅</param>
      <param name="trackWidth">スライダのトラックの幅</param>
    </member>
    <member name="M:FarPoint.Win.FpSlider.WndProc(System.Windows.Forms.Message@)">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpSlider.ValueChanged">
      <summary>
            ユーザーがスライダを移動して値を変更したときに発生します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.FpSlider.Error">
      <summary>
エラーが発生したときに発生します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.BackgroundImage">
      <summary>
スライダーの背景画像を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.VisualStyles">
      <summary>
表示スタイルを使用するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TrackPicture">
      <summary>
            スライダのトラック領域内に表示するピクチャを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TrackColor">
      <summary>
スライダーのトラックの色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.KnobPicture">
      <summary>
スライダーのノブに表示するピクチャを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.KnobWidth">
      <summary>
スライダーのノブの幅を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TrackWidth">
      <summary>
スライダーのトラックの幅を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.KnobColor">
      <summary>
スライダーのノブの色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TickColor">
      <summary>
スライダーの目盛の色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.Value">
      <summary>
スライダーの値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.Minimum">
      <summary>
            スライダの最小値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.Maximum">
      <summary>
            スライダの最大値を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.Orientation">
      <summary>
            スライダの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.TickSpacing">
      <summary>
スライダーの目盛の間隔を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.FpSlider.ChangeOnFocus">
      <summary>
            トラックの初回のクリック時にスライダのつまみを移動するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.StringSearch">
      <summary>
正規表現を使用した文字列検索機能を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.StringSearch.#ctor">
      <summary>
新しい文字列検索を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.StringSearch.#ctor(System.String)">
      <summary>
指定した検索パターンを使用して、新しい文字列検索を作成します。
            </summary>
      <param name="pattern">検索パターン</param>
    </member>
    <member name="M:FarPoint.Win.StringSearch.BuildRegExprPattern(System.String)">
      <summary>
"*" と "?" のワイルドカード文字を使用するパターン文字列から正規表現パターン文字列を構築します。
            </summary>
      <param name="pattern">パターン文字列</param>
    </member>
    <member name="M:FarPoint.Win.StringSearch.Find(System.String,System.Int32)">
      <summary>
提供されたパターンに一致する連続文字を値文字列内の指定したインデックス以降で検索します。
            </summary>
      <param name="value">
      </param>
      <param name="startIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:FarPoint.Win.StringSearch.SearchPattern">
      <summary>
検索パターンを設定します。注意：これは正規表現パターンではありません。
            </summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.Greedy">
      <summary>
正規表現の指定時に最長一致検索を行うかどうかを取得または設定します。たとえば、"FarPoint Technologies" の文字列を "F*o" パターンで検索する場合、最長一致検索を行わなければ、検索結果は "FarPo" になります。最長一致検索を行うと、検索結果は "FarPoint Techno" になります。
            </summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.RegularExpressionPattern">
      <summary>
検索に使用する正規表現パターンを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.MatchExact">
      <summary>
完全に一致する必要があるかどうかを取得または設定します。完全一致は、最初と最後が空白または行末で区切られた文字列の一致です。注意：このプロパティは、RegularExpressionPattern プロパティを使用してパターンを設定した場合には検索パターンに影響しません。
            </summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.MatchIndex">
      <summary>
一致したサブ文字列の最初の文字のインデックスを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.MatchLength">
      <summary>
一致したサブ文字列の長さを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.StringSearch.MatchString">
      <summary>
一致したサブ文字列を取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.EditMessage">
      <summary>
            編集メッセージを指定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.EditModeCursorPosition">
      <summary>
            編集コントロールがフォーカスを受け取るときのポインタの位置を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.MouseLocation">
      <summary>
            テキストを選択せずにポインタをポインタデバイスの位置に
            配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.FirstInputPosition">
      <summary>
            テキストを選択せずに、ポインタをコントロール内の
            最初の入力位置に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.End">
      <summary>
            テキストを選択せずに、ポインタをコントロールの
            テキストの最後に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.LastKnownPosition">
      <summary>
            テキストを選択せずに、コントロールがフォーカスを失う直前の位置に
            ポインタを配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.EditModeCursorPosition.SelectAll">
      <summary>
            すべてのテキストを選択し、ポインタをコントロールの
            テキストの最後に配置します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.NumberNegativeFormat">
      <summary>
            数値編集コントロールの負の値の書式を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.UseRegional">
      <summary>
            Windowsの地域設定を使用して負号と値を表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.Parentheses">
      <summary>
            コントロールの負号と値をカッコ内に表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.NegativeSignBefore">
      <summary>
            コントロールの値の前に負号を表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.NegativeSignBeforeWithSpace">
      <summary>
            コントロールの値の前に半角スペースを１つ入れて負号を表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.NegativeSignAfter">
      <summary>
            コントロールの値の後ろに負号を表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.NumberNegativeFormat.NegativeSignAfterWithSpace">
      <summary>
            コントロールの値の後ろに半角スペースを１つ入れて負号を表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.UserEntry">
      <summary>
            データが編集コントロールに提供されたときに検証するかどうかを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UserEntry.Formatted">
      <summary>
            データがコントロールに提供されたときに確認します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UserEntry.FreeFormat">
      <summary>
            データがコントロールに提供されたときに確認しません。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ControlType">
      <summary>
            コントロールの内容の処理に関する許可設定を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ControlType.Normal">
      <summary>
            デフォルト設定に基づいて内容の変更を許可します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ControlType.ReadOnly">
      <summary>
            内容の変更は許可しませんが、コピーなど一部の操作を許可します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ControlType.Static">
      <summary>
            ラベルのように内容の表示のみを許可し、フォーカスを許可しません。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ControlType.ButtonEdit">
      <summary>
            ボタンを使用した内容の変更のみを許可します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ButtonAlign">
      <summary>
            編集コントロールのボタンの配置を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonAlign.Right">
      <summary>
            ボタンをコントロールの右辺に配置します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonAlign.Left">
      <summary>
            ボタンをコントロールの左辺に配置します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ButtonStyle">
      <summary>
            編集コントロールで表示するボタンのスタイルを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.None">
      <summary>
            ボタンを表示しません。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.Spin">
      <summary>
            値のインクリメントとデクリメントを行う２つのスピンボタンを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.PopUp">
      <summary>
            ダイアログ、ポップアップカレンダー、または時計を開く、省略記号（...）ボタンを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.DropDown">
      <summary>
            ドロップダウンリスト、ドロップダウンカレンダ、または時計のドロップダウンの矢印のボタンを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.ButtonStyle.Slide">
      <summary>
            縦長のデータを上下にスクロールするための２つのボタンを表示します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.InvalidOption">
      <summary>
            編集コントロールがフォーカスを失ったときに無効なデータを処理する方法を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.InvalidOption.ShowData">
      <summary>
            常にコントロールの無効なデータを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.InvalidOption.HideData">
      <summary>
            コントロールがフォーカスを失ったときに無効なデータを非表示にします（フォーカスが戻ると無効なデータは再表示されます）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.InvalidOption.ClearData">
      <summary>
            コントロールがフォーカスを失ったときにコントロールから無効なデータをクリアします。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SpinUpEventArgs">
            System.EventArgsから派生します。
            <summary>
            SpinUpイベントのイベントデータを表します。
            </summary></member>
    <member name="M:FarPoint.Win.SpinUpEventArgs.#ctor">
      <summary>
            新しいSpinUpEventArgsオブジェクトを構築します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SpinUpEventArgs.Cancel">
      <summary>
            デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SpinUpEventHandler">
            デリゲート宣言。
            <summary>
            SpinUpイベントを処理する定義済みメソッドを表します。
            </summary></member>
    <member name="T:FarPoint.Win.SpinDownEventArgs">
            System.EventArgsから派生します。
            <summary>
            SpinDownイベントのイベントデータを表します。
            </summary></member>
    <member name="M:FarPoint.Win.SpinDownEventArgs.#ctor">
      <summary>
            新しいSpinDownEventArgsオブジェクトを構築します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SpinDownEventArgs.Cancel">
      <summary>
            デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SpinDownEventHandler">
            デリゲート宣言。
            <summary>
            SpinDownイベントを処理する定義済みメソッドを表します。
            </summary></member>
    <member name="T:FarPoint.Win.PopUpEventArgs">
            System.EventArgsから派生します。
            <summary>
            PopUpイベントのイベントデータを表します。
            </summary></member>
    <member name="M:FarPoint.Win.PopUpEventArgs.#ctor">
      <summary>
            新しいPopUpEventArgsオブジェクトを構築します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.PopUpEventArgs.Cancel">
      <summary>
            デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.PopUpEventHandler">
            デリゲート宣言。
            <summary>
            PopUpイベントを処理する定義済みメソッドを表します。
            </summary></member>
    <member name="T:FarPoint.Win.DropDownEventArgs">
            System.EventArgsから派生します。
            <summary>
            DropDownイベントのイベントデータを表します。
            </summary></member>
    <member name="M:FarPoint.Win.DropDownEventArgs.#ctor">
      <summary>
            新しいDropDownEventArgsオブジェクトを構築します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.DropDownEventArgs.Cancel">
      <summary>
            デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.DropDownEventHandler">
            デリゲート宣言。
            <summary>
            DropDownイベントを処理する定義済みメソッドを表します。
            </summary></member>
    <member name="T:FarPoint.Win.SlideLeftEventArgs">
      <summary>
            SlideLeftイベントのイベントデータを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SlideLeftEventArgs.#ctor">
      <summary>
            新しいSlideLeftEventArgsオブジェクトを構築します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SlideLeftEventArgs.Cancel">
      <summary>
            デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SlideLeftEventHandler">
            デリゲート宣言。
            <summary>
            SlideLeftイベントを処理する定義済みメソッドを表します。
            </summary></member>
    <member name="T:FarPoint.Win.SlideRightEventArgs">
            SlideRightイベントは
            System.EventArgsから派生します。
            <summary>
            SlideRightイベントのイベントデータを表します。
            </summary></member>
    <member name="M:FarPoint.Win.SlideRightEventArgs.#ctor">
      <summary>
            新しいSlideRightEventArgsオブジェクトを構築します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SlideRightEventArgs.Cancel">
      <summary>
            デフォルトの処理をキャンセルするかどうかを指定する値を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SlideRightEventHandler">
            デリゲート宣言。
            <summary>
            SlideRightイベントを処理する定義済みメソッドを表します。
            </summary></member>
    <member name="T:FarPoint.Win.InvalidDataEventHandler">
            デリゲート宣言。
            <summary>
            InvalidDataイベントを処理する定義済みメソッドを表します。
            </summary></member>
    <member name="T:FarPoint.Win.SuperEditPreview">
      <summary>
            編集コントロールのプレビューを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.InputTextBox">
      <summary>
            編集コントロールのテキストエディタを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.IsInputChar(System.Char)">
      <summary>
            文字がコントロールによって認識可能な入力文字かどうかを判定します。
            </summary>
      <param name="charCode">チェックする文字</param>
      <returns>事前処理なしでコントロールによる処理が可能な文字の場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.#ctor">
      <summary>
            コントロールのテキストエディタ（入力テキストボックス）を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.InputTextBox.SetTextNoUndo(System.String)">
      <summary>
            テキストエディタをUndoなしに設定します。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.InputTextBox.EditModeCursorPosition">
      <summary>
            フォーカスを受け取ったときのコントロールのポインタの位置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.InputTextBox.LastCaretPos">
      <summary>
            最後のカレット（^）位置を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.InputTextBox.Value">
      <summary>
            コントロールの値を取得または設定します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SEditButtonElement">
      <summary>
            編集コントロールのボタン要素を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SEditButtonElement.ToggleState">
      <summary>
            ボタンの状態を切り替えます。
            </summary>
    </member>
    <member name="T:FarPoint.Win.SEditButton">
      <summary>
            編集コントロールのボタンを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.#ctor">
      <summary>
            編集コントロールの新しいボタンを構築します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.InitializeButtons">
      <summary>
            コントロール要素を初期化します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.PaintBackColor(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            背景色を描画します。
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="r">領域を囲む矩形</param>
    </member>
    <member name="M:FarPoint.Win.SEditButton.UpdateClientArea">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.AdjustClientArea">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.ToggleState">
      <summary>
            コントロールの状態を切り替えます。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.SpecialResetState">
      <summary>
            コントロールを特定の状態にリセットします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.SEditButton.DoMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
            マウスアップ処理を処理します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.BackColor">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.SpinVisible">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.PopupVisible">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.VisualStyles">
      <summary>
内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.DropdownVisible">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="P:FarPoint.Win.SEditButton.SlideVisible">
      <summary>
            内部使用のみ。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.#ctor">
      <summary>
            新しいTabStripオブジェクトを初期化します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.#ctor(FarPoint.Win.ITabManager)">
      <summary>
            新しいTabStripオブジェクトを初期化します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.Init">
      <summary>
            初期化します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.InitializeComponent">
      <summary>
            デザイナサポートの必須メソッド。このメソッドの内容は
            コードエディタで変更しないでください。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabPicture(System.Int32)">
      <summary>
            指定したタブに表示するピクチャを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabPicture(System.Int32,FarPoint.Win.Picture)">
      <summary>
            指定したタブに表示するピクチャを設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabShape(System.Int32)">
      <summary>
            指定したタブの形状を取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabShape(System.Int32,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
            指定したタブの形状を設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabBackColor(System.Int32)">
      <summary>
            指定したタブの背景色を取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabForeColor(System.Int32)">
      <summary>
            指定したタブのテキスト色を取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabFont(System.Int32,System.Drawing.Font)">
      <summary>
            指定したタブのフォント設定を設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabBackColor(System.Int32,System.Drawing.Color)">
      <summary>
            指定したタブの背景色を設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabForeColor(System.Int32,System.Drawing.Color)">
      <summary>
            指定したタブのテキスト色を設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabText(System.Int32,System.String)">
      <summary>
            指定したタブに表示するテキストを設定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.RefreshAllTabs">
      <summary>
            タブストリップのすべてのタブを再描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.RefreshTabs(System.Int32,System.Int32)">
      <summary>
            指定した２つのタブ間のタブ範囲を再描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.RefreshTab(System.Int32)">
      <summary>
            指定したタブを再描画します。
            </summary>
      <param name="index">タブインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SelectTab(System.Int32,System.Int32)">
      <summary>
            指定した２つのタブ間のタブ範囲を選択します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
            背景を描画します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            OnPaint - TabStripコントロールを描画します。
            </summary>
      <param name="e">イベントデータを含むPaintEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabText(System.Int32)">
      <summary>
            指定したタブに表示するテキストを取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.GetTabRectangle(System.Int32)">
      <summary>
            指定したタブの矩形を取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.CalculateTabLayout(System.Drawing.Graphics,System.Boolean)">
      <summary>
            CalculateTabLayout
            </summary>
      <param name="g">グラフィックデバイス</param>
      <param name="adjustLayout">レイアウトを調整するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.DrawTabs(System.Windows.Forms.PaintEventArgs)">
            DrawTabs - タブのレイアウトを計算してタブを描画します。
            タブレイアウトは左から右へと計算した後、重なったタブを
            描画する問題を処理するため、右から左へとタブを描画します。
            <summary>
            タブのレイアウトを計算した後でタブを描画します。
            </summary><param name="e">イベントデータを含むPaintEventArgsオブジェクト</param></member>
    <member name="M:FarPoint.Win.TabStrip.DrawNavArrow(FarPoint.Win.NavButton,System.Windows.Forms.PaintEventArgs,System.Int32,System.Int32)">
      <summary>
            移動ボタンの矢印を描画します。
            </summary>
      <param name="navbutton">移動ボタン</param>
      <param name="e">イベントデータを含むPaintEventArgsオブジェクト</param>
      <param name="x">x座標</param>
      <param name="y">y座標</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.DrawNavButtons(System.Windows.Forms.PaintEventArgs)">
      <summary>
            移動ボタンを描画します。
            </summary>
      <param name="e">イベントデータを含むPaintEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.SetTabInsertionBar(System.Int32,System.Boolean,System.Boolean)">
      <summary>
            タブ挿入バーを設定します。
            </summary>
      <param name="hitTestTab">タブインデックスを表す整数 </param>
      <param name="rightOfTabs">タブの右側に設定するかどうか</param>
      <param name="setBar">バーを設定するかどうか</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.HitTestNavButton(System.Drawing.Point)">
      <summary>
            マウスがどちらの移動ボタンの上にあるかを判定します。
            </summary>
      <param name="pt">ポイント</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.HitTestNavButton(System.Int32)">
      <summary>
            どちらの移動ボタンが押されたかを判定します。
            </summary>
      <param name="x">タブのインデックス</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.HitTestTab(System.Drawing.Point,System.Boolean@)">
      <summary>
            選択されたタブインデックスを判定します。
            </summary>
      <param name="pt">ポイント</param>
      <param name="rightOfTabs">タブの右側かどうか</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MouseOverNavButton(System.Drawing.Point)">
      <summary>
            ポインタの座標を取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MouseOverTab(System.Drawing.Point)">
      <summary>
            ポインタの座標を取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.HitTestTab(System.Drawing.Point)">
      <summary>
            選択されたタブインデックスを判定します。
            </summary>
      <param name="pt">ポイント</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MovePreviousEvent(System.Object,System.EventArgs)">
      <summary>
            MovePreviousEvent
            </summary>
      <param name="o">イベントのオブジェクトソース</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveNextEvent(System.Object,System.EventArgs)">
      <summary>
            MoveNextEvent
            </summary>
      <param name="o">イベントのオブジェクトソース</param>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveFirst">
      <summary>
            MoveFirst - 最初のタブに移動します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MovePrevious">
      <summary>
            MovePrevious - 前のタブに移動します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveNext">
      <summary>
            MoveNext - 次のタブに移動します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveLast">
      <summary>
            MoveLast - 最後のタブに移動します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            OnMouseDown
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            OnMouseMove
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            OnMouseUp
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.OnResize(System.EventArgs)">
      <summary>
            OnResize - Resizeイベントを上書きします。
            </summary>
      <param name="e">イベントデータを含むEventArgsオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.TabStrip.MoveTab(System.Int32,System.Int32)">
      <summary>
            指定したタブをタブストリップ内の新しい位置に移動します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.TabStrip.Finalize">
      <summary>
            ファイナライズします。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ShowNavButtons">
      <summary>
            タブストリップがボタンを表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.SelectedTabOutlineColor">
      <summary>
            選択されたタブの輪郭の色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.DefaultTabShape">
      <summary>
            デフォルトのタブ形状を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ActiveTabInflate">
      <summary>
            アクティブタブを他のタブより大きく表示するかどうかを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.Orientation">
      <summary>
            タブストリップの向きを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.SelectedTabBackColor">
      <summary>
            選択されたタブの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.SelectedTabForeColor">
      <summary>
            選択されたタブのテキスト色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ButtonBackColor">
      <summary>
            タブストリップボタンの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ButtonForeColor">
      <summary>
            タブストリップボタンの前景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.BackColor">
      <summary>
            タブストリップの背景色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.ForeColor">
      <summary>
            タブのテキスト色を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.Font">
      <summary>
            タブのテキストのフォントプロパティを取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.Count">
      <summary>
            タブ数を取得または設定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.TabStrip.SelectedTab">
      <summary>
            選択されたタブを取得または設定します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.TabStrip.TabStripSelect">
      <summary>
            TabStripSelectイベントを処理するメソッドを表します。
            </summary>
    </member>
    <member name="E:FarPoint.Win.TabStrip.TabStripNavigate">
      <summary>
            TabStripNavigateイベントを処理するメソッドを表します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.CaptionsArrayList">
      <summary>
            テキストの表題の配列を表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.#ctor">
      <summary>
            ユーザーが使用可能な表題を表す配列を
            作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.Find(System.String)">
      <summary>
            指定した名前に一致する配列内の表題を検索します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CaptionsArrayList.Add(System.String)">
      <summary>
            表題を配列に追加してそのインデックスを返します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CaptionsArrayList.Count">
      <summary>
            配列内の表題の数を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CaptionsArrayList.Item(System.Int32)">
      <summary>
            配列内の指定したインデックスの表題を取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.EnumeratedType">
      <summary>
            セル型を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.General">
      <summary>
            標準型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.DateTime">
      <summary>
            日付／時刻型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Number">
      <summary>
            数値型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.PicMask">
      <summary>
            マスク型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Button">
      <summary>
            ボタン型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.CheckBox">
      <summary>
            チェックボックス型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Slider">
      <summary>
            スライダ（タスクバー）型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Combo">
      <summary>
            コンボボックス型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Hyperlink">
      <summary>
            ハイパーリンク型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Progress">
      <summary>
            進行状況インジケータ型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.MultiOption">
      <summary>
            マルチオプションボタン型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Percent">
      <summary>
            パーセント型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Currency">
      <summary>
            通貨型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.Text">
      <summary>
            テキスト型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.ColumnHeader">
      <summary>
            列ヘッダ型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.RowHeader">
      <summary>
            行ヘッダ型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.RichText">
      <summary>
リッチテキスト型セル
            </summary>
    </member>
    <member name="F:FarPoint.Win.EnumeratedType.CustomBase">
      <summary>
            カスタム型セル
            </summary>
    </member>
    <member name="T:FarPoint.Win.CustomTypes">
      <summary>
            カスタムセル型のコレクションを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CustomTypes.#ctor">
      <summary>
            ユーザーが使用可能なカスタムエディタを表す
            コレクションを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.CustomTypes.Clear">
      <summary>
            カスタムセル型をコレクションに追加し、そのインデックスを返します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.CustomTypes.Count">
      <summary>
            コレクションのカスタムセル型の数を取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.LicenseDialog">
      <summary>
            LicenseDialogの概要。
            </summary>
    </member>
    <member name="F:FarPoint.Win.LicenseDialog.components">
      <summary>
            必須デザイナ変数。
            </summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.Dispose(System.Boolean)">
      <summary>
            使用されたリソースをすべてクリーンアップします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.LicenseDialog.InitializeComponent">
      <summary>
            デザイナサポートの必須メソッド。このメソッドの内容は
            コードエディタで変更しないでください。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ICanSerializeXml">
            XMLへのシリアル化をサポートするオブジェクトによって提供されるインタフェース。
            オブジェクト全体をXMLに保存することができない場合もあります。
            <summary>
オブジェクトのXMLへのシリアル化をサポートするインタフェース。モデルのオブジェクト全体を保存できない場合があります。
            </summary></member>
    <member name="P:FarPoint.Win.ICanSerializeXml.CanSerializeXml">
      <summary>
            オブジェクト全体をXMLに保存し、
            再び正常にロードできるかどうかを表すブール値を取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.ISerializeSettings">
      <summary>
モデルの設定のXMLへのシリアル化をサポートするインタフェース。  
            </summary>
    </member>
    <member name="M:FarPoint.Win.ISerializeSettings.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            設定をXMLに保存します。
            </summary>
      <param name="w">オブジェクトの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeSettings.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            設定をXMLからロードします。
            </summary>
      <param name="r">設定のロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.ISerializeStyles">
      <summary>
モデルのスタイルのXMLへのシリアル化をサポートするインタフェース。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ISerializeStyles.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            スタイルをXMLに保存します。
            </summary>
      <param name="w">スタイルの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeStyles.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            スタイルをXMLからロードします。
            </summary>
      <param name="r">スタイルのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.ISerializeData">
      <summary>
モデルのデータのXMLへのシリアル化をサポートするインタフェース。
            </summary>
    </member>
    <member name="M:FarPoint.Win.ISerializeData.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            データをXMLに保存します。
            </summary>
      <param name="w">データの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeData.Serialize(System.Xml.XmlTextWriter,System.Boolean)">
      <summary>
データをXMLに保存します。オプションでデータソースと連結データを保存することもできます。
            </summary>
      <param name="w">データの保存に使用するXmlTextWriterオブジェクト</param>
      <param name="saveDataSource">データソースと連結データを保存するかどうか</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeData.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            データをXMLからロードします。
            </summary>
      <param name="r">データのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.ISerializePresentation">
      <summary>
モデルのプレゼンテーションのXMLへのシリアル化をサポートするインタフェース。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.ISerializePresentation.Serialize(System.Xml.XmlTextWriter)">
      <summary>
            プレゼンテーションをXMLに保存します。
            </summary>
      <param name="w">プレゼンテーションの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializePresentation.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
            プレゼンテーションをXMLからロードします。
            </summary>
      <param name="r">プレゼンテーションのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.ISerializeDrawing">
Drawingオブジェクトのシリアル化をサポートするオブジェクトにより提供されるインタフェース。
            <summary>
モデルの描画オブジェクト（シェイプ）のXMLへのシリアル化をサポートするインタフェース。 
            </summary></member>
    <member name="M:FarPoint.Win.ISerializeDrawing.Serialize(System.Xml.XmlTextWriter)">
      <summary>
描画オブジェクトをXMLに保存します。
            </summary>
      <param name="w">Drawingオブジェクトの保存に使用するXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.ISerializeDrawing.Deserialize(System.Xml.XmlNodeReader)">
      <summary>
描画オブジェクトをXMLからロードします。
            </summary>
      <param name="r">Drawingオブジェクトのロード元のXmlNodeReader</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="T:FarPoint.Win.Serializer">
      <summary>
            ファイルへの保存とファイルからのロードを行うシリアライザオブジェクトを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Serializer.ExtractNode(System.Xml.XmlNodeReader)">
      <summary>
指定したノードリーダーの現在のノードを新しいノードリーダーに抽出し、そのリーダーを次のノードに進めます。 
            </summary>
      <param name="r">データへのアクセスに使用するXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CloneNodeReader(System.Xml.XmlNodeReader)">
      <summary>
コピー元を先に進めずに、XmlNodeReader のコピーを作成します。
            </summary>
      <param name="r">XmlNodeReader</param>
      <returns>XmlNodeReader</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.IsDefaultValue(System.Object,System.String,System.Object)">
      <summary>
オブジェクトの指定したプロパティの値がデフォルト値であるかどうかを判定します。
            </summary>
      <param name="o">オブジェクト</param>
      <param name="propName">プロパティの名前</param>
      <param name="propVal">比較する値を含むオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CreateObjectInstanceAndDeserialize(System.Xml.XmlNodeReader,System.Type)">
      <summary>
指定したXMLノードリーダーに、指定した型のシリアル化されたオブジェクトを作成します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
      <param name="type">シリアル化サポートの型</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CreateObjectInstanceAndDeserialize(System.Xml.XmlNodeReader,System.Type,System.Type)">
      <summary>
指定したXMLノードリーダーに、指定した型とインタフェースのシリアル化されたオブジェクトを作成します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
      <param name="type">シリアル化サポートの型</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CreateObjectInstanceAndDeserialize(System.Xml.XmlNodeReader,System.Type,System.Type,System.Reflection.Assembly)">
      <summary>
指定したXMLノードリーダーに、指定した型、インタフェース、および呼び出し元アセンブリのシリアル化されたオブジェクトを作成します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
      <param name="type">型</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
      <param name="callingAssembly">呼び出すアセンブリオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeImage(System.Drawing.Image,System.String,System.Xml.XmlTextWriter)">
      <summary>
指定したライターを使用して、画像をXMLノードの指定した要素にbase64エンコード文字列としてシリアル化します。
            </summary>
      <param name="image">シリアル化するImageオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">XmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeImage(System.String)">
      <summary>
シリアル化されている指定のbase64エンコード文字列から画像を作成します。
            </summary>
      <param name="base64">base64文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeEnum(System.Enum,System.String,System.Xml.XmlTextWriter)">
      <summary>
指定したライターを使用して、列挙値をXMLノードにシリアル化します。
            </summary>
      <param name="value">シリアル化する列挙体設定</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">XmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeEnumValue(System.String,System.Type)">
      <summary>
指定した型の列挙値を逆シリアル化します。
            </summary>
      <param name="value">列挙値を表す文字列</param>
      <param name="enumType">列挙値の型</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeColor(System.Drawing.Color,System.String,System.Xml.XmlTextWriter)">
      <summary>
指定したライターを使用して、色をXMLノードにシリアル化します。
            </summary>
      <param name="c">色を含むColorオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">XmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeColorValue(System.Drawing.Color)">
      <summary>
Colorオブジェクトを色名（例：Blue）または色を表す６桁の16進数値（例：#FFFFFF）に変換します。
            </summary>
      <param name="c">色を含むColorオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeColorValue(System.String)">
      <summary>
色を表す６桁の16進数値をColorオブジェクトに変換します。
            </summary>
      <param name="s">色の値を含む文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeFont(System.Drawing.Font,System.String,System.Xml.XmlTextWriter)">
      <summary>
指定したライターを使用して、フォントをXMLノードにシリアル化します。
            </summary>
      <param name="font">フォントを含むFontオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">XmlTextWriter</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeFontValue(System.Object,System.Xml.XmlTextWriter)">
      <summary>
指定したライターを使用して、フォントを要素タグを書き込まずにXMLノードにシリアル化します。
            </summary>
      <param name="o">フォントを含むFontオブジェクト</param>
      <param name="w">XmlTextWriter</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeFont(System.Xml.XmlNodeReader)">
      <summary>
SerializeFontまたはSerializeFontValueを使用してシリアル化されたフォントを作成して逆シリアル化します。
            </summary>
      <param name="r">XmlNodeReaderオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeDateValue(System.DateTime)">
      <summary>
DataTimeオブジェクトを日付書式文字列に変換します。
            </summary>
      <param name="d">変換するDateTimeオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeDateValue(System.String)">
      <summary>
日付書式文字列をDataTime値に変換します。
            </summary>
      <param name="s">変換する日付書式の文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DefaultSerializeProp(System.Object)">
      <summary>
指定した基本オブジェクトをシリアル化して文字列表記を返します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <returns>オブジェクトの文字列表記</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.DefaultDeserializeProp(System.Object,System.Object)">
      <summary>
DefaultSerializePropを使用して保存された指定の基本オブジェクトを逆シリアル化し、値を返します。
            </summary>
      <param name="prop">プロパティの現在の値</param>
      <param name="o">逆シリアル化するオブジェクトの名前を表す文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.GetObjectXml(FarPoint.Win.ISerializeSupport,System.String)">
      <summary>
            オブジェクトをXML文字列にシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.GetObjectXml(FarPoint.Win.ISerializeSupport,System.String,System.Reflection.Assembly)">
      <summary>
            オブジェクトをXML文字列にシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SetObjectXml(FarPoint.Win.ISerializeSupport,System.String,System.String)">
      <summary>
            GetObjectXmlで保存されたオブジェクトを、指定したXML文字列を使用して逆シリアル化します。
            </summary>
      <param name="o">逆シリアル化するオブジェクト</param>
      <param name="xml">GetObjectXmlから返されたXML文字列</param>
      <param name="elementName">XML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObject(System.Type,System.String,System.String)">
      <summary>
以前にSerializer.SaveObjectを使用して保存されたオブジェクトをファイルからロードします。
            </summary>
      <param name="type">オブジェクトの型</param>
      <param name="fileName">ロード元のファイルのパスとファイル名</param>
      <param name="elementName">オブジェクトのルート要素ノードの名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObject(System.Type,System.String,System.String,System.Reflection.Assembly)">
      <summary>
以前にSerializer.SaveObjectを使用して保存されたオブジェクトをファイルからロードします。
            </summary>
      <param name="type">オブジェクトの型</param>
      <param name="fileName">ロード元のファイルのパスとファイル名</param>
      <param name="elementName">オブジェクトのルート要素ノードの名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObject(System.Type,System.IO.Stream,System.String)">
      <summary>
以前にSerializer.SaveObjectを使用して保存されたオブジェクトをストリームからロードします。
            </summary>
      <param name="type">オブジェクトの型</param>
      <param name="stream">オブジェクトのロード元のストリーム</param>
      <param name="elementName">オブジェクトのルート要素ノードの名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObject(System.Type,System.IO.Stream,System.String,System.Reflection.Assembly)">
      <summary>
以前にSerializer.SaveObjectを使用して保存されたオブジェクトをストリームからロードします。
            </summary>
      <param name="type">型</param>
      <param name="stream">オブジェクトのロード元のストリーム</param>
      <param name="elementName">オブジェクトのルート要素ノードの名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObjectXml(System.Type,System.String,System.String)">
      <summary>
            GetObjectXmlで保存されたオブジェクトから新しいインスタンスを作成して逆シリアル化します。
            </summary>
      <param name="type">オブジェクトの型</param>
      <param name="xml">XML文字列</param>
      <param name="elementName">XML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.LoadObjectXml(System.Type,System.String,System.String,System.Reflection.Assembly)">
      <summary>
            GetObjectXmlで保存されたオブジェクトから新しいインスタンスを作成して逆シリアル化します。
            </summary>
      <param name="type">オブジェクトの型</param>
      <param name="xml">XML文字列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.String,System.String)">
      <summary>
オブジェクトをXMLとしてファイルに保存します。
            </summary>
      <param name="o">保存するオブジェクト（ISerializeSupportを実装している必要があります）</param>
      <param name="fileName">オブジェクトの保存先のファイル名</param>
      <param name="rootElement">ルートXML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.IO.Stream,System.String)">
      <summary>
オブジェクトをXMLとしてストリームに保存します。
            </summary>
      <param name="o">保存するオブジェクト（ISerializeSupportを実装している必要があります）</param>
      <param name="stream">オブジェクトの保存先のストリーム</param>
      <param name="rootElement">ルートXML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.Type,System.String,System.String)">
      <summary>
指定したシリアル化インタフェースを使用して、オブジェクトをXMLとしてファイルに保存します。
            </summary>
      <param name="o">保存するオブジェクト（指定したシリアル化インタフェースを実装している必要があります）</param>
      <param name="saveInterface">使用するシリアル化インタフェース（ISerializeSupport、ISerializeSettings、ISerializeData、ISerializeStyles、ISerializeDrawing、ISerializePresentationのいずれかである必要があります）</param>
      <param name="fileName">オブジェクトの保存先のファイル名</param>
      <param name="rootElement">ルートXML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.Type,System.String,System.String,System.Reflection.Assembly)">
      <summary>
指定したシリアル化インタフェースを使用して、オブジェクトをXMLとしてファイルに保存します。
            </summary>
      <param name="o">保存するオブジェクト（指定したシリアル化インタフェースを実装している必要があります）</param>
      <param name="saveInterface">使用するシリアル化インタフェース（ISerializeSupport、ISerializeSettings、ISerializeData、ISerializeStyles、ISerializeDrawing、ISerializePresentationのいずれかである必要があります）</param>
      <param name="fileName">オブジェクトの保存先のファイル名</param>
      <param name="rootElement">ルートXML要素の名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.Type,System.IO.Stream,System.String)">
      <summary>
指定したシリアル化インタフェースを使用して、オブジェクトをXMLとしてストリームに保存します。
            </summary>
      <param name="o">保存するオブジェクト（指定したシリアル化インタフェースを実装している必要があります）</param>
      <param name="saveInterface">使用するシリアル化インタフェース（ISerializeSupport、ISerializeSettings、ISerializeData、ISerializeStyles、ISerializeDrawing、ISerializePresentationのいずれかである必要があります）</param>
      <param name="stream">オブジェクトの保存先のストリーム</param>
      <param name="rootElement">ルートXML要素の名前</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SaveObject(System.Object,System.Type,System.IO.Stream,System.String,System.Reflection.Assembly)">
      <summary>
指定したシリアル化インタフェースを使用して、オブジェクトをXMLとしてストリームに保存します。
            </summary>
      <param name="o">保存するオブジェクト（指定したシリアル化インタフェースを実装している必要があります）</param>
      <param name="saveInterface">使用するシリアル化インタフェース（ISerializeSupport、ISerializeSettings、ISerializeData、ISerializeStyles、ISerializeDrawing、ISerializePresentationのいずれかである必要があります）</param>
      <param name="stream">オブジェクトの保存先のストリーム</param>
      <param name="rootElement">ルートXML要素の名前</param>
      <param name="callingAssembly">呼び出すアセンブリ</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.CanSerializeObject(System.Object)">
      <summary>
            指定したオブジェクトがXMLにシリアル化できるかどうかを判定します。
            </summary>
      <param name="o">オブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeSettings(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>
            ISerializeSettingsインタフェースを使用してオブジェクトをシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">オブジェクトの保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeStyles(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>
            ISerializeStylesインタフェースを使用してオブジェクトをシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeData(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>
            ISerializeDataインタフェースを使用してオブジェクトをシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeData(System.Object,System.String,System.Xml.XmlTextWriter,System.Boolean)">
      <summary>
            ISerializeDataインタフェースを使用してオブジェクトをシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <param name="saveDataSource">データソースを保存する場合はTrue、それ以外の場合はFalse</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializePresentation(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>
            ISerializePresentationインタフェースを使用してオブジェクトをシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeDrawing(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>
ISerializeDrawingインタフェースを使用してオブジェクトをシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.String,System.Xml.XmlTextWriter)">
      <summary>
            ISerializeSupportインタフェースを使用して、オブジェクトをXMLノードにシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.String,System.Xml.XmlTextWriter,System.Reflection.Assembly)">
      <summary>
            ISerializeSupportインタフェースを使用して、オブジェクトをXMLノードにシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <param name="callingAssembly">オブジェクトの実装を含むアセンブリを指定します。</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.Type,System.String,System.Xml.XmlTextWriter)">
      <summary>
            ISerializeSupportインタフェースを使用して、オブジェクトをXMLノードにシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.Type,System.String,System.Xml.XmlTextWriter,System.Reflection.Assembly)">
      <summary>
            ISerializeSupportインタフェースを使用して、オブジェクトをXMLノードにシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <param name="callingAssembly">オブジェクトの実装を含むアセンブリを指定します。</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeObject(System.Object,System.Type,System.String,System.Xml.XmlTextWriter,System.Reflection.Assembly,System.Object[])">
      <summary>
            ISerializeSupportインタフェースを使用して、オブジェクトをXMLノードにシリアル化します。
            </summary>
      <param name="o">シリアル化するオブジェクト</param>
      <param name="saveInterface">使用するシリアル化インタフェース</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
      <param name="callingAssembly">オブジェクトの実装を含むアセンブリを指定します。</param>
      <param name="args">saveInterface.Serializeメソッド（最初の引数としてwを含む）に渡す引数</param>
      <returns>成功した場合はTrue、それ以外の場合はFalse</returns>
    </member>
    <member name="M:FarPoint.Win.Serializer.EncodeObject(System.Object)">
      <summary>
            オブジェクトをbase64文字列にエンコードします（シリアル化が可能な場合）。
            </summary>
      <param name="o">エンコードするオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DecodeObject(System.String)">
      <summary>
            base64文字列からオブジェクトをデコードします（EncodeObjectの逆）。
            </summary>
      <param name="s">base64でエンコードされた文字列</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeString(System.String,System.String,System.Xml.XmlTextWriter)">
      <summary>
文字列をXMLにシリアル化します。
            </summary>
      <param name="value">文字列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeStringArray(System.String[],System.String,System.Xml.XmlTextWriter)">
      <summary>
            文字列の配列をXMLにシリアル化します。
            </summary>
      <param name="array">文字列の配列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeString(System.Xml.XmlNodeReader)">
      <summary>
文字列をXMLから逆シリアル化します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeStringArray(System.Xml.XmlNodeReader)">
      <summary>
            文字列の配列をXMLから逆シリアル化します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeDateTimeFormatInfo(System.Globalization.DateTimeFormatInfo,System.String,System.Xml.XmlTextWriter)">
      <summary>
            DateTimeFormatInfoオブジェクトをXMLにシリアル化します。
            </summary>
      <param name="info">DateTimeFormatInfo</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeDateTimeFormatInfo(System.Xml.XmlNodeReader)">
      <summary>
            DateTimeFormatInfoオブジェクトをXMLから逆シリアル化します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeIntArray(System.Int32[],System.String,System.Xml.XmlTextWriter)">
      <summary>
            整数の配列をXMLにシリアル化します。
            </summary>
      <param name="array">整数の配列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeByteArray(System.Byte[],System.String,System.Xml.XmlTextWriter)">
      <summary>
            バイトの配列をXMLにシリアル化します。
            </summary>
      <param name="array">バイトの配列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializePointFArray(System.Drawing.PointF[],System.String,System.Xml.XmlTextWriter)">
      <summary>
            PointFポイントの配列をXMLにシリアル化します。
            </summary>
      <param name="array">座標（PointF点）を含む浮動小数点数の配列</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeIntArray(System.Xml.XmlNodeReader)">
      <summary>
            整数の配列をXMLから逆シリアル化します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeByteArray(System.Xml.XmlNodeReader)">
      <summary>
            バイトの配列をXMLから逆シリアル化します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializePointFArray(System.Xml.XmlNodeReader)">
      <summary>
            PointFオブジェクトの配列をXMLから逆シリアル化します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.SerializeNumberFormatInfo(System.Globalization.NumberFormatInfo,System.String,System.Xml.XmlTextWriter)">
      <summary>
            NumberFormatInfoオブジェクトをXMLにシリアル化します。
            </summary>
      <param name="info">NumberFormatInfo</param>
      <param name="elementName">XML要素の名前</param>
      <param name="w">保存先のXmlTextWriterオブジェクト</param>
    </member>
    <member name="M:FarPoint.Win.Serializer.DeserializeNumberFormatInfo(System.Xml.XmlNodeReader)">
      <summary>
            NumberFormatInfoオブジェクトをXMLから逆シリアル化します。
            </summary>
      <param name="r">XMLのロード元のXmlNodeReader</param>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods">
      <summary>
Win32 API ライブラリに基づくメソッドを定義します。
            </summary>
      <remarks>
UnsafeNativeMethods クラスは、Win32 SDK で提供された関数を定義します。
            </remarks>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.CreateFontIndirect(FarPoint.Win.Text.UnsafeNativeMethods.LOGFONT@)">
      <summary>CreateFontIndirect 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.CreatePen(System.Int32,System.Int32,System.Int32)">
      <summary>CreatePen 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.DeleteObject(System.IntPtr)">
      <summary>DeleteObject 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.DrawIcon(System.IntPtr,System.Int32,System.Int32,System.IntPtr)">
      <summary>DrawIcon 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetGraphicsMode(System.IntPtr)">
      <summary>GetGraphicsMode 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SetGraphicsMode(System.IntPtr,System.Int32)">
      <summary>SetGraphicsMode 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetWorldTransform(System.IntPtr,FarPoint.Win.Text.UnsafeNativeMethods.XFORM@)">
      <summary>GetWorldTransform 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SetWorldTransform(System.IntPtr,FarPoint.Win.Text.UnsafeNativeMethods.XFORM@)">
      <summary>SetWorldTransform 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetTextMetrics(System.IntPtr,FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC@)">
      <summary>GetTextMetrics 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.ReleaseDC(System.IntPtr,System.IntPtr)">
      <summary>ReleaseDC 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SelectObject(System.IntPtr,System.IntPtr)">
      <summary>SelectObject 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetCurrentObject(System.IntPtr,System.UInt32)">
      <summary>GetCurrentObject 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SetBkMode(System.IntPtr,System.Int32)">
      <summary>SetBKMode 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SetTextColor(System.IntPtr,System.Int32)">
      <summary>SetTextColor 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetTextColor(System.IntPtr)">
      <summary>GetTextColor 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.CreateRectRgn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>CreateRectRgn 関数。</summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.GetDC(System.IntPtr)">
      <summary>GetDC 関数。</summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.LOGBRUSH">
      <summary>
LOGBRUSH 構造体は、物理ブラシのスタイル、色、およびパターンを定義します。この構造体は、Windows CreateBrushIndirect 関数と ExtCreatePen 関数で使用されます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.LOGBRUSH.Style">
      <summary>
ブラシ スタイルを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.LOGBRUSH.Color">
      <summary>
ブラシを描画するときの色を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.LOGBRUSH.Hatch">
      <summary>
ハッチ スタイルを指定します。この値の意味は、Style によって指定されたブラシ スタイルによって異なります。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS">
      <summary>
NCCALCSIZEPARAMS 構造体は、アプリケーションが WM_NCCALCSIZE メッセージの処理中にウィンドウのクライアント領域のサイズ、位置、有効な容積を計算するために使用する情報を保持します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS.rect0">
      <summary>
この矩形は、移動またはサイズ変更されたウィンドウの新しい座標を保持します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS.rect1">
      <summary>
この矩形は、移動またはサイズ変更される前のウィンドウの座標を保持します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS.rect2">
      <summary>
この矩形は、移動またはサイズ変更される前のウィンドウのクライアント領域の座標を保持します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.NCCALCSIZEPARAMS.lppos">
      <summary>
ウィンドウの移動またはサイズ変更の原因となった操作で指定されたサイズと位置の値を保持する WINDOWPOS 構造体へのポインタ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT">
      <summary>
PAINTSTRUCT 構造体は、アプリケーションの情報を保持します。この情報は、そのアプリケーションが所有するウィンドウのクライアント領域を描画するときに使用できます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.hDC">
      <summary>
描画に使用される表示 DC のハンドル。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Erase">
      <summary>
背景を消去する必要があるかどうかを指定します。アプリケーションで背景を消去する必要がある場合、この値は０以外になります。背景ブラシを指定せずにウィンドウ クラスを作成した場合、背景を消去するのはアプリケーションの役割となります。詳細については、WNDCLASS 構造体の hbrBackground メンバの説明を参照してください。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Paint_Left">
      <summary>
描画が要求される矩形の左上隅と右下隅を指定する矩形の左の値を、クライアント領域の左上隅からの相対的なデバイス単位で指定します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Paint_Top">
      <summary>
描画が要求される矩形の左上隅と右下隅を指定する矩形の上の値を、クライアント領域の左上隅からの相対的なデバイス単位で指定します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Paint_Right">
      <summary>
描画が要求される矩形の左上隅と右下隅を指定する矩形の右の値を、クライアント領域の左上隅からの相対的なデバイス単位で指定します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Paint_Bottom">
      <summary>
描画が要求される矩形の左上隅と右下隅を指定する矩形の下の値を、クライアント領域の左上隅からの相対的なデバイス単位で指定します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Restore">
      <summary>
予約されています。システムが内部で使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.IncUpdate">
      <summary>
予約されています。システムが内部で使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Reserved1">
      <summary>
予約されています。システムが内部で使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Reserved2">
      <summary>
予約されています。システムが内部で使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Reserved3">
      <summary>
予約されています。システムが内部で使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.PAINTSTRUCT.Reserved4">
      <summary>
予約されています。システムが内部で使用します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.POINT">
      <summary>
POINT 構造体は、点の x 座標と y 座標を定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.POINT.X">
      <summary>
点の x 座標を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.POINT.Y">
      <summary>
点の y 座標を指定します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.POINT.#ctor(System.Int32,System.Int32)">
      <summary>
POINT 構造体を作成します。
            </summary>
      <param name="x">
点の x 座標を指定します。
            </param>
      <param name="y">
点の y 座標を指定します。
            </param>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.RECT">
      <summary>
RECT 構造体は、矩形の左上隅と右下隅の座標を定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Left">
      <summary>
矩形の左上隅の x 座標を取得します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Top">
      <summary>
矩形の左上隅の y 座標を取得します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Right">
      <summary>
矩形の右下隅の x 座標を取得します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Bottom">
      <summary>
矩形の右下隅の y 座標を取得します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
RECT 構造体を作成します。
            </summary>
      <param name="left">
矩形の左上隅の x 座標を取得します。
            </param>
      <param name="top">
矩形の左上隅の y 座標を取得します。
            </param>
      <param name="right">
矩形の右下隅の x 座標を取得します。
            </param>
      <param name="bottom">
矩形の右下隅の y 座標を取得します。
            </param>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.RECT.#ctor(System.Drawing.Rectangle)">
      <summary>
RECT 構造体を作成します。
            </summary>
      <param name="rectangle">
矩形を指定します。
            </param>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Offset(System.Int32,System.Int32)">
      <summary>
この矩形の位置を、指定した量に従って調整します。
            </summary>
      <param name="x">
水平方向のオフセット。
            </param>
      <param name="y">
垂直方向のオフセット。
            </param>
    </member>
    <member name="P:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Width">
      <summary>
幅を取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.Text.UnsafeNativeMethods.RECT.Height">
      <summary>
高さを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.SIZE">
      <summary>
SIZE 構造体は、矩形の幅と高さを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.SIZE.cx">
      <summary>
矩形の幅を指定します。単位は、この構造体を使用する関数によって異なります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.SIZE.cy">
      <summary>
矩形の高さを指定します。単位は、この構造体を使用する関数によって異なります。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.SIZE.#ctor(System.Int32,System.Int32)">
      <summary>
SIZE 構造体を作成します。
            </summary>
      <param name="width">サイズの幅を指定します。</param>
      <param name="height">サイズの高さを指定します。</param>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC">
      <summary>
TEXTMETRIC 構造体は、物理フォントに関する基本情報を保持します。サイズはすべて論理単位で指定されます。つまり、表示コンテキストの現在のマッピング モードによって単位は異なります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Height">
      <summary>
文字の高さ（アセント + ディセント）を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Ascent">
      <summary>
文字のアセント（ベース ラインから上の部分）を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Descent">
      <summary>
文字のディセント（ベース ラインから下の部分）を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.InternalLeading">
      <summary>
tmHeight メンバによって設定された範囲内のレディング（スペース）の量を指定します。この領域にはアクセント記号やその他の発音区別符号が描画されることがあります。このメンバはデザイナがゼロに設定する場合があります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.ExternalLeading">
      <summary>
アプリケーションが行間に付加する追加のレディング（スペース）の量を指定します。この領域はフォントの外側にあるので、記号が描画されることはなく、OPAQUE モードまたは TRANSPARENT モードでのテキスト出力呼び出しによって変更されることもありません。このメンバはデザイナがゼロに設定する場合があります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.AveCharWidth">
      <summary>
フォント内の文字の平均的な幅を指定します（通常は文字 x の幅として定義されます）。この値には、太字または斜体で必要とされる突き出し部分は含まれません。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.MaxCharWidth">
      <summary>
フォント内の最も幅の広い文字の幅を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Weight">
      <summary>
フォントのウェイトを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Overhang">
      <summary>
合成フォントに付加される追加の幅を文字列単位で指定します。太字や斜体などの属性を合成するとき、グラフィック デバイス インタフェース（GDI）またはデバイスは、文字単位と文字列単位の両方で文字列に幅を追加しなければならない場合があります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.DigitizedAspectX">
      <summary>
フォントが設計された対象のデバイスの水平アスペクトを指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.DigitizedAspectY">
      <summary>
フォントが設計された対象のデバイスの垂直アスペクトを指定します。tmDigitizedAspectX メンバと tmDigitizedAspectY メンバの比率が、フォントが設計された対象のデバイスのアスペクト比になります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.FirstChar">
      <summary>
フォントで定義された最初の文字の値を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.LastChar">
      <summary>
フォントで定義された最後の文字の値を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.DefaultChar">
      <summary>
フォントに含まれない文字の代用として描画される文字の値を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.BreakChar">
      <summary>
テキストの位置揃え用の単語間隔の定義に使用する文字の値を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Italic">
      <summary>
斜体フォントの場合、ゼロ以外の値になります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.Underlined">
      <summary>
下線付きフォントの場合、ゼロ以外の値になります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.StruckOut">
      <summary>
取り消し線付きフォントの場合、ゼロ以外の値になります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.PitchAndFamily">
      <summary>
物理フォントのピッチ、フォント技術、およびファミリに関する情報を指定します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.UnsafeNativeMethods.TEXTMETRIC.CharSet">
      <summary>
フォントの文字セットを指定します。文字セットには次のいずれかの値を指定できます。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Text.UnsafeNativeMethods.XFORM">
      <summary>
XFORM 構造体は、ワールド座標からページ座標への変換に関する情報を保持します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.XFORM.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
このコンストラクタは、<b>XFORM</b> 構造体の新しいインスタンスを初期化します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.Text.UnsafeNativeMethods.LOGFONT.Equals(FarPoint.Win.Text.UnsafeNativeMethods.LOGFONT)">
      <summary>
このメソッドは、Fon32 クラスの警告カウントを減らすために追加してください。
            </summary>
    </member>
    <member name="T:FarPoint.Win.Text.TextHelper">
      <summary>
回転描画の呼び出し用。
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.RLM">
      <summary>
RLM（Right-to-Left Mark） - 200F。		アラビア文字となります。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.LRM">
      <summary>
LRM（Left-to-Right Mark） - 200E。		ラテン文字となります。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.RLE">
      <summary>
RLE（Right-to-Left Embedding） - 202B。		以降のテキストを右から左へ埋め込まれているものとして扱います。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.LRE">
      <summary>
LRE（Left-to-Right Embedding） - 202A。		以降のテキストを左から右へ埋め込まれているものとして扱います。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.RLO">
      <summary>
RLO（Right-to-Left Override） - 202E。		以降の文字を右から左へ記述するストロング文字として扱うことを強制します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.LRO">
      <summary>
LRO（Left-to-Right Override） - 202D。		以降の文字を左から右へ記述するストロング文字として扱うことを強制します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.PDF">
      <summary>
PDF（Pop Directional Format） - 202C。		双方向状態を最後の LRE、RLE、RLO、LRO の前の状態に復元します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.ZWJ">
      <summary>
ZWJ（Zero Width Joiner） - 200D。		可能であれば、先頭文字と終了文字が結合されるようにします。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.ZWNJ">
      <summary>
ZWNJ（Zero Width Non Joiner） - 200C。		先頭文字と終了文字が結合されないようにします。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.RS">
      <summary>
RS（Record Separator） - 1E。データを区切って論理的に識別するために使用される制御文字。その固有の意味は各アプリケーションで指定する必要があります。階層的な順序で使用されている場合、この文字はレコードと呼ばれるデータ項目を区切ります。  
            </summary>
    </member>
    <member name="F:FarPoint.Win.Text.TextHelper.US">
      <summary>
US（Unit Separator） - 1F。データを区切って論理的に識別するために使用される制御文字。その固有の意味は各アプリケーションで指定する必要があります。階層的な順序で使用されている場合、この文字はユニットと呼ばれるデータ項目を区切ります。  
            </summary>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Int32)">
      <summary>
指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param>
      <param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param>
      <param name="rotationAngle">テキストを回転する角度</param>
      <param name="textIndent">テキストのインデント</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextTopDown(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Int32@,System.Boolean,System.Drawing.SizeF@)">
      <summary>
通常のテキストを上から下へ描画します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="valign">垂直方向の配置。</param>
      <param name="textOrientation">テキストの向き。</param>
      <param name="wordWrap"><c>True</c>  に設定した場合、[word wrap]。</param>
      <param name="hotkeyPrefix">ホットキー接頭辞。</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="drawRectHeight">描画矩形の高さ。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="flags">フラグ。</param>
      <param name="toscreen"><c>True</c>  に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextVerticalFlipped(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Int32,System.Drawing.Rectangle@,System.Boolean,System.Drawing.Bitmap,System.Drawing.Graphics)">
      <summary>
通常のテキストを上下に反転させて描画します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="flags">フラグ。</param>
      <param name="rect">矩形。</param>
      <param name="toscreen"><c>True</c>  に設定した場合、[toscreen]。</param>
      <param name="bmp">BMP。</param>
      <param name="gtemp">gtemp。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextVertical(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Single,System.Int32,System.Drawing.Rectangle@,System.Boolean,System.Drawing.Bitmap,System.Drawing.Graphics)">
      <summary>
通常のテキストを縦に描画します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="flags">フラグ。</param>
      <param name="rect">矩形。</param>
      <param name="toscreen"><c>True</c>  に設定した場合、[toscreen]。</param>
      <param name="bmp">BMP。</param>
      <param name="gtemp">gtemp。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextHorizontalFlipped(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Single,System.Int32,System.Drawing.Rectangle@,System.Boolean,System.Drawing.Bitmap,System.Drawing.Graphics)">
      <summary>
通常のテキストを左右に反転させて描画します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="flags">フラグ。</param>
      <param name="rect">矩形。</param>
      <param name="toscreen"><c>True</c>  に設定した場合、[toscreen]。</param>
      <param name="bmp">BMP。</param>
      <param name="gtemp">gtemp。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawNormalTextHorizontal(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF@,System.Drawing.SolidBrush,System.Drawing.StringFormat,System.Int32,System.Drawing.Rectangle@,System.Boolean)">
      <summary>
通常のテキストを横に描画します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectangle">矩形。</param>
      <param name="brush">ブラシ。</param>
      <param name="fmt">FMT。</param>
      <param name="flags">フラグ。</param>
      <param name="rect">矩形。</param>
      <param name="toscreen"><c>True</c>  に設定した場合、[toscreen]。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsHorizontal(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.StringTrimming@,System.Int32,System.Drawing.StringFormat,System.Single@,System.Boolean,System.Drawing.SizeF@,System.Drawing.SizeF@)">
      <summary>
横に描画する場合のテキストの境界を計算します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置。</param>
      <param name="valign">垂直方向の配置。</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="textIndent">テキストのインデント。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="toscreen"><c>True</c>  に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <param name="testSize">テストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsHorizontalFlipped(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment@,FarPoint.Win.VerticalAlignment@,System.Drawing.StringTrimming@,System.Int32,System.Drawing.StringFormat,System.Single@,System.Boolean,System.Drawing.SizeF@,System.Drawing.SizeF@)">
      <summary>
左右に反転する場合のテキストの境界を計算します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置。</param>
      <param name="valign">垂直方向の配置。</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="textIndent">テキストのインデント。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="toscreen"><c>True</c>  に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <param name="testSize">テストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsVerticalFlipped(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.StringTrimming@,System.Int32,System.Drawing.StringFormat,System.Single@,System.Boolean,System.Drawing.SizeF@,System.Drawing.SizeF@)">
      <summary>
上下に反転する場合のテキストの境界を計算します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置。</param>
      <param name="valign">垂直方向の配置。</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="textIndent">テキストのインデント。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="toscreen"><c>True</c>  に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <param name="testSize">テストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsVertical(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.StringTrimming@,System.Int32,System.Drawing.StringFormat,System.Single@,System.Boolean,System.Drawing.SizeF@,System.Drawing.SizeF@)">
      <summary>
縦に描画する場合のテキストの境界を計算します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置。</param>
      <param name="valign">垂直方向の配置。</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="textIndent">テキストのインデント。</param>
      <param name="fmt">FMT。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="toscreen"><c>True</c>  に設定した場合、[toscreen]。</param>
      <param name="textSize">テキストのサイズ。</param>
      <param name="testSize">テストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsTopDownRTL(System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Single@,System.Drawing.SizeF@)">
      <summary>
上から下へ RTL で描画する場合のテキストの境界を計算します。
            </summary>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置。</param>
      <param name="valign">垂直方向の配置。</param>
      <param name="wordWrap"><c>True</c>  に設定した場合、[word wrap]。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="textSize">テキストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.CalculateTextBoundsTopDown(System.Drawing.RectangleF@,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Boolean,System.Single@,System.Drawing.SizeF@)">
      <summary>
上から下へ描画する場合のテキストの境界を計算します。
            </summary>
      <param name="rectangle">矩形。</param>
      <param name="halign">水平方向の配置。</param>
      <param name="valign">垂直方向の配置。</param>
      <param name="wordWrap"><c>True</c>  に設定した場合、[word wrap]。</param>
      <param name="fAdjust">f 調整。</param>
      <param name="textSize">テキストのサイズ。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.MeasureNormalText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,FarPoint.Win.TextOrientation,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32)">
      <summary>
            指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="r">RectangleF</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="hotkeyPrefix">HotkeyPrefix</param>
      <param name="stringTrim">StringTrimming</param>
      <param name="angle">テキストの回転角度。</param>
      <returns>SizeFオブジェクト</returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.GetTextFormatFlags(System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,System.Drawing.StringTrimming)">
      <summary>
テキスト書式フラグを取得します
            </summary>
      <param name="wordWrap"><c>True</c>  に設定した場合、[word wrap]。</param>
      <param name="multiline"><c>True</c>  に設定した場合、[multiline]。</param>
      <param name="hotkeyPrefix">ホットキー接頭辞。</param>
      <param name="halign">水平方向の配置。</param>
      <param name="valign">垂直方向の配置。</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.DrawRotatedText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Boolean)">
      <summary>
指定した文字列を指定した矩形内に、指定したフォント、色、配置、向き、折り返し、ホットキー接頭辞、文字列トリミング、回転角度を使用して描画します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">描画する文字列</param>
      <param name="font">使用するフォント</param>
      <param name="foreColor">テキストの色</param>
      <param name="rectText">文字列を描画する矩形</param>
      <param name="halign">水平方向の配置</param>
      <param name="valign">垂直方向の配置</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">テキストを複数行で描画する場合は True、それ以外の場合は False</param> // 20080 -scl
            <param name="hotkeyPrefix">HotkeyPrefix</param><param name="stringTrim">StringTrimming</param><param name="drawRectHeight">対象矩形の高さ（ピクセル単位）</param><param name="adjust">配置に合わせて矩形を調整するかどうかを表すブール値</param><param name="rotationAngle">テキストを回転する角度</param><param name="rightToLeft">右から左へレンダリングする場合は True</param></member>
    <member name="M:FarPoint.Win.Text.TextHelper.GetRotatedTextSize(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.RectangleF,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming)">
      <summary>
            指定したフォント、向き、折り返し設定、ホットキー接頭辞、文字列トリミングで、指定したテキストを描画したときのサイズを取得します。
            </summary>
      <param name="g">GDI+グラフィックスサーフェス</param>
      <param name="s">文字列</param>
      <param name="font">フォント</param>
      <param name="r">RectangleF</param>
      <param name="textOrientation">テキストの向き</param>
      <param name="wordWrap">テキストを折り返す場合はTrue、それ以外の場合はFalse</param>
      <param name="multiline">複数行テキストを描画する場合は True、それ以外の場合は False</param> // 20080 -scl
            <param name="hotkeyPrefix">HotkeyPrefix</param><param name="stringTrim">StringTrimming</param><returns>SizeFオブジェクト</returns></member>
    <member name="M:FarPoint.Win.Text.TextHelper.Draw(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double,System.Boolean)">
      <summary>
テキストを描画します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="foreColor">前景色。</param>
      <param name="rectText">テキストの矩形。</param>
      <param name="halign">水平方向の配置。</param>
      <param name="valign">垂直方向の配置。</param>
      <param name="textOrientation">テキストの向き。</param>
      <param name="wordWrap"><c>True</c>  に設定した場合、[word wrap]。</param>
      <param name="hotkeyPrefix">ホットキー接頭辞。</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="drawRectHeight">描画矩形の高さ。</param>
      <param name="adjust"><c>True</c>  に設定した場合、[adjust]。</param>
      <param name="rotationAngle">回転角度。</param>
      <param name="textIndent">テキストのインデント。</param>
    </member>
    <member name="M:FarPoint.Win.Text.TextHelper.Measure(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.RectangleF,FarPoint.Win.HorizontalAlignment,FarPoint.Win.VerticalAlignment,FarPoint.Win.TextOrientation,System.Boolean,System.Boolean,System.Drawing.Text.HotkeyPrefix,System.Drawing.StringTrimming,System.Int32,System.Boolean,System.Double)">
      <summary>
テキストのサイズを取得します。
            </summary>
      <param name="g">g。</param>
      <param name="s">s。</param>
      <param name="font">フォント。</param>
      <param name="r">r。</param>
      <param name="textOrientation">テキストの向き。</param>
      <param name="wordWrap"><c>True</c>  に設定した場合、[word wrap]。</param>
      <param name="hotkeyPrefix">ホットキー接頭辞。</param>
      <param name="stringTrim">文字列のトリミング。</param>
      <param name="textIndent">テキストのインデント。</param>
      <returns>
      </returns>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil">
      <summary>
Uniscribe API ライブラリに基づくアンセーフ ネイティブ メソッドを定義します。USP - Unicode コンプレックス スクリプト プロセッサ。
            </summary>
      <remarks>
UnisribeUtil クラスは、Uniscribe SDK で提供された関数を定義します。
            </remarks>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.TextOutL2RToScreen(System.IntPtr,System.Drawing.Rectangle,System.String,System.Int32,System.Drawing.Text.HotkeyPrefix)">
      <summary>
L2R テキストを画面に出力します。
            </summary>
      <param name="hdc">HDC。</param>
      <param name="bounds">境界。</param>
      <param name="text">テキスト。</param>
      <param name="length">長さ。</param>
      <param name="hotkeyEffect">ホットキー効果。</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.TextOutR2LToScreen(System.IntPtr,System.Drawing.Rectangle,System.String,System.Int32,System.Drawing.Text.HotkeyPrefix,System.Int32)">
      <summary>
      </summary>
      <param name="hdc">
      </param>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <param name="text">
      </param>
      <param name="length">
      </param>
      <remarks>
      </remarks>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.Result">
      <summary>
この列挙体は Uniscribe API の戻り値を定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.Ok">
      <summary>
関数の実行が成功しました。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.False">
      <summary>
関数の実行が失敗しました。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.OutOfMemory">
      <summary>
メモリが不足しています。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.InvalidHandle">
      <summary>
これは無効なハンドルです。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Result.ArgumentsInvalid">
      <summary>
一部のパラメータが無効です。
            </summary>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.Control">
      <summary>
Control 構造体は、Itemize メソッドにアイテム化制御フラグを提供します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.ContextDigitsFlagMask">
      <summary>
ContextDigits プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.InvertPreBoundDirFlagMask">
      <summary>
InvertPreBoundDir プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.InvertPostBoundDirFlagMask">
      <summary>
InvertPostBoundDir プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.LinkStringBeforeFlagMask">
      <summary>
LinkStringBefore プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.LinkStringAfterFlagMask">
      <summary>
LinkStringAfter プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.NeutralOverrideFlagMask">
      <summary>
NeutralOverride プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.NumericOverrideFlagMask">
      <summary>
NumericOverride プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control.LegacyBidiClassFlagMask">
      <summary>
LegacyBidiClass プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control._defaultLanguage">
      <summary>
デフォルトの言語を示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Control._flags">
      <summary>
フラグを示します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.DefualtLanguage">
      <summary>
Unicode 値があいまいな場合に使用する言語を指定します。これは一次言語とサブ言語の両方を含む LANGID です。<see cref="T:FarPoint.Win.UniscribeUtil.State" /> の DigitSubstitute が設定されている場合に数字の形状を選択するために、数値処理で使用されます。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.ContextDigits">
      <summary>
DefaultLanguage ではなく、前にある直近のストロング テキストに従って国の数字が選択されることを指定します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.InvertPreBoundDir">
      <summary>
デフォルトでは、文字列の先頭のテキストは、ベース埋め込みレベルが０の場合にはストロング LTR 文字の後に続くようにレイアウトされ、ベース埋め込みレベルが１の場合にはストロング RTL 文字に続くようにレイアウトされます。初期コンテキストをベース埋め込みレベルの逆に変更するには、InvertPreBoundDir を設定します。このメンバは、GetCharacterPlacement のレガシ サポートのために用意されています。
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.InvertPostBoundDir">
      <summary>
デフォルトでは、文字列の最後のテキストは、ベース埋め込みレベルと同じ方向のテキストがその後に続くようにレイアウトされます。末尾コンテキストをベース埋め込みレベルの逆に変更するには、InvertPreBoundDir を設定します。このフラグは、GetCharacterPlacement のレガシ サポートのために用意されています。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.LinkStringBefore">
      <summary>
文字列の最初の文字を、前の文字と結合されているような形状にします。
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.LinkStringAfter">
      <summary>
文字列の最後の文字を、後の文字と結合されているような形状にします。
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.NeutralOverride">
      <summary>
文字列内のすべてのニュートラル文字を、その前後の文字の埋め込みレベルを持つストロング文字として扱います。これは実質的にニュートラル文字を元の位置に固定し、文字の配置変更はニュートラル文字の間でのみ起こるようになります。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.NumericOverride">
      <summary>
文字列内のすべての数字を、その前後の文字の埋め込みレベルを持つストロング文字として扱います。これは実質的に数字を元の位置に固定し、文字の配置変更は数字の間でのみ起こるようになります。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.Control.LegacyBidiClass">
      <summary>
プラス記号とマイナス記号をニュートラル文字（つまり、方向を持たない文字）として扱い、スラッシュを一般的な区切り文字として扱います。 
              
Windows XP：プラス記号とマイナス記号はヨーロッパの区切り文字として扱われます。 
            </summary>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.State">
      <summary>
State 構造体は、Unicode アルゴリズム状態を初期化するために Script.Itemize の入力パラメータとして使用します。また、ScriptItemize によって返される解析結果の要素でもあります。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.BidiLevelFlagMask">
      <summary>
BidiLevel プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.OverrideDirectionFlagMask">
      <summary>
OverrideDirection プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.InhibitSymSwapFlagMask">
      <summary>
InhibitSymSwap プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.CharShapeFlagMask">
      <summary>
CharShape プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.DigitSubstituteFlagMask">
      <summary>
DigitSubstitute プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.InhibitLigateFlagMask">
      <summary>
InhibitLigate プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.DisplayZWGFlagMask">
      <summary>
DisplayZWG プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.ArabicNumContextFlagMask">
      <summary>
ArabicNumContext プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State.GcpClustersFlagMask">
      <summary>
GcpClusters プロパティのデータの取得または設定に使用されるマスクを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.State._flags">
      <summary>
スクリプト状態のフラグを保存します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.BidiLevel">
      <summary>
Unicode 双方向アルゴリズムに従ってこのランのすべての文字に関連付けられた埋め込みレベル。ScriptItemize に渡すとき、LTR ベース埋め込みレベルの場合は０で初期化し、RTL の場合は１で初期化する必要があります。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.OverrideDirection">
      <summary>
このレベルがオーバーライド レベル（LRO/RLO）の場合は True。オーバーライド レベルでは、文字は左から右か右から左のどちらか一方向にのみレイアウトされます。数字やストロング文字が逆向きになることはありません。この初期値は、文字列内の LRE、RLE、LRO、RLO のいずれかのコードによってリセットされることに注意してください。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.InhibitSymSwap">
      <summary>
シェーピング エンジンが、Unicode ミラー グリフ（カッコなど）のミラーリングを無視する場合は True。Unicode 文字の ISS によって設定され、ASS によってクリアされます。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.CharShape">
      <summary>
Unicode のアラビア表示形領域の文字コードをシェーピングする場合は True（実装されていません）。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.DigitSubstitute">
      <summary>
U+0030 ～ U+0039 の文字コード（ヨーロッパ数字）を国の数字に置き換える場合は True。Unicode の NADS によって設定され、NODS によってクリアされます。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.InhibitLigate">
      <summary>
アラビア文字またはヘブライ文字のシェーピングに合字を使用しない場合は True。 
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.DisplayZWG">
      <summary>
制御文字を表示グリフとしてシェーピングする場合は True（通常、制御文字は空白グリフとしてシェーピングされ、幅はゼロになります）。
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.ArabicNumContext">
      <summary>
True の場合は、先行するストロング文字列が、Unicode 規格バージョン 2.0 に記載されたルール P0 の目的でアラビア語であったことを示します。これは通常、アラビア語の RTL 段落をアイテム化する前は True、それ以外の場合は False に設定されます。
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.State.GcpClusters">
      <summary>
GetCharacterPlacement レガシ サポートの目的のみ。アラビア語版およびヘブライ語版 Windows で GetCharacterPlacement が行うのと同じように pwLogClust 配列を生成するよう ScriptShape に要求する場合は、True に初期化します。アラビア語とヘブライ語のアイテムのみに影響します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.TextAnalyseFlags">
      <summary>
Text.Analyse のフラグを定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Password">
      <summary>
入力文字列に、iLength に指定した回数複製される単一の文字が含まれます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Tab">
      <summary>
タブを展開します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Clip">
      <summary>
文字列を要求された幅で切り取ります。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Fit">
      <summary>
文字列を要求された幅に位置揃えします。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.DZWG">
      <summary>
制御文字の表示グリフを提供します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Fallback">
      <summary>
代替フォントを使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Break">
      <summary>
ブレーク フラグ（文字および単語の停止位置かどうか）を返します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Glyphs">
      <summary>
グリフ、位置、および属性を生成します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.RightToLeft">
      <summary>
ベース埋め込みレベル１。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.GCP">
      <summary>
GetCharacterPlacement 関数の規約での欠損グリフおよび LogCLust を返します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Hotkey">
      <summary>
&amp; を後続コードポイントの下線に置き換えます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Metafile">
      <summary>
グリフを使わず、ExtTextOutW Unicode 関数を呼び出してアイテムを書き出します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.Link">
      <summary>
FE フォントのリンク／関連付けを非コンプレックス テキストに適用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.HideHotkey">
      <summary>
表示文字列から最初の &amp; を削除します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.HotkeyOnly">
      <summary>
下線のみを表示します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.FullMeasure">
      <summary>
内部使用。完全な幅を計算し、要求された幅に収まる文字数を出力します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.LPKANSIFALLBACK">
      <summary>
内部使用。BiDi hDC の呼び出しを除くすべての LPK Ansi 呼び出しに対して FallBack を有効にします。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.PIDX">
      <summary>
内部使用。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.LAYOUTRTL">
      <summary>
内部使用。DC がミラーリングされるときに使用されます。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.DONTGLYPH">
      <summary>
内部使用。メタファイル化中に GDI によってのみ使用されます。位置決めのために ExtTextOutA を使用します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.TextAnalyseFlags.NOKASHIDA">
      <summary>
内部使用。非アラビア語グリフのみを位置揃えする場合に GCP によって使用されます。
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.eScript">
      <summary>
シェーピング エンジン
            </summary>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.RTLFlag">
      <summary>
レンダリングの向き
            </summary>
      <value>[RTL flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.LayoutRTLFlag">
      <summary>
GCP クラスの ARABIC/HEBREW および LOCALNUMBER に対して設定します。
            </summary>
      <value>[layout RTL flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.LinkBeforeFlag">
      <summary>
このアイテムの前に ZWJ があったことを示します。
            </summary>
      <value>[link before flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.LinkAfterFlag">
      <summary>
このアイテムの後に ZWJ があることを示します。
            </summary>
      <value>[link after flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.LogicalOrder">
      <summary>
ScriptShape/Place への入力としてクライアントによって設定されます。
            </summary>
      <value>[logical order] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="P:FarPoint.Win.UniscribeUtil.SCRIPT_ANALYSIS.NoGlyphIndexFlag">
      <summary>
ScriptShape/Place によって生成されます。このアイテムはグリフ インデックスを使用しません。
            </summary>
      <value>[no glyph index flag] の場合は <c>True</c>、それ以外の場合は <c>False</c>。</value>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.Tab">
      <summary>
Text.Analyse メソッドのタブ位置を定義します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Tab._tabStops">
      <summary>
TabStops の長さと一致します（Uniscribe API で必要とされます）。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Tab.Scale">
      <summary>
iTabOrigin および pTabStops に設定された値のスケーリング係数。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Tab.TabStops">
      <summary>
各エントリはタブ ストップ位置を指定します。正の値は近端の位置揃えを示し、負の値は遠端の位置揃えを示します。 
            </summary>
    </member>
    <member name="F:FarPoint.Win.UniscribeUtil.Tab.TabOrigin">
      <summary>
タブ ストップの初期オフセット。 
            </summary>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.Tab.SafeNative">
      <summary>
Uniscribe API に渡される前に呼び出されます。
            </summary>
    </member>
    <member name="T:FarPoint.Win.UniscribeUtil.DatumHelper">
      <summary>
Uniscribe のデータ管理に役立つメソッドを定義します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.UInt16,System.UInt16)">
      <summary>
ushort 値フラグからフラグを取得する内部メソッド。
            </summary>
      <param name="flags">
<b>ushort</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>ushort</b> はフラグ マスクを示します。
            </param>
      <returns>
フラグを返します。 
            </returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.UInt16,System.UInt16,System.Boolean)">
      <summary>
ushort 値フラグからフラグを取得する内部メソッド。
            </summary>
      <param name="flags">
<b>ushort</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>ushort</b> はフラグ マスクを示します。
            </param>
      <returns>
戻り値 
            </returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.Int16,System.Int16)">
      <summary>
ushort 値フラグからフラグを取得する内部メソッド。
            </summary>
      <param name="flags">
<b>short</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>short</b> はフラグ マスクを示します。
            </param>
      <returns>
フラグを返します。 
            </returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.UInt64,System.UInt64)">
      <summary>
ushort 値フラグからフラグを取得する内部メソッド。
            </summary>
      <param name="flags">
<b>UInt64</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>UInt64</b> はフラグ マスクを示します。
            </param>
      <returns>
フラグを返します。 
            </returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.Byte,System.Byte)">
      <summary>
ushort 値フラグからフラグを取得する内部メソッド。
            </summary>
      <param name="flags">
<b>byte</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>byte</b> はフラグ マスクを示します。
            </param>
      <returns>
フラグを返します。 
            </returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.GetFlag(System.UInt64,System.UInt64,System.Boolean)">
      <summary>
フラグを取得します。
            </summary>
      <param name="flags">フラグ。</param>
      <param name="flagMask">フラグ マスク。</param>
      <returns>
      </returns>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.UInt16@,System.UInt16,System.Boolean)">
      <summary>
値をフラグに設定する内部メソッド。
            </summary>
      <param name="flags">
<b>ushort</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>ushort</b> はフラグ マスクを示します。
            </param>
      <param name="value">
<b>bool</b> 値は値を示します。
            </param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.UInt16@,System.UInt16,System.UInt16)">
      <summary>
値をフラグに設定する内部メソッド。
            </summary>
      <param name="flags">
<b>ushort</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>ushort</b> はフラグ マスクを示します。
            </param>
      <param name="value">
<b>ushort</b> 値は値を示します。
            </param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.Int16@,System.Int16,System.Boolean)">
      <summary>
値をフラグに設定する内部メソッド。
            </summary>
      <param name="flags">
<b>short</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>short</b> はフラグ マスクを示します。
            </param>
      <param name="value">
<b>bool</b> 値は値を示します。
            </param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.UInt64@,System.UInt64,System.Boolean)">
      <summary>
値をフラグに設定する内部メソッド。
            </summary>
      <param name="flags">
<b>UInt64</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>UInt64</b> はフラグ マスクを示します。
            </param>
      <param name="value">
<b>bool</b> 値は値を示します。
            </param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.Byte@,System.Byte,System.Boolean)">
      <summary>
値をフラグに設定する内部メソッド。
            </summary>
      <param name="flags">
<b>byte</b> はフラグを含みます。
            </param>
      <param name="flagMask">
<b>byte</b> はフラグ マスクを示します。
            </param>
      <param name="value">
<b>bool</b> 値は値を示します。
            </param>
    </member>
    <member name="M:FarPoint.Win.UniscribeUtil.DatumHelper.SetFlag(System.UInt64@,System.UInt64,System.UInt64)">
      <summary>
フラグを設定します。
            </summary>
      <param name="flags">フラグ。</param>
      <param name="flagMask">フラグ マスク。</param>
      <param name="value">値。</param>
    </member>
    <member name="T:FarPoint.Win.UnlockDialog">
      <summary>
システムのロック解除ダイアログを表します。
            </summary>
    </member>
    <member name="F:FarPoint.Win.UnlockDialog.components">
      <summary>
            必須デザイナ変数。
            </summary>
    </member>
    <member name="M:FarPoint.Win.UnlockDialog.#ctor">
      <summary>
新しいロック解除ダイアログを作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.UnlockDialog.#ctor(System.Object,System.Boolean)">
      <summary>
インスタンスと、すでに購入済みかどうかを指定して、新しいロック解除ダイアログを作成します。
            </summary>
      <param name="instance">インスタンスを含むオブジェクト</param>
      <param name="alreadyPurchased">製品がすでに購入されているかどうか</param>
    </member>
    <member name="M:FarPoint.Win.UnlockDialog.Dispose(System.Boolean)">
      <summary>
            使用されたリソースをすべてクリーンアップします。
            </summary>
    </member>
    <member name="M:FarPoint.Win.UnlockDialog.InitializeComponent">
      <summary>
            デザイナサポートの必須メソッド。このメソッドの内容は
            コードエディタで変更しないでください。
            </summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyleTheme">
      <summary>
uxtheme.dll の表示スタイル（Windows XP テーマ）ハンドルを表します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.#cctor">
      <summary>
内部使用のみ。表示スタイル（XP テーマ）を作成します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.Finalize">
      <summary>
内部使用のみ。表示スタイル（XP テーマ）を処理します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.#ctor(System.String)">
      <summary>
新しい表示スタイル（XP テーマ）を作成します。
            </summary>
      <param name="classList">テーマ情報を検索するためのクラス リスト</param>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.GetTheme(System.Boolean)">
      <summary>
このインスタンスの表示スタイル（Theme オブジェクト）を取得します。
            </summary>
      <param name="create">Theme オブジェクトの作成を強制するか、既存の Theme オブジェクトへの参照を追加する場合は True、Theme が存在するかどうかを問い合わせる場合は False</param>
      <returns>このインスタンスの Theme オブジェクト。create が False で、このインスタンスの Theme オブジェクトがまだ作成されていない場合は Null。</returns>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.CloseTheme(FarPoint.Win.VisualStyleTheme.Theme)">
      <summary>
このインスタンスの Theme オブジェクトへの参照を解放し、これが Theme オブジェクトへの最後の参照である場合はテーマ ハンドルを閉じて Theme オブジェクトを削除します。
            </summary>
      <param name="theme">閉じるテーマ</param>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.OnThemeChanged(System.Object,System.EventArgs)">
      <summary>
ThemeChangedWindow の ThemeChanged イベントを処理し、クライアントの ThemeChanged イベントを発生させます。
            </summary>
      <param name="sender">VisualStyleTheme が初期化される場合以外は Null</param>
      <param name="e">EventArgs.Empty</param>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.Dispose">
      <summary>
内部使用のみ。表示スタイル（XP テーマ）を破棄します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.Dispose(System.Boolean)">
      <summary>
内部使用のみ。表示スタイル（XP テーマ）のシステム リソースを解放します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.VisualStyleTheme.Clone">
      <summary>
内部使用のみ。表示スタイル（XP テーマ）のクローンを作成します。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:FarPoint.Win.VisualStyleTheme.ClassList">
      <summary>
表示スタイル（XP テーマ）情報を検索するためのクラス リストを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.VisualStyleTheme.IsThemeActive">
      <summary>
表示スタイル（XP テーマ）がアクティブかどうかを取得します。
            </summary>
    </member>
    <member name="P:FarPoint.Win.VisualStyleTheme.hTheme">
      <summary>
uxtheme.dll から取得した表示スタイル（Windows XP テーマ）ハンドルを取得します。
            </summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyleTheme.Theme">
      <summary>
hTheme オブジェクトのラッパー
            </summary>
    </member>
    <member name="T:FarPoint.Win.VisualStyleTheme.ThemeChangedWindow">
      <summary>
WM_THEMECHANGED メッセージ（0x031A）をキャッチするためのウィンドウ。
            </summary>
    </member>
    <member name="E:FarPoint.Win.VisualStyleTheme.ThemeChangedWindow.ThemeChanged">
      <summary>
内部使用のみ。ThemeChanged イベントのハンドラ。
            </summary>
    </member>
    <member name="T:FarPoint.Win.XmlTypeConverter">
      <summary>
            ISerializeSupport（または関連シリアル化インタフェース）を実装するオブジェクトの型コンバータ。オブジェクトとそのxml表現を互いに変換します。
            </summary>
    </member>
    <member name="M:FarPoint.Win.XmlTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            指定した型を境界線オブジェクトに変換できるかどうかを判定します。
            </summary>
      <param name="context">ITypeDescriptorContext</param>
      <param name="sourceType">型</param>
      <returns>sourceTypeがStringの場合はTrue、それ以外の場合はFalse</returns>
    </member>
  </members>
</doc>
